{"version":3,"sources":["assets\\script\\Framework\\Scene\\SceneStyle\\AutoStyle.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import {SceneDirectionType} from '../Enum/SceneStyle'\r\nimport SceneManager from '../SceneManager'\r\nimport SceneDirectionChangeNotification from \"../SceneNotification/SceneDirectionChangeNotification\";\r\n\r\nexport default class AutoStyle implements ISceneStyle {\r\n\r\n    public executionStyle(width: number, height: number) {\r\n        this.updateSceneDirection();\r\n        if ((cc.view.getFrameSize().width / cc.view.getFrameSize().height) >= (width / height)) {\r\n            //宽度超出\r\n            let newWidth = cc.view.getFrameSize().width * (width / cc.view.getFrameSize().height);\r\n            cc.view.setDesignResolutionSize(newWidth, height, cc.ResolutionPolicy.FIXED_HEIGHT);\r\n        } else {\r\n            if (cc.view.getFrameSize().width > cc.view.getFrameSize().height) {\r\n                let newHeight = cc.view.getFrameSize().height * (width / cc.view.getFrameSize().width);\r\n                cc.view.setDesignResolutionSize(width, newHeight, cc.ResolutionPolicy.FIXED_WIDTH);\r\n            } else {\r\n                if ((cc.view.getFrameSize().width / cc.view.getFrameSize().height) >= (1000 / 1777)) {\r\n                    let newHeight = cc.view.getFrameSize().height * (1000 / cc.view.getFrameSize().width);\r\n                    cc.view.setDesignResolutionSize(1000, newHeight, cc.ResolutionPolicy.FIXED_HEIGHT);\r\n                } else {\r\n                    let newHeight = cc.view.getFrameSize().height * (1000 / cc.view.getFrameSize().width);\r\n                    cc.view.setDesignResolutionSize(1000, newHeight, cc.ResolutionPolicy.FIXED_WIDTH);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    updateSceneDirection() {\r\n        if (cc.view.getFrameSize().width < cc.view.getFrameSize().height) {\r\n            //直向\r\n            if (SceneManager.instance.sceneDirection == SceneDirectionType.PORTRAIT) return;\r\n            SceneManager.instance.sceneDirection = SceneDirectionType.PORTRAIT;\r\n            SceneDirectionChangeNotification.instance.notify(SceneDirectionType.PORTRAIT);\r\n        } else {\r\n            //橫向\r\n            if (SceneManager.instance.sceneDirection == SceneDirectionType.LANDSCAPE) return;\r\n            SceneManager.instance.sceneDirection = SceneDirectionType.LANDSCAPE;\r\n            SceneDirectionChangeNotification.instance.notify(SceneDirectionType.LANDSCAPE);\r\n        }\r\n    }\r\n}"]}