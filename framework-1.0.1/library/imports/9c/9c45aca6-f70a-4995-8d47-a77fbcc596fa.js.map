{"version":3,"sources":["assets\\script\\Framework\\Process\\ISlotGameManager.ts"],"names":[],"mappings":"","file":"","sourceRoot":"/","sourcesContent":["import {AutoType} from '../Config/Enum/ConfigEnum'\r\nimport {UserBetPoint} from \"../Config/IConfig/ISlotConfigManager\";\r\nimport {GameState, GameType} from \"./Enum/GameState\";\r\nimport AutoStateChangeObserver from \"./GameObserver/AutoStateChangeObserver\";\r\nimport SpeedStateChangeObserver from \"./GameObserver/SpeedStateChangeObserver\";\r\nimport UserMoneyChangeObserver from \"./GameObserver/UserMoenyChangeObserver\";\r\nimport UserTotalBetChangeObserver from \"./GameObserver/UserTotalBetChangeObserver\";\r\n\r\n/**\r\n * @Author XIAO-LI-PIN\r\n * @Description (介面)遊戲管理器,管理當前流程,遊戲當前狀態\r\n * @Date 2021-05-14 下午 03:44\r\n * @Version 1.1\r\n */\r\nexport default interface ISlotGameManager {\r\n\r\n    /**\r\n     * 當前遊戲狀態\r\n     */\r\n    gameState: GameState;\r\n\r\n    /**\r\n     * 當前自動模式\r\n     */\r\n    autoType: AutoType;\r\n\r\n    /**\r\n     * 當前自動狀態\r\n     */\r\n    isAutoState: boolean;\r\n\r\n    /**\r\n     * 當前加速狀態\r\n     */\r\n    isSpeedUp: boolean;\r\n\r\n    /**\r\n     * 當前自動剩餘次數\r\n     */\r\n    automaticRemainingCount: number;\r\n\r\n    /**\r\n     * 當前玩家金額\r\n     */\r\n    userMoney: number;\r\n\r\n    /**\r\n     * 當前押注資訊,回傳server資訊\r\n     */\r\n    userBetPoint: UserBetPoint;\r\n\r\n    /**\r\n     * 是否Server有回傳\r\n     */\r\n    isResultOk: boolean;\r\n\r\n    /**\r\n     * 執行設定好的流程\r\n     */\r\n    play(): Promise<void>;\r\n\r\n    /**\r\n     * 設定流程\r\n     * @param {GameType} gameType\r\n     * @param {ISlotGameProcess} process\r\n     */\r\n    setProcess(gameType: GameType | string, process: IProcess): this;\r\n\r\n\r\n    /**\r\n     * 更換流程\r\n     * @param {GameType} gameType\r\n     */\r\n    changeProcess(gameType: GameType | string):void;\r\n\r\n    /**\r\n     * 設定初始流程\r\n     * @param processName\r\n     */\r\n    setInitialProcess(processName: string | GameType):void;\r\n\r\n\r\n    /**\r\n     * 拿取Framework內用戶更新金額時,推播給框架的綁定者\r\n     * 注意:如果取消框架內的訂閱者,框架內的參數將無法自動更新,需手動自行更新\r\n     * @returns {UserMoneyChangeObserver}\r\n     */\r\n    getUserMoneyChangeObserver(): UserMoneyChangeObserver;\r\n\r\n    /**\r\n     * 拿取Framework內用戶更換押注時,推播給框架的綁定者\r\n     * 注意:如果取消框架內的訂閱者,框架內的參數將無法自動更新,需手動自行更新\r\n     * @returns {UserTotalBetChangeObserver}\r\n     */\r\n    getUserTotalBetChangeObserver(): UserTotalBetChangeObserver;\r\n\r\n    /**\r\n     * 拿取Framework內用戶更新auto狀態時,推播給框架的綁定者\r\n     * 注意:如果取消框架內的訂閱者,框架內的參數將無法自動更新,需手動自行更新\r\n     * @returns {AutoStateChangeObserver}\r\n     */\r\n    getAutoStateChangeObserver(): AutoStateChangeObserver;\r\n\r\n    /**\r\n     * 拿取Framework內用戶更新加速狀態時,推播給框架的綁定者\r\n     * 注意:如果取消框架內的訂閱者,框架內的參數將無法自動更新,需手動自行更新\r\n     * @returns {SpeedStateChangeObserver}\r\n     */\r\n    getSpeedStateChangeObserver(): SpeedStateChangeObserver;\r\n\r\n    /**\r\n     * 更新當前玩家押注金額\r\n     * 如需同步,建議使用推播事件更新\r\n     * @param {number} betIndex\r\n     * @returns {UserBetPoint} : 當前用戶押注的回傳server物件狀態\r\n     */\r\n    updateUserBetPoint(betIndex: number):UserBetPoint;\r\n\r\n    /**\r\n     * 更新當前auto次數\r\n     * 如果需要同步所有auto,建議使用推播事件更新\r\n     * @param {AutoType} autoType\r\n     * @returns {AutoType} : 當前auto類型\r\n     */\r\n    updateAutoCount(autoType: AutoType):AutoType;\r\n\r\n    /**\r\n     * 更動當前自動狀態\r\n     * 如果是自動狀態,將會更動為非自動\r\n     * 如果是非自動狀態,將會更動自動\r\n     * 如果需要同步所有auto狀態,建議綁定推播事件更新\r\n     * @returns {boolean} : 是否需要自動\r\n     */\r\n    updateAuto():boolean;\r\n\r\n    /**\r\n     * 更新當前速度\r\n     * 如果是加速狀態,將會更動為不加速\r\n     * 如果無加速狀態,將會更動加速狀態\r\n     * 如果需要同步所有auto狀態,建議綁定推播事件更新\r\n     * @returns {boolean} : 是否需要加速\r\n     */\r\n    updateSpeed():boolean;\r\n\r\n    /**\r\n     * 清除堵塞狀態\r\n     * 注意:清除該狀態後,該次的流程即使尚未執行完,也能執行下次流程\r\n     */\r\n    remake():void;\r\n\r\n}"]}