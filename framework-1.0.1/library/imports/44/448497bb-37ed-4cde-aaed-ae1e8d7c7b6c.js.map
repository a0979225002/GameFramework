{"version":3,"sources":["assets\\script\\Framework\\GlobalMethod\\Util.ts"],"names":[],"mappings":";;;;;;AAAA;IAAA;IA6CA,CAAC;IA3CG;;;;OAIG;IACI,YAAO,GAAd,UAAe,KAAa,EAAE,MAAc;QACxC,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,MAAM,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,MAAM,IAAI,CAAC,CAAC,CAAC,CAAC;IAC9G,CAAC;IAED;;;;OAIG;IACI,YAAO,GAAd,UAAe,KAAa,EAAE,MAAc;QACxC,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,MAAM,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,MAAM,IAAI,CAAC,CAAC,CAAC,CAAC;IAC9G,CAAC;IAED;;;;OAIG;IACI,WAAM,GAAb,UAAc,KAAa,EAAE,MAAc;QACvC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,MAAM,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,MAAM,IAAI,CAAC,CAAC,CAAC,CAAC;IAC5G,CAAC;IAED;;;OAGG;IACI,kBAAa,GAApB,UAAqB,KAAa;QAE9B,IAAI,aAAa,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QAEnD,IAAI,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,MAAM,GAAG,aAAa,CAAC;QAEjD,IAAI,aAAa,IAAI,CAAC,EAAE;YACpB,OAAO,CAAC,CAAC;SACZ;aAAM;YACH,OAAO,KAAK,CAAC;SAChB;IACL,CAAC;IACL,WAAC;AAAD,CA7CA,AA6CC,IAAA","file":"","sourceRoot":"/","sourcesContent":["export default class Util {\r\n\r\n    /**\r\n     * 四捨五入到小數點第N位\r\n     * @param {number} float : 浮點數\r\n     * @param {number} number : 要四捨五入到哪一位\r\n     */\r\n    static myRound(float: number, number: number): number {\r\n        return Math.round(Math.round(float * Math.pow(10, (number || 0) + 1)) / 10) / Math.pow(10, (number || 0));\r\n    }\r\n\r\n    /**\r\n     * 無條件捨去到小數點第N位\r\n     * @param {number} float : 浮點數\r\n     * @param {number} number : 要無條件捨去到哪一位\r\n     */\r\n    static myFloor(float: number, number: number): number {\r\n        return Math.floor(Math.floor(float * Math.pow(10, (number || 0) + 1)) / 10) / Math.pow(10, (number || 0));\r\n    }\r\n\r\n    /**\r\n     * 無條件進位到小數點第N位\r\n     * @param {number} float : 浮點數\r\n     * @param {number} number : 要無條件進位到哪一位\r\n     */\r\n    static myCeil(float: number, number: number): number {\r\n        return Math.ceil(Math.ceil(float * Math.pow(10, (number || 0) + 1)) / 10) / Math.pow(10, (number || 0));\r\n    }\r\n\r\n    /**\r\n     * 檢查該數字為小數有幾位\r\n     * @param {number}float : 浮點數\r\n     */\r\n    static decimalsCount(float: number): number {\r\n\r\n        let decimalsIndex = String(float).indexOf('.') + 1;\r\n\r\n        let count = String(float).length - decimalsIndex;\r\n\r\n        if (decimalsIndex == 0) {\r\n            return 0;\r\n        } else {\r\n            return count;\r\n        }\r\n    }\r\n}"]}