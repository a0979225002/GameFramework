{"version":3,"sources":["assets\\script\\Framework\\Slot\\ISlotStyleManager.ts"],"names":[],"mappings":"","file":"","sourceRoot":"/","sourcesContent":["import ASlot from './ASlot'\r\nimport {StyleData} from './SlotStyleManager'\r\n\r\nexport default interface ISlotStyleManager {\r\n\r\n    readonly slot: ASlot;\r\n\r\n    /**\r\n     * 添加執行流程的class 需繼承 ISlot\r\n     * @return {this}\r\n     */\r\n    setSlotTemplate<T extends new(styleData: StyleData) => ASlot>(slotTemplate: T): this;\r\n\r\n    /**\r\n     * 老虎機顯示答案前的最少轉動次數\r\n     * @param {number} count\r\n     * @return {this}\r\n     */\r\n    setSlotTurnCount(count: number): this;\r\n\r\n    /**\r\n     * 加速時老虎機顯示答案前的最少轉動次數\r\n     * @param {number} count\r\n     * @return {this}\r\n     */\r\n    setSlotSpeedUpTurnCount(count: number): this;\r\n\r\n    /**\r\n     * 老虎機每隔格子高度\r\n     * @param {number} height\r\n     * @return {this}\r\n     */\r\n    setSlotGridHeight(height: number): this;\r\n\r\n    /**\r\n     * 老虎機一般狀態速度\r\n     * @param {number} time\r\n     * @return {this}\r\n     */\r\n    setSlotGirdSpeed(time: number): this;\r\n\r\n    /**\r\n     * 該老虎機 每列的格子數量\r\n     * @param {number} gridCount\r\n     * @return {this}\r\n     */\r\n    setSlotRowGridCount(gridCount: number): this\r\n\r\n    /**\r\n     * 加速時的加速被率\r\n     * @param {number} multiple\r\n     * @return {this}\r\n     */\r\n    setSpeedUpMultiple(multiple: number): this;\r\n\r\n    /**\r\n     * 要執行輪播動化轉動老虎機的node\r\n     * @param {Array<cc.Node>} node\r\n     * @return {this}\r\n     */\r\n    slotColumnToTween(node: Array<cc.Node>): this;\r\n\r\n    /**\r\n     * 非加速模式,每列停止的時間間格\r\n     * @param {number} time\r\n     * @return {this}\r\n     */\r\n    setColumnIntervalTime(time: number): this;\r\n\r\n    /**\r\n     * 所有格子,做循環老虎機時,需更動該Node的位置\r\n     * @param {Map<number, Array<cc.Node>>} node\r\n     * @return {this}\r\n     */\r\n    setGridNodeToMap(node: Map<number, Array<cc.Node>>): this;\r\n\r\n    /**\r\n     * 所有格子的圖片,做循環老虎雞時,需更動的圖片\r\n     * @param {Map<number, Array<cc.Sprite>>} sprite\r\n     * @return {this}\r\n     */\r\n    setGirdSpriteToMap(sprite: Map<number, Array<cc.Sprite>>): this;\r\n\r\n    /**\r\n     * slot 所有靜態格子圖片\r\n     * @param {Map<string, cc.SpriteFrame>} img\r\n     * @return {this}\r\n     */\r\n    setGridImg(img: Map<string, cc.SpriteFrame>): this\r\n\r\n    /**\r\n     * 初始所有操作,並實例化  綁定的 slot Class\r\n     */\r\n    build():void;\r\n}"]}