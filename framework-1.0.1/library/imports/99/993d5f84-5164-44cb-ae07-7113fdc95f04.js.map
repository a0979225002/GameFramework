{"version":3,"sources":["assets\\script\\Framework\\Slot\\SlotNotifivation\\ScrollFocusStateNotification.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAAA,sEAA4D;AAC5D,yDAAoD;AAGpD;;;;;GAKG;AACH;IAMI;QACI,IAAI,CAAC,QAAQ,GAAG,IAAI,GAAG,EAA4B,CAAC;IACxD,CAAC;IAMD,sBAAkB,wCAAQ;QAJ1B;;;WAGG;aACH;YACI,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;gBACjB,IAAI,CAAC,SAAS,GAAG,IAAI,4BAA4B,EAAE,CAAC;aACvD;YACD,OAAO,IAAI,CAAC,SAAS,CAAC;QAC1B,CAAC;;;OAAA;IAED,gDAAS,GAAT,UAAU,QAAkC,EAAE,WAAoB;QAC9D,IAAI,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE;YAC7B,sBAAY,CAAC,QAAQ,CAAC,YAAY,CAAC,4BAAS,CAAC,OAAO,EAAK,QAAQ,mHAAsB,CAAC,CAAA;YACxF,OAAO;SACV;QACD,QAAQ,CAAC,WAAW,GAAG,WAAW,CAAC;QACnC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;IAEhC,CAAC;IAED,kDAAW,GAAX,UAAY,QAAkC;QAE1C,IAAI,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE;YAC7B,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;SAClC;aAAM;YACH,sBAAY,CAAC,QAAQ,CAAC,YAAY,CAAC,4BAAS,CAAC,aAAa,EAAK,QAAQ,+GAAuB,CAAC,CAAC;SACnG;IACL,CAAC;IAED;;;;OAIG;IACH,6CAAM,GAAN,UAAO,KAAY,EAAC,MAAe;;QAC/B,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,GAAG,CAAC,EAAE;;gBACxB,KAAqB,IAAA,KAAA,SAAA,IAAI,CAAC,QAAQ,CAAA,gBAAA,4BAAE;oBAA/B,IAAI,QAAQ,WAAA;oBACb,QAAQ,CAAC,gBAAgB,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;oBACzC,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE;wBACvB,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;qBAC9B;iBACJ;;;;;;;;;SACJ;IACL,CAAC;IAED,wDAAiB,GAAjB;QACI,OAAO,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC;IAC9B,CAAC;IAED,sDAAe,GAAf;QACI,OAAO,IAAI,CAAC,QAAQ,CAAC;IACzB,CAAC;IACL,mCAAC;AAAD,CA/DA,AA+DC,IAAA","file":"","sourceRoot":"/","sourcesContent":["import {ErrorType} from \"../../Error/Enum/ErrorManagerEnum\";\r\nimport ErrorManager from \"../../Error/ErrorManager\";\r\nimport ScrollFocusStateObserver from \"../SlotObserver/ScrollFocusStateObserver\";\r\n\r\n/**\r\n * @Author XIAO-LI-PIN\r\n * @Description 通知管理器 : 瞇牌時的狀態事件推播管理\r\n * @Date 2021-05-21 下午 12:08\r\n * @Version 1.0\r\n */\r\nexport default class ScrollFocusStateNotification implements INotificationManager {\r\n\r\n    private readonly observer: Set<ScrollFocusStateObserver>;\r\n\r\n    private static _instance: ScrollFocusStateNotification;\r\n\r\n    private constructor() {\r\n        this.observer = new Set<ScrollFocusStateObserver>();\r\n    }\r\n\r\n    /**\r\n     * 懶漢加載,單例模式\r\n     * @returns {ScrollFocusStateNotification}\r\n     */\r\n    public static get instance(): ScrollFocusStateNotification {\r\n        if (!this._instance) {\r\n            this._instance = new ScrollFocusStateNotification();\r\n        }\r\n        return this._instance;\r\n    }\r\n\r\n    subscribe(observer: ScrollFocusStateObserver, isPermanent: boolean) {\r\n        if (this.observer.has(observer)) {\r\n            ErrorManager.instance.executeError(ErrorType.SceneFW, `${observer} 該類已經註冊過瞇牌時的狀態事件,請檢查`)\r\n            return;\r\n        }\r\n        observer.isPermanent = isPermanent;\r\n        this.observer.add(observer);\r\n\r\n    }\r\n\r\n    unsubscribe(observer: ScrollFocusStateObserver) {\r\n\r\n        if (this.observer.has(observer)) {\r\n            this.observer.delete(observer);\r\n        } else {\r\n            ErrorManager.instance.executeError(ErrorType.GameProcessFW, `${observer} : 該觀察類尚未綁定過,無須移除觀察對象`);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 推送瞇排事件\r\n     * @param {number} index : 需要操作哪個列\r\n     * @param {boolean} isShow : 要顯示還關閉\r\n     */\r\n    notify(index:number,isShow: boolean) {\r\n        if (this.observer.size > 0) {\r\n            for (let observer of this.observer) {\r\n                observer.pushNotification(index, isShow);\r\n                if (!observer.isPermanent) {\r\n                    this.unsubscribe(observer);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    getSubscribeCount(): number {\r\n        return this.observer.size;\r\n    }\r\n\r\n    getAllSubscribe(): Set<ScrollFocusStateObserver> {\r\n        return this.observer;\r\n    }\r\n}"]}