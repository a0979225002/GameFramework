{"version":3,"sources":["assets\\script\\MainGameScript\\MainGameSetting.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import FreeOpenProcessTest from \"../../Test/GameProcess/FreeOpenProcess.test\";\r\nimport FreeProcessTest from \"../../Test/GameProcess/FreeProcessTest\";\r\nimport NormalBigWinProcessTest from \"../../Test/GameProcess/NormalBigWinProcess.test\";\r\nimport AudioManager from '../Framework/Audio/AudioManager'\r\nimport {AudioStateType} from \"../Framework/Audio/Enum/AudioStateType\";\r\nimport LoadResManager from '../Framework/LoadResources/LoadResManager'\r\nimport {GameType} from '../Framework/Process/Enum/GameState'\r\nimport GameProcess from \"../Framework/Process/Procress/GameProcess\";\r\nimport SlotGameProcess from '../Framework/Process/Procress/SlotGameProcess'\r\nimport SlotGameManager from '../Framework/Process/SlotGameManager'\r\nimport {SceneDirectionType, SceneStyle} from '../Framework/Scene/Enum/SceneStyle'\r\nimport SceneManager from '../Framework/Scene/SceneManager'\r\nimport SceneDirectionChangeNotification from \"../Framework/Scene/SceneNotification/SceneDirectionChangeNotification\";\r\nimport SceneDirectionChangeObserver from \"../Framework/Scene/SceneObserver/SceneDirectionChangeObserver\";\r\nimport AMainGameSettingTemplate from '../Framework/Template/Setting/AMainGameSettingTemplate'\r\nimport SocketSetting from \"../Socket/SocketSetting\";\r\nimport MainGameFreeProcess from './GameProcess/MainGameFreeProcess'\r\nimport MainGameNormalProcess from \"./GameProcess/MainGameNormalProcess\";\r\n\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class MainGameSetting extends AMainGameSettingTemplate {\r\n\r\n    @property(cc.Node)\r\n    public allButtonH: cc.Node = null;\r\n    @property(cc.Node)\r\n    public allButtonV: cc.Node = null;\r\n    @property(cc.Node)\r\n    public mainGameModuleV: cc.Node = null;\r\n    @property(cc.Node)\r\n    public labelInformationH: cc.Node = null;\r\n    @property(cc.Node)\r\n    public labelInformationV: cc.Node = null;\r\n    @property(cc.Node)\r\n    public loadingDialog: cc.Node = null;\r\n\r\n    prefabIndex: object = {\r\n        \"LookAt_Node\": 3,\r\n        \"WinPointAnimation\": 0,\r\n        \"FreeOpenFrame\": 0,\r\n        \"FreeEnd\": 0,\r\n    }\r\n\r\n    /**\r\n     * 初始,重新更新 scene適配\r\n     */\r\n    protected onCreate() {\r\n        //註冊scene樣式更新推播事件\r\n        SceneDirectionChangeNotification\r\n            .instance\r\n            .subscribe(this.getSceneDirectionObserver(), true);\r\n        //重新更新scene方向,scene跳轉會造成需重新式配size問題\r\n        //重新更新mainScene的長寬是配\r\n        SceneManager.instance.updateSize(SceneStyle.AUTO);\r\n        //第一次加載,需先自行更新一次\r\n        this.updateSceneDirection(SceneManager.instance.sceneDirection);\r\n\r\n        //將載入效果dialog節點放置在倒數第二個位置\r\n        this.loadingDialog.setSiblingIndex(98);\r\n\r\n        //將錯誤視窗dialog節點放置最後一個位置\r\n        let errorFrame = cc.instantiate(LoadResManager.instance.prefabRes.get(\"ErrorFramePrefab\"));\r\n        this.node.parent.addChild(errorFrame);\r\n        errorFrame.setSiblingIndex(99)\r\n    }\r\n\r\n    /**\r\n     * 建立詳情頁面\r\n     */\r\n    protected setHistoryDetail() {\r\n        // 建立詳情頁面\r\n        cc[\"plug\"].Record.createMainElem();\r\n        // 初始化title語系\r\n        let obj_langStr = {};\r\n        obj_langStr[\"gameTitle\"] = 'GAME-000';\r\n        obj_langStr[\"navTitle\"] = SocketSetting.t(\"S_9068\");\r\n        obj_langStr[\"date\"] = SocketSetting.t(\"S_9069\");\r\n        obj_langStr[\"id\"] = SocketSetting.t(\"S_9070\");\r\n        obj_langStr[\"bet\"] = SocketSetting.t(\"S_9071\");\r\n        obj_langStr[\"winLose\"] = SocketSetting.t(\"S_9081\");\r\n        obj_langStr[\"noData\"] = SocketSetting.t(\"S_9074\");\r\n        obj_langStr[\"loadDone\"] = SocketSetting.t(\"S_9073\");\r\n        obj_langStr[\"mode\"] = [SocketSetting.t(\"S_9078\"), SocketSetting.t(\"S_9079\"), SocketSetting.t(\"S_9080\")];\r\n        if (window.test) {\r\n            cc[\"plug\"].Record.init({obj_langStr});\r\n        } else {\r\n            let container = document.querySelector('#gameBox');\r\n            cc[\"plug\"].Record.init({obj_langStr}, {container});\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * 直橫向監聽器\r\n     */\r\n    private getSceneDirectionObserver(): SceneDirectionChangeObserver {\r\n        return new SceneDirectionChangeObserver((type) => {\r\n            this.updateSceneDirection(type);\r\n        }, this);\r\n    }\r\n\r\n    /**\r\n     * 推波回傳當前scene直橫樣式\r\n     * 更新遊戲當前直式還是橫式\r\n     * @param {SceneDirectionType} sceneType\r\n     * @private\r\n     */\r\n    private updateSceneDirection(sceneType: SceneDirectionType) {\r\n        if (sceneType == SceneDirectionType.LANDSCAPE) {\r\n            this.labelInformationH.active = true;\r\n            this.allButtonH.active = true;\r\n            this.mainGameModuleV.active = false;\r\n            this.labelInformationV.active = false;\r\n            this.allButtonV.active = false;\r\n        } else if (sceneType == SceneDirectionType.PORTRAIT) {\r\n            this.labelInformationH.active = false;\r\n            this.allButtonH.active = false;\r\n            this.mainGameModuleV.active = true;\r\n            this.labelInformationV.active = true;\r\n            this.allButtonV.active = true;\r\n        } else {\r\n            cc.log(`MainGameSetting sceneDirectionEvent() 有錯誤 : ${sceneType}`);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 音樂設定,未設定的音樂與效果音照原預設\r\n     * 原預設值:\r\n     * 音量：1\r\n     * 可否疊加播放:否\r\n     * 可否循環:否\r\n     */\r\n    protected audioSetting() {\r\n        AudioManager.instance\r\n            .settingMusic(\"NBS\", 0.6, true)\r\n            .settingMusic(\"FBS\", 0.6, true)\r\n            .settingEffect(\"SlotTrun\", AudioStateType.CLEAR_TO_REPLAY, 1, true)\r\n            .settingEffect(\"WinSingleLine\", AudioStateType.CLEAR_TO_REPLAY, 0.3)\r\n            .settingEffect(\"SlotStop\", AudioStateType.SUPERIMPOSE, 1);\r\n    }\r\n\r\n    /**\r\n     * 綁定要使用的流程Class\r\n     * 使用方式:需自行繼承 介面 IExecutionContainer;\r\n     */\r\n    protected gameProcessSetting() {\r\n        let normalContainer = new MainGameNormalProcess();\r\n        let normalProcess = new SlotGameProcess(normalContainer);\r\n        const normalP = normalProcess\r\n            .onCustomizeStart()\r\n            .onSineInGrid()\r\n            .onRunning()\r\n            .onShowAnswer()\r\n            .onCustomizeEnd()\r\n            .onChangeStatus();\r\n\r\n        let freeContainer = new MainGameFreeProcess();\r\n        let freeProcess = new SlotGameProcess(freeContainer);\r\n        const freeP = freeProcess\r\n            .onCustomizeStart()\r\n            .onSineInGrid()\r\n            .onRunning()\r\n            .onShowAnswer()\r\n            .onCustomizeEnd()\r\n            .onChangeStatus();\r\n\r\n        SlotGameManager.instance\r\n            .setProcess(GameType.FREE, freeP)\r\n            .setProcess(GameType.NORMAL, normalP)\r\n            // .setProcess(\"FreeOpenTest\",this.getFreeOpenTestProcess())\r\n            // .setProcess(\"BigWinTest\",this.getBigWinTestProcess())\r\n            // .setProcess(\"BigWinTest\", this.getTestProcess2())\r\n            .setInitialProcess(GameType.NORMAL);\r\n    }\r\n\r\n    /**\r\n     * 測試:\r\n     * @returns {GameProcess}\r\n     * @private\r\n     */\r\n    private getFreeStateProcess(): GameProcess {\r\n        // setTimeout(() => {\r\n        //     cc.log(\"\", UserMoneyChangeNotification.instance.getAllSubscribe());\r\n        //     cc.log(\"UserTotalBetChangeNotification\", UserTotalBetChangeNotification.instance.getAllSubscribe());\r\n        //     cc.log(\"UserWinPointStateNotification\", UserWinPointStateNotification.instance.getAllSubscribe());\r\n        //     cc.log(\"SceneDirectionChangeNotification\", SceneDirectionChangeNotification.instance.getAllSubscribe());\r\n        //     cc.log(\"AutoStateChangeNotification\", AutoStateChangeNotification.instance.getAllSubscribe());\r\n        //     cc.log(\"ScrollFocusStateNotification\", ScrollFocusStateNotification.instance.getAllSubscribe());\r\n        //     cc.log(\"StopNowStateNotification\", StopNowStateNotification.instance.getAllSubscribe());\r\n        // }, 1000)\r\n        let testContainer = new FreeProcessTest();\r\n        let testProcess = new GameProcess(testContainer);\r\n        return testProcess\r\n            .onCreate()\r\n            .onExecution()\r\n            .onEnd()\r\n            .onChangeStatus();\r\n    }\r\n\r\n    /**\r\n     * 測試:\r\n     * @returns {SlotGameProcess}\r\n     */\r\n    getBigWinTestProcess(): SlotGameProcess {\r\n        let testContainer = new NormalBigWinProcessTest();\r\n        let testProcess = new SlotGameProcess(testContainer);\r\n        return testProcess\r\n            .onCustomizeStart()\r\n            .onSineInGrid()\r\n            .onRunning()\r\n            .onShowAnswer()\r\n            .onCustomizeEnd()\r\n            .onChangeStatus();\r\n    }\r\n\r\n    /**\r\n     * 測試:\r\n     * @returns {SlotGameProcess}\r\n     */\r\n    getFreeOpenTestProcess(): GameProcess {\r\n        let testContainer = new FreeOpenProcessTest();\r\n        let testProcess = new GameProcess(testContainer);\r\n        return testProcess\r\n            .onCreate()\r\n            .onExecution()\r\n            .onEnd()\r\n            .onChangeStatus();\r\n    }\r\n\r\n    /**\r\n     * 實例化所有動態加載的prefab\r\n     */\r\n    protected prefabInstantiate() {\r\n        let progress = LoadResManager.instance.secondaryLoadState.get(\"prefab\");\r\n        if (progress != 1) {\r\n            LoadResManager.instance.callback((progress) => {\r\n                if (progress == 1) {\r\n                    this.makePrefabInstantiate();\r\n                }\r\n            }, \"prefab\");\r\n        } else {\r\n            this.makePrefabInstantiate();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 實例化Prefab Method\r\n     * @private\r\n     */\r\n    private makePrefabInstantiate() {\r\n        for (let key of Object.keys(this.prefabIndex)) {\r\n            let prefab = cc.instantiate(LoadResManager.instance.prefabRes.get(key))\r\n            this.node.parent.addChild(prefab);\r\n            let index = this.prefabIndex[key];\r\n            if (index) {\r\n                prefab.setSiblingIndex(index);\r\n            }\r\n        }\r\n    }\r\n}"]}