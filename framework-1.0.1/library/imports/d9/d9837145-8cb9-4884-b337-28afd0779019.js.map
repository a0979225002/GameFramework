{"version":3,"sources":["assets\\script\\Framework\\Slot\\SlotStyleManager.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import {IConfigManager} from \"../Config/IConfig/IConfigManager\";\r\nimport {ErrorType} from '../Error/Enum/ErrorManagerEnum'\r\nimport ErrorManager from '../Error/ErrorManager'\r\nimport ASlot from './ASlot'\r\nimport ISlotStyleManager from './ISlotStyleManager'\r\n\r\nexport interface StyleData {\r\n    slotTemplate: new(styleData: StyleData) => ASlot,\r\n    slotTurnCount: number,\r\n    slotRowGridCount: number,\r\n    slotGirdSpeed: number,\r\n    slotSpeedUpTurnCount: number,\r\n    slotGridHeight: number,\r\n    speedUpMultiple: number,\r\n    columnIntervalTime: number,\r\n    slotColumnToTween: Array<cc.Node>,\r\n    gridNodeToMap: Map<number, Array<cc.Node>>;\r\n    gridSpriteToMap: Map<number, Array<cc.Sprite>>;\r\n    gridImg: Map<string, cc.SpriteFrame>;\r\n}\r\n\r\nexport default class SlotStyleManager implements ISlotStyleManager {\r\n\r\n    private static _instance: ISlotStyleManager;\r\n    private configManager: IConfigManager;\r\n    public readonly style: StyleData;\r\n    private _slot: ASlot;\r\n\r\n    private constructor(configManager: IConfigManager) {\r\n\r\n        this.configManager = configManager;\r\n\r\n        this.style = {\r\n\r\n            slotTemplate: null,\r\n            slotTurnCount: null,\r\n            slotRowGridCount: null,\r\n            slotGirdSpeed: null,\r\n            slotSpeedUpTurnCount: null,\r\n            slotGridHeight: null,\r\n            speedUpMultiple: null,\r\n            columnIntervalTime: null,\r\n            slotColumnToTween: null,\r\n            gridNodeToMap: null,\r\n            gridSpriteToMap: null,\r\n            gridImg: null,\r\n\r\n        };\r\n    }\r\n    /**\r\n     *  懶漢加載\r\n     *  初始化,只讓一個專案產生一次該class\r\n     */\r\n    public static setInstance(configManager: IConfigManager) {\r\n        if (!this._instance) {\r\n            this._instance = new SlotStyleManager(configManager);\r\n        }\r\n    }\r\n\r\n    /**\r\n     *  獲取已經初始化的靜態實例class\r\n     */\r\n    public static get instance(): ISlotStyleManager {\r\n        if (!this._instance) {\r\n            ErrorManager.instance.executeError(ErrorType.SlotStyleFW, \"該類尚未實例化\");\r\n            return;\r\n        }\r\n        return this._instance;\r\n    }\r\n\r\n    /**\r\n     * 添加執行流程的class 需繼承 ISlot\r\n     * @param {ASlot} slotTemplate\r\n     * @return {this}\r\n     */\r\n    public setSlotTemplate<T extends new(styleData: StyleData) => ASlot>(slotTemplate: T): this {\r\n\r\n        this.style.slotTemplate = slotTemplate;\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 老虎機顯示答案前的最少轉動次數\r\n     * @param {number} count\r\n     * @return {this}\r\n     */\r\n    setSlotTurnCount(count: number): this {\r\n\r\n        this.style.slotTurnCount = count;\r\n\r\n        return this\r\n    }\r\n\r\n    /**\r\n     * 加速時老虎機顯示答案前的最少轉動次數\r\n     * @param {number} count\r\n     * @return {this}\r\n     */\r\n    setSlotSpeedUpTurnCount(count: number): this {\r\n\r\n        this.style.slotSpeedUpTurnCount = count;\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 老虎機每隔格子高度\r\n     * @param {number} height\r\n     * @return {this}\r\n     */\r\n    setSlotGridHeight(height: number): this {\r\n\r\n        this.style.slotGridHeight = height;\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 老虎機一般狀態速度\r\n     * @param {number} time\r\n     * @return {this}\r\n     */\r\n    public setSlotGirdSpeed(time: number): this {\r\n\r\n        this.style.slotGirdSpeed = time;\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 加速時的加速被率\r\n     * @param {number} multiple\r\n     * @return {this}\r\n     */\r\n    setSpeedUpMultiple(multiple: number): this {\r\n\r\n        this.style.speedUpMultiple = multiple;\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 該老虎機 每列的格子數量\r\n     * @param {number} gridCount\r\n     * @return {this}\r\n     */\r\n    setSlotRowGridCount(gridCount: number): this {\r\n\r\n        this.style.slotRowGridCount = gridCount;\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 非加速模式,每列停止的時間間格\r\n     * @param {number} time\r\n     * @return {this}\r\n     */\r\n    setColumnIntervalTime(time: number): this {\r\n\r\n        this.style.columnIntervalTime = time;\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 要執行輪播動化轉動老虎機的node\r\n     * @param {Array<cc.Node>} node\r\n     * @return {this}\r\n     */\r\n    slotColumnToTween(node: Array<cc.Node>): this {\r\n\r\n        this.style.slotColumnToTween = node;\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 所有格子的圖片,做循環老虎雞時,需更動的圖片\r\n     * @param {Map<number, Array<cc.Sprite>>} sprite\r\n     * @return {this}\r\n     */\r\n    public setGirdSpriteToMap(sprite: Map<number, Array<cc.Sprite>>): this {\r\n\r\n        this.style.gridSpriteToMap = sprite;\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 所有格子,做循環老虎機時,需更動該Node的位置\r\n     * @param {Map<number, Array<cc.Node>>} node\r\n     * @return {this}\r\n     */\r\n    public setGridNodeToMap(node: Map<number, Array<cc.Node>>): this {\r\n\r\n        this.style.gridNodeToMap = node;\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * slot 所有靜態格子圖片\r\n     * @param {Array<cc.SpriteFrame>} img\r\n     * @return {this}\r\n     */\r\n    public setGridImg(img: Map<string, cc.SpriteFrame>): this {\r\n\r\n        this.style.gridImg = img;\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 初始所有操作\r\n     */\r\n    build() {\r\n        if (!this.style.slotTemplate) {\r\n            ErrorManager.instance.executeError(ErrorType.UndefinedFW, \"Slot Template 未賦予,需幫定或實做一個SlotTemplate\")\r\n            return;\r\n        }\r\n        this._slot = new this.style.slotTemplate(this.style);\r\n    }\r\n\r\n    public get slot(): ASlot {\r\n        return this._slot;\r\n    }\r\n}"]}