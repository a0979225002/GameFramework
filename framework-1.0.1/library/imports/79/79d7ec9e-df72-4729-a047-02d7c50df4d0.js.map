{"version":3,"sources":["assets\\script\\Framework\\Process\\GameProcessFactory.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,mEAAyD;AACzD,sDAAiD;AAKjD;;;;;GAKG;AACH;IAMI,4BAAY,WAA6B;QACrC,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;QAC/B,IAAI,CAAC,YAAY,GAAG,IAAI,GAAG,EAAoB,CAAC;IACpD,CAAC;IAED;;;;OAIG;IACH,uCAAU,GAAV,UAAW,WAA8B,EAAE,OAAiB;QACxD,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,WAAW,EAAE,OAAO,CAAC,CAAC;IAChD,CAAC;IAED;;;;;OAKG;IACH,uCAAU,GAAV,UAAW,WAA8B,EAAE,OAAiB;QACxD,OAAO,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;IAC9C,CAAC;IAED;;;OAGG;IACH,0CAAa,GAAb,UAAc,WAA8B;QACxC,IAAG,CAAC,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,WAAW,CAAC,EAAC;YACnC,sBAAY,CAAC,QAAQ,CAAC,YAAY,CAAC,4BAAS,CAAC,aAAa,EAAI,WAAW,uGAAoB,CAAC,CAAC;YAC/F,OAAO;SACV;QACD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;IACtD,CAAC;IAED;;;OAGG;IACG,uCAAU,GAAhB;uCAAoB,OAAO;;;4BACvB,qBAAM,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,EAAA;;wBAA1B,SAA0B,CAAC;;;;;KAC9B;IACL,yBAAC;AAAD,CAjDA,AAiDC,IAAA","file":"","sourceRoot":"/","sourcesContent":["import {ErrorType} from \"../Error/Enum/ErrorManagerEnum\";\r\nimport ErrorManager from \"../Error/ErrorManager\";\r\nimport {GameType} from \"./Enum/GameState\";\r\nimport ISlotGameManager from \"./ISlotGameManager\";\r\nimport {IGameProcessFactory} from \"./IGameProcessFactory\";\r\n\r\n/**\r\n * @Author XIAO-LI-PIN\r\n * @Description 流程工廠 : 更新,獲取,加入,變更等..\r\n * @Date 2021-05-13 下午 06:17\r\n * @Version 1.1\r\n */\r\nexport default class GameProcessFactory implements IGameProcessFactory {\r\n\r\n    private gameManager: ISlotGameManager;              //遊戲控制器,雙向綁定\r\n    private processToMap: Map<string, IProcess>;        //所有流程添加保存\r\n    public process: IProcess;                           //當前使用的流程\r\n\r\n    constructor(gameManager: ISlotGameManager) {\r\n        this.gameManager = gameManager;\r\n        this.processToMap = new Map<string, IProcess>();\r\n    }\r\n\r\n    /**\r\n     * 添加流程\r\n     * @param {string | GameType} processName\r\n     * @param {IProcess} process\r\n     */\r\n    setProcess(processName: string | GameType, process: IProcess) {\r\n        this.processToMap.set(processName, process);\r\n    }\r\n\r\n    /**\r\n     * 獲取該流程\r\n     * @param {string | GameType} processName\r\n     * @param {IProcess} process\r\n     * @returns {IProcess}\r\n     */\r\n    getProcess(processName: string | GameType, process: IProcess): IProcess {\r\n        return this.processToMap.get(processName);\r\n    }\r\n\r\n    /**\r\n     * 改變流程\r\n     * @param {string | GameType} processName\r\n     */\r\n    changeProcess(processName: string | GameType) {\r\n        if(!this.processToMap.has(processName)){\r\n            ErrorManager.instance.executeError(ErrorType.GameProcessFW,`${processName} 搜尋不到此流程,請檢查流程是否添加`);\r\n            return;\r\n        }\r\n        this.process = this.processToMap.get(processName);\r\n    }\r\n\r\n    /**\r\n     * 執行流程\r\n     * @returns {Promise<void>}\r\n     */\r\n    async useProcess(): Promise<void> {\r\n        await this.process.start();\r\n    }\r\n}"]}