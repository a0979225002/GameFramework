{"version":3,"sources":["assets\\script\\Framework\\Error\\ErrorManager.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import {IConfigManager} from \"../Config/IConfig/IConfigManager\";\r\nimport {ErrorType} from \"./Enum/ErrorManagerEnum\";\r\nimport ErrorHandler from \"./ErrorHandler\";\r\nimport IErrorHandler from \"./IErrorHandler\";\r\nimport IErrorManager from \"./IErrorManager\";\r\n\r\nexport default class ErrorManager implements IErrorManager {\r\n\r\n    private configManager: IConfigManager;\r\n    private static _instance: IErrorManager;\r\n    private handler: IErrorHandler;\r\n    private static _errorState: boolean;\r\n    private static _warningState: boolean;\r\n    private _errorDelayTime: number;\r\n    private _errorLabel: cc.Label;\r\n    private _errorNode: cc.Node;\r\n    private _warningLabel: cc.Label;\r\n    private _warningNode: cc.Node;\r\n    private readonly _isShowBackHomeButton: boolean;\r\n    private _errorButton: cc.Node;\r\n    public errorButtonLabel: cc.Label\r\n    private _warningDelayTime: number;\r\n\r\n    private constructor(configManager: IConfigManager) {\r\n        this.handler = new ErrorHandler();\r\n        this.configManager = configManager;\r\n        this._errorNode = null;\r\n        this._errorLabel = null;\r\n        this._errorDelayTime = 2000;                                            //錯誤訊息顯示時間 : 2秒\r\n        this._warningDelayTime = 1000;                                          //警告訊息顯示時間 : 1秒\r\n        ErrorManager._errorState = false;                                       //當前是否正在顯示 Error\r\n        ErrorManager._warningState = false;                                     //當前是否正在顯示警告\r\n        this._isShowBackHomeButton = !!this.configManager.backHomeURL;          //檢查當前是否回首頁URL,將之賦予true:false\r\n    }\r\n\r\n    /**\r\n     *  懶漢加載\r\n     *  初始化,只讓一個專案產生一次該class\r\n     */\r\n    public static setInstance(configManager: IConfigManager) {\r\n        if (!this._instance) {\r\n            this._instance = new ErrorManager(configManager);\r\n        }\r\n    }\r\n\r\n    /**\r\n     *  獲取已經初始化的靜態實例class\r\n     */\r\n    public static get instance(): IErrorManager {\r\n        if (!this._instance) {\r\n            throw new Error(`ErrorManager類錯誤 :  該類尚未實例化`)\r\n        }\r\n        return this._instance;\r\n    }\r\n\r\n    /**\r\n     * 責任鏈模式\r\n     * 顯示錯誤訊息,能做多個物件檢測\r\n     * @param{string | ErrorType }message\r\n     * @param obj\r\n     */\r\n    executeError(message: string | ErrorType, obj: any) {\r\n\r\n        return this.handler.checkErrorType(message, obj);\r\n\r\n    }\r\n\r\n    /**\r\n     * 顯示錯誤視窗\r\n     * @param {boolean} permanentState : 是否常駐\r\n     * @param {string} message  : 錯誤訊息\r\n     * @param {string} buttonText : button文字\r\n     */\r\n    serverError(permanentState: boolean, message: string, buttonText?: string) {\r\n        this.handler.checkServerError(permanentState, message, buttonText);\r\n    }\r\n\r\n    /**\r\n     * 顯示警告,將會調用已保存的警告Node\r\n     * @param {boolean} permanentState : 是否常駐\r\n     * @param {string} message  : 錯誤訊息\r\n     * @param {string} buttonText : button文字\r\n     */\r\n    warning(permanentState: boolean, message: string, buttonText?: string) {\r\n\r\n        this.handler.checkWarning(permanentState, message, buttonText);\r\n\r\n    }\r\n\r\n    /**\r\n     * 添加要綁定的Error組件\r\n     * @param node\r\n     */\r\n    setErrorNode(node: cc.Node): this {\r\n\r\n        this._errorNode = node;\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 添加要顯示Error訊息的Label\r\n     * @param label\r\n     */\r\n    setErrorLabel(label: cc.Label): this {\r\n\r\n        this._errorLabel = label;\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 添加errorButton綁定\r\n     * @param node\r\n     */\r\n    setErrorButton(node: cc.Node): this {\r\n\r\n        this._errorButton = node;\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 添加要顯示的時間,目前只對(ErrorType.bet)生效\r\n     * @param time\r\n     */\r\n    setErrorDelayTime(time: number): this {\r\n\r\n        this._errorDelayTime = time;\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 添加警告要顯示的時間\r\n     */\r\n    setWarningDelayTime(time: number): this {\r\n\r\n        this._warningDelayTime = time;\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 添加要顯示警告的Node\r\n     * @param node\r\n     */\r\n    setWarningNode(node: cc.Node): this {\r\n\r\n        this._warningNode = node;\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 添加要顯示警告的Node\r\n     * @param label\r\n     */\r\n    setWarningLabel(label: cc.Label): this {\r\n\r\n        this._warningLabel = label;\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 添加要顯示錯誤視窗中按鈕的label\r\n     * @param {cc.Label} label\r\n     * @return {this}\r\n     */\r\n    public setErrorButtonLabel(label: cc.Label): this {\r\n\r\n        this.errorButtonLabel = label;\r\n\r\n        return this;\r\n    }\r\n\r\n    static get errorState(): boolean {\r\n        return this._errorState;\r\n    }\r\n\r\n    static set errorState(value: boolean) {\r\n        this._errorState = value;\r\n    }\r\n\r\n\r\n    static get warningState(): boolean {\r\n        return this._warningState;\r\n    }\r\n\r\n    static set warningState(value: boolean) {\r\n        this._warningState = value;\r\n    }\r\n\r\n\r\n    //暫時將值鎖住,無法從外部更改,日後要使用者更換時再做打開\r\n\r\n    get errorNode(): cc.Node {\r\n        return this._errorNode;\r\n    }\r\n\r\n\r\n    get warningNode(): cc.Node {\r\n        return this._warningNode;\r\n    }\r\n\r\n\r\n    get errorButton(): cc.Node {\r\n        return this._errorButton;\r\n    }\r\n\r\n    get warningLabel(): cc.Label {\r\n        return this._warningLabel;\r\n    }\r\n\r\n    get errorLabel(): cc.Label {\r\n        return this._errorLabel;\r\n    }\r\n\r\n\r\n    get errorDelayTime(): number {\r\n        return this._errorDelayTime;\r\n    }\r\n\r\n\r\n    get warningDelayTime(): number {\r\n        return this._warningDelayTime;\r\n    }\r\n\r\n\r\n    get isShowBackHomeButton(): boolean {\r\n\r\n        return this._isShowBackHomeButton;\r\n    }\r\n\r\n\r\n}"]}