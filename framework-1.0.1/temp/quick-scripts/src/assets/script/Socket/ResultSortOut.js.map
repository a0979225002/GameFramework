{"version":3,"sources":["assets\\script\\Socket\\ResultSortOut.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import ErrorManager from '../Framework/Error/ErrorManager'\r\nimport {ServerEventType} from '../Framework/Listener/Enum/ServerEventType'\r\nimport EventManager from '../Framework/Listener/EventManager'\r\nimport UserMoneyChangeNotification from \"../Framework/Process/GameNotification/UserMoneyChangeNotification\";\r\nimport PublicSetUp from \"./PublicSetUp\";\r\nimport {socketJS} from './Socket'\r\nimport SocketSetting from \"./SocketSetting\";\r\n\r\nconst {ccclass} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class ResultSortOut extends cc.Component {\r\n\r\n    public static instance: ResultSortOut;\r\n\r\n    protected onLoad() {\r\n        ResultSortOut.instance = this;\r\n    }\r\n\r\n    async SFSToGame(_cmd: string) {\r\n        switch (_cmd) {\r\n            case \"MemberInfo\"://沒用\r\n                PublicSetUp.Ratio = SocketSetting.ClientSetObject.Ratio;\r\n                cc.log(PublicSetUp.Ratio);\r\n                break;\r\n            case \"GameLobbyInfoResult\"://沒用\r\n                PublicSetUp.GameLobbyName = SocketSetting.ServerReturnData[_cmd].GameLobbyName;\r\n                cc.log( PublicSetUp.GameLobbyName);\r\n                break;\r\n            case \"GameLobby\":  //底層進大廳 通知遊戲顯示大廳\r\n                PublicSetUp.SlotTableInfo[\"GameID\"] = SocketSetting.ClientSetObject.serverGameGroupID;\r\n                PublicSetUp.SlotTableInfo[\"BetLobby\"] = \"1\";\r\n                socketJS.SFSToServer(\"SlotTableInfo\", PublicSetUp.SlotTableInfo);\r\n                break;\r\n            case \"SlotTableInfoResult\":\r\n                PublicSetUp.JoinRoom = SocketSetting.ServerReturnData[_cmd].TableName;\r\n                socketJS.SFSJoinRoom(PublicSetUp.JoinRoom);\r\n                break;\r\n            case \"CanPlayGame\": // 底層進遊戲 通知GameLoading.js 可以顯示主遊戲場景\r\n                socketJS.SFSToServer(\"Table\", \"\");\r\n                break;\r\n            case \"TableInfo\":\r\n                cc.log(\"TableInfo:\", SocketSetting.ServerReturnData[_cmd]);\r\n                EventManager.instance.setEvent(\r\n                    EventManager.serverTarget,\r\n                    ServerEventType.TABLE_INFO,\r\n                    SocketSetting.ServerReturnData[_cmd]\r\n                );\r\n                break;\r\n            case \"BetResult\"://額外新增判斷\r\n                console.log(_cmd, SocketSetting.ServerReturnData[_cmd]);\r\n                let betData: object = SocketSetting.ServerReturnData[_cmd];\r\n                let betState: number = parseInt(SocketSetting.ServerReturnData[_cmd].State);\r\n                try {\r\n                    await this.betState(betState, betData);\r\n                } catch (e) {\r\n                    console.log(e);\r\n                }\r\n                break;\r\n            case \"FreeSpinResult\":\r\n                console.log(_cmd, SocketSetting.ServerReturnData[_cmd]);\r\n                let freeData: object = SocketSetting.ServerReturnData[_cmd];\r\n                let freeState: number = parseInt(SocketSetting.ServerReturnData[_cmd].State);\r\n                try {\r\n                    await this.freeState(freeState, freeData);\r\n                } catch (e) {\r\n                    console.log(e);\r\n                }\r\n                break;\r\n            case \"GetGameHistoryResult\":\r\n                let gameHistoryData = SocketSetting.ServerReturnData[_cmd];\r\n                cc.log(\"GetGameHistoryResult:\", gameHistoryData);\r\n                EventManager.instance.setEvent(\r\n                    EventManager.serverTarget,\r\n                    ServerEventType.GET_GAME_HISTORY_RESULT,\r\n                    gameHistoryData\r\n                )\r\n                break;\r\n            case \"GetHistoryDetailResult\":\r\n                let historyDetail = SocketSetting.ServerReturnData[_cmd];\r\n                cc.log(\"GetHistoryDetailResult:\", historyDetail);\r\n                EventManager.instance.setEvent(\r\n                    EventManager.serverTarget,\r\n                    ServerEventType.GET_HISTORY_DETAIL_RESULT,\r\n                    historyDetail\r\n                )\r\n                break;\r\n            case \"GroupID\":\r\n                let groupID = SocketSetting.ServerReturnData[_cmd].GroupID;\r\n                EventManager.instance.setEvent(\r\n                    EventManager.serverTarget,\r\n                    ServerEventType.GROUP_ID,\r\n                    groupID\r\n                )\r\n                break;\r\n            case \"GameClose\":\r\n            case \"Warning\":\r\n\r\n                let errorStr = SocketSetting.ClientSetObject.WarningText;\r\n                this.showErrorMessage(errorStr);\r\n\r\n                break;\r\n            case \"UpdatePoints\":\r\n                let userPoint = SocketSetting.ServerReturnData[_cmd].Points;\r\n                //用戶自行更新遊玩金額時,推播更新金額事件\r\n                UserMoneyChangeNotification.instance.notify(userPoint);\r\n                break;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 判斷當前錯誤狀態,顯示相對應的錯誤訊息\r\n     */\r\n    showErrorMessage(errorStr: string) {\r\n        // 帳號重複登入或是無回首頁網址 按鈕文字顯示為\"確定\"\r\n        switch (errorStr) {\r\n            case SocketSetting.t(\"S_9023\"):\r\n            case SocketSetting.t(\"S_9024\"):\r\n                ErrorManager\r\n                    .instance\r\n                    .serverError(true, errorStr, SocketSetting.t(\"54_042\"));\r\n                break;\r\n            case SocketSetting.t(\"S_9029\"):\r\n                ErrorManager\r\n                    .instance\r\n                    .serverError(true, errorStr, SocketSetting.t(\"54_042\"))\r\n                break;\r\n            case SocketSetting.t(\"S_9031\"):\r\n                //如果重複登入,反回大廳\r\n                this.SFSToGame(\"GameLobby\").then();\r\n                break;\r\n            default :\r\n                ErrorManager\r\n                    .instance\r\n                    .serverError(true, errorStr, SocketSetting.t(\"B_1001\"))\r\n        }\r\n    }\r\n\r\n    /**\r\n     * //判斷當前押注狀態,顯示各種錯誤,如果 = 0 則繼續遊戲\r\n     * @param {number}betState\r\n     * @param {object}betData\r\n     * @return boolean\r\n     */\r\n    async betState(betState: number, betData: object): Promise<boolean> {\r\n        return new Promise((resolve, reject) => {\r\n            switch (betState) {\r\n                case -1://重複押注\r\n                    reject(\"bet 重複押注\");\r\n                    break;\r\n                case 0 ://押注成功\r\n                    EventManager\r\n                        .instance\r\n                        .setEvent(EventManager.serverTarget, ServerEventType.BET_RESULT, betData);\r\n                    //用戶下注後的金額,推播更新\r\n                    UserMoneyChangeNotification.instance.notify(betData[\"UserPointBefore\"])\r\n                    resolve(true);\r\n                    break;\r\n                case 2 ://超過本金(這裡只是一個保險機制,需要先在傳送封包前就先擋掉避免傳封包)\r\n                    ErrorManager\r\n                        .instance\r\n                        .serverError(true, SocketSetting.t(\"S_9003\"));\r\n                    reject(\"bet 超過本金(這裡只是一個保險機制,需要先在傳送封包前就先擋掉避免傳封包)\");\r\n                    break;\r\n                default://(1:遊戲狀態不符合,3:投注區間錯誤,4:投注參數錯誤)\r\n                    ErrorManager\r\n                        .instance\r\n                        .serverError(true, SocketSetting.t(\"S_9015\"));\r\n                    reject(`bet 遊戲狀態不符合 : 狀態 = (${betState})`);\r\n                    break;\r\n            }\r\n        })\r\n    }\r\n\r\n    /**\r\n     * //判斷當前押注狀態,顯示各種錯誤,如果 = 0 則繼續遊戲\r\n     * @param {number}freeState\r\n     * @param {object}freeData\r\n     * @return boolean\r\n     */\r\n    async freeState(freeState: number, freeData: object): Promise<boolean> {\r\n\r\n        return new Promise((resolve, reject) => {\r\n            switch (freeState) {\r\n                case -1://重複押注\r\n                    reject(\"free 重複押注\");\r\n                    break;\r\n                case 0 ://押注成功\r\n                    EventManager\r\n                        .instance\r\n                        .setEvent(EventManager.serverTarget, ServerEventType.FREE_SPIN_RESULT, freeData);\r\n                    resolve(true);\r\n                    break;\r\n                default://(1:遊戲狀態不符合,3:投注區間錯誤,4:投注參數錯誤)\r\n                    ErrorManager\r\n                        .instance\r\n                        .serverError(true, SocketSetting.t(\"S_9015\"));\r\n                    reject(`free 遊戲狀態不符合 : 狀態 = (${freeState})`)\r\n                    break;\r\n            }\r\n        })\r\n    }\r\n}\r\n"]}