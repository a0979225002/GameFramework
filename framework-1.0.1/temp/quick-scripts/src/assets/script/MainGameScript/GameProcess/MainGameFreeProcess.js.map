{"version":3,"sources":["assets\\script\\MainGameScript\\GameProcess\\MainGameFreeProcess.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import {AutoType} from '../../Framework/Config/Enum/ConfigEnum'\r\nimport {GameState, GameType} from '../../Framework/Process/Enum/GameState'\r\nimport AutoStateChangeNotification from \"../../Framework/Process/GameNotification/AutoStateChangeNotification\";\r\nimport UserMoneyChangeNotification from \"../../Framework/Process/GameNotification/UserMoneyChangeNotification\";\r\nimport UserWinPointStateNotification from \"../../Framework/Process/GameNotification/UserWinPointStateNotification\";\r\nimport SlotGameManager from '../../Framework/Process/SlotGameManager'\r\nimport SlotStyleManager from '../../Framework/Slot/SlotStyleManager'\r\nimport NoLineSlot from '../../Framework/Slot/SlotType/NoLineSlot'\r\nimport {ResponseType} from \"../../Framework/WebResponse/Enum/ResponseType\";\r\nimport NoLineFreeResult from \"../../Framework/WebResponse/SeverDataModel/FreeResult/NoLineFreeResult\";\r\nimport NoLineResult from \"../../Framework/WebResponse/SeverDataModel/NormalResult/NoLineResult\";\r\nimport {WebResponseManager} from '../../Framework/WebResponse/WebResponseManager'\r\nimport {socketJS} from '../../Socket/Socket'\r\nimport MainGameButton from '../ButtonEvent/MainGameButton'\r\nimport FreeEndController from '../Controller/FreeEndController'\r\nimport FreeOpenController from '../Controller/FreeOpenController'\r\nimport MainGameController from '../Controller/MainGameController'\r\nimport SlotController from '../Controller/SlotController'\r\nimport WinLevelController from '../Controller/WinLevelController'\r\nimport MainGameLabel from '../LabelEvent/MainGameLabel'\r\n\r\nexport default class MainGameFreeProcess implements ISlotProcedureExecutionContainer {\r\n\r\n    private slotStyle: NoLineSlot;\r\n    private normalResult: NoLineResult;\r\n    private freeResult: NoLineFreeResult;\r\n\r\n    constructor() {\r\n\r\n        this.normalResult =\r\n            WebResponseManager\r\n                .instance<NoLineResult>()\r\n                .getResult(ResponseType.NORMAL);\r\n\r\n        this.freeResult =\r\n            WebResponseManager\r\n                .instance<NoLineFreeResult>()\r\n                .getResult(ResponseType.FREE);\r\n    }\r\n\r\n    private onCreate() {\r\n        if (!this.slotStyle) {\r\n            this.slotStyle = SlotStyleManager.instance.slot as NoLineSlot;\r\n        }\r\n    }\r\n\r\n    public async onCustomizeStart(): Promise<void> {\r\n\r\n        this.onCreate();\r\n        this.slotStyle.initializeState();\r\n        SlotController.instance.closeWinGrid();\r\n        //-1 為這次剩餘次數,因為資料是上局資料\r\n        let count: number = this.freeResult.Count - 1;\r\n        count = await this.normalToFree(count);\r\n        count = await this.freeToFree(count);\r\n        MainGameLabel.instance.updateFreeTitle(count);\r\n    }\r\n\r\n    /**\r\n     * 由一般模式進入free時\r\n     * @param {number} count\r\n     * @returns {Promise<number>}\r\n     * @private\r\n     */\r\n    private async normalToFree(count: number): Promise<number> {\r\n        //第一次進入Free狀態\r\n        if (this.normalResult.FreeSpinCount != 0) {\r\n            MainGameLabel.instance.remove();\r\n            MainGameButton.instance.switchButton(false);\r\n            MainGameController.instance.showFreeBG();\r\n            await FreeOpenController.instance.showFreeOpeningAnimation(\r\n                this.normalResult.FreeSpinCount);\r\n            count = this.normalResult.FreeSpinCount - 1;\r\n            //清空一般responseModel 的 free狀態,避免重複近來\r\n            this.normalResult.FreeSpinCount = 0;\r\n        }\r\n        return count;\r\n    }\r\n\r\n    /**\r\n     * 進入freeToFree時\r\n     * @param {number} count\r\n     * @returns {Promise<number>}\r\n     * @private\r\n     */\r\n    private async freeToFree(count: number): Promise<number> {\r\n        //FREE TO FREE 判斷是否增加 更新count數\r\n        if (this.freeResult.FreeToFree != 0) {\r\n            await FreeOpenController.instance.showFreeOpeningAnimation(this.freeResult.FreeToFree);\r\n            count = this.freeResult.Count + this.freeResult.FreeToFree - 1;\r\n        }\r\n        return count;\r\n    }\r\n\r\n    public onSineInGrid(): Promise<void> {\r\n        return new Promise<void>(async (resolve) => {\r\n            socketJS.SFSToServer(\"FreeSpin\", \"\");\r\n            await this.slotStyle.sineInSlot();\r\n            resolve();\r\n        });\r\n    }\r\n\r\n    public onRunGrid(): Promise<void> {\r\n        return new Promise(async (resolve) => {\r\n            await this.slotStyle.runSlotAnimation();\r\n            resolve();\r\n        });\r\n    }\r\n\r\n    public onShowAnswer(): Promise<void> {\r\n        return new Promise(async (resolve) => {\r\n            if (this.freeResult.TotalWinPoint != 0) {\r\n                SlotController.instance.showWinGrid(this.freeResult.GridWin);\r\n            }\r\n            await this.checkWinPoint(this.freeResult.TotalWinPoint);\r\n            resolve();\r\n        });\r\n    }\r\n\r\n    public onCustomizeEnd(): Promise<void> {\r\n        return new Promise<void>(async (resolve) => {\r\n            if (this.freeResult.FreeToFree == 0 && this.freeResult.Count == 0) {\r\n                let point = this.freeResult.FreeSpinWin;\r\n                await FreeEndController.instance.showFreeEnd(point, 4);\r\n                //關閉 free 背景\r\n                MainGameController.instance.closeFreeBG();\r\n                //關閉 free 標題\r\n                MainGameLabel.instance.closeFreeTitle();\r\n                //打開一般模式所有按鈕\r\n                MainGameButton.instance.switchButton(true);\r\n                SlotGameManager.instance.gameState = GameState.STANDBY;\r\n                //如果是自動狀態是free結束,將在結束時關閉auto狀態\r\n                if (SlotGameManager.instance.autoType == AutoType.freeEnd && SlotGameManager.instance.isAutoState) {\r\n                    let autoType = SlotGameManager.instance.autoType;\r\n                    AutoStateChangeNotification.instance.notify(false, autoType, autoType)\r\n                }\r\n            }\r\n            resolve();\r\n        });\r\n    }\r\n\r\n    onChangeStatus() {\r\n        if (this.freeResult.FreeToFree == 0 && this.freeResult.Count == 0) {\r\n            SlotGameManager.instance.changeProcess(GameType.NORMAL);\r\n        }\r\n    }\r\n\r\n    private checkWinPoint(spinWin: number): Promise<void> {\r\n        return new Promise(resolve => {\r\n            if (spinWin == 0) {\r\n                resolve();\r\n                return;\r\n            }\r\n            let winPoint = this.freeResult.FreeSpinWin;\r\n            if (spinWin != 0 && this.freeResult.BaseLevelWin == 0) {\r\n                //推播 一般獎動畫事件\r\n                UserWinPointStateNotification.instance.notify(winPoint, 0);\r\n                //配合一般獎動畫時間,關閉一般獎時,更新 user 金額\r\n                setTimeout(() => {\r\n                    let userMoney = this.normalResult.UserPointAfter;\r\n                    UserMoneyChangeNotification.instance.notify(userMoney)\r\n                    resolve();\r\n                }, 900);\r\n            } else if (this.freeResult.BaseLevelWin > 0) {\r\n                WinLevelController.instance.showWinAboveState(spinWin, resolve);\r\n            }\r\n        });\r\n    }\r\n\r\n    public onSineOutGrid(): Promise<void> {\r\n        return undefined;\r\n    }\r\n}\r\n"]}