(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error("Cannot find module '"+o+"'")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname){
var _0x3022=['UPUOf','EffectStop','2|4|3|5|1|0','0|6|5|1|2|3|4','微軟正黑體','Arial\x20Unicode\x20MS,Arial','yblJz','lYsIl','window.language_Mode\x20查找不到該語系','ravoZ','_nowLang','initDefaultStyle','allLanguageLabel','_style','_nowLanguageLabels','languageMgr','KbrtJ','AHfwc','TAIWAN','addStyle','updateLanguage','qirgE','updateText','updateStyle','setLanguage','languageCache','getLanguage','getText','getAllText','reTakeLanguageBuffer','JWUka','fontFamily','fontSize','lineHeight','notificationToMap','setNotification','TAG_NAME','\x20:\x20\x20該key尚未加入推撥事件中,你需先執行\x20setNotification(type:IBaseNotification)方法','hasNotification','notificationMgr','fcc','wrYmP','addButtonEvent','getClassName','Component','EventHandler','component','pTAwG','clickEvents','disableButton','interactable','enableButton','addTouchStartEvent','Node','EventType','TOUCH_START','offTouchStartEvent','PTbYH','kBwZv','JXKnC','getNodeOneChildren','SQVrA','childrenCount','children','getNodeTowChildren','tQpZo','YAYAD','gLEFY','PhsDd','SGMUm','SEUhJ','_self','_callFun','wAUlL','ULlWl','ABaseObserver','SmartFoxLink','STANDBY','FREEING','NORMAL','EdScU','IvfBB','CcvmT','EGqFT','kJlRF','SmUjn','TzcFY','查找不到該流程,請確認是否已綁定進框架中','\x20搜尋不到此流程,請檢查流程是否添加','chWoK','gameManager','processToMap','RevtB','onCreate','values','luNTA','executionContent','getAllProcess','process','wDpZk','start','GameProcessFactory','TEST','npxLH','orRUl','GameEventType','BET_RESULT','GET_GAME_HISTORY_RESULT','GET_HISTORY_DETAIL_RESULT','WARNING','MGvbg','sgzQV','CAN_PLAY_GAME','TEBTo','JtUzi','kdPVT','zubCl','ServerEventType','fdTOP','bhGiY','getSpriteFrames','indexOf','eWIHP','_executionContent','_process','onExecution','onEnd','onChangeStatus','uYSdO','vhgCL','kWdlz','tPPLY','bDQQW','_executionContainer','onSineInGrid','onRunning','onCustomizeEnd','onShowAnswer','JtLIo','UlyLZ','ofxIf','sLirX','SlotGameProcess','columnIntervalTime','slotColumnToTween','slotGridHeight','slotTurnCount','speedUpMultiple','slotStyleManager','resultModule','_slotStyleManager','setLookAtCount','_lookAtCount','setTag','_tag','setSlotTurnCount','_slotTurnCount','_slotGridHeight','setSlotGirdSpeed','_slotGirdSpeed','setSpeedUpMultiple','setSlotRowGridCount','_slotRowGridCount','_columnIntervalTime','setSlotColumnToTween','setGridNodeToMap','setSineInEasing','sineInEasing','setSineOutEasing','sineOutEasing','setResultModel','complete','SDvtV','_gridNodeToMap','MqVGc','slotGirdSpeed','TyiAn','adNGQ','IQZjs','_speedUpMultiple','vabuI','_resultModule','XnQww','ASlotSetting','gridSpriteToMap','setGridImg','_gridImg','setGirdSpriteToMap','mZWpN','_gridSpriteToMap','gridImg','SlotImgSetting','gridBurredImg','RiEVM','setGridBurredImg','_gridBurredImg','lfvXV','SlotBurredImgSetting','slotRowTime','fdYdp','setSlotRowTime','setLookAtTime','_lookAtTime','CkGxu','_slotRowTime','lookAtTime','SlotImgSpecialSetting','XeyFQ','ygCIJ','NRILy','SlotBurredImgSpecialSetting','__read','1|0|3|4|2','function','return','sjiQs','split','iterator','call','wCjiX','QdYHo','next','done','value','error','length','VsjZS','__awaiter','throw','hLdvu','SEXHe','pQeGM','mHYdV','then','__generator','Generator\x20is\x20already\x20executing.','zMlYq','ZxJCR','HPSdd','FkmLw','gxtzx','fJUiz','WcFsL','CIDSk','label','pop','trys','KuUSO','gupED','ZWvWx','ops','DWhXX','__extends','VuHCf','__proto__','prototype','AirzJ','ZoFxK','ZXOPO','JNHSi','Class\x20extends\x20value\x20','niEoZ','xYrKN','PkGuv','create','__values','2|3|1|0|4','Object\x20is\x20not\x20iterable.','Symbol.iterator\x20is\x20not\x20defined.','IvNKp','Znjou','mINwx','PROCESS_FW','WEB_RESPONSE_FW','WebResponse\x20類有錯誤\x20:\x20','模板類有錯誤\x20:','WebRequest\x20類有錯誤\x20:\x20','SLOT_STYLE_FW','SlotStyleFW類有錯誤\x20:','IS_RUNNING_FW','遊戲正在執行中,請勿重複呼叫','AUDIO_FW','AUDIO\x20類有錯誤\x20:','SCENE_FW','Scene\x20類有錯誤\x20:','Event\x20類有錯誤\x20:','OWXRS','MLIVv','knnYw','變數為undefined,流程無法繼續','傳入的Type\x20錯誤\x20,請檢察該Type是否非FarmWork內的Type','CvJpZ','process\x20類有錯誤\x20:','jiyRx','GBEzN','MVcHk','ZPNiv','liGWA','SXxqn','aNepc','kKqET','aJTWY','rHcce','LISTENER_FW','jssZI','ANIMATION_FW','Animation\x20類中方法有錯誤\x20:\x20','WStxD','加載的資源有問題','EOIxU','BWyVW','DxiMV','KjJor','AAvTw','biKru','gZXUb','WEB_REQUEST_FW','LPiYw','wodbt','LqDfZ','QhNZa','JMfMJ','VoeDN','WZBaV','YYNzv','ecUcc','jtdcL','ErrorType','type','configManager','checkErrorType','qypdO','FwzIn','UnknownError','bwTch','cKWke','GCZJo','KGrlS','unknownError','isFrameworkDebug','xEqUx','UNDEFINED_FW','TYPE_FW','mYySu','AoHgE','LOAD_FW','oRiDG','TVqZQ','Xlvfa','fmInN','rruqa','TEMPLATE_FW','log','有例外錯誤,但你未開啟框架Debug,無法查看','FrameWorkError','該物件為null','string','HzCTm','HcjtF','frameWorkError','YlJKQ','HwLRe','KOcoC','vuvcG','ObjectError','ErrorManager\x20errorNode為空','ErrorManager\x20errorLabel為空','timeOut','errorManager','showError','XvkzT','errorNode','executeError','uzUBS','errorButton','ErrorManager\x20errorButton為空','ErrorManager','errorState','errorLabel','active','isShowBackHomeButton','setTimeout','errorDelayTime','ServerError','2|7|8|4|0|1|5|3|6|9','當前DelayTime\x20=\x200\x20:\x20請給予值','ErrorManager\x20warningLabel為空','ErrorManager\x20warningNode為空','6|1|0|8|5|2|7|4|3|9','ErrorManager\x20errorDelayTime為空\x20無法顯示','XOpbH','iVAFM','XCTQM','JqZGY','PXnfy','XKpsi','timeout','AjZTr','eyqAK','warningDelayTime','nzkhH','warningState','warningLabel','eVtRj','warningNode','Fkian','dDEbM','showErrorBet','yKueF','cDDOY','okNtS','dEqRb','WarningError','objectError','serverError','warningError','checkServerError','checkWarning','ErrorHandler','instance','ErrorManager類錯誤\x20:\x20\x20該類尚未實例化','1|6|8|3|0|5|4|2|7','_errorDelayTime','handler','_errorLabel','_errorState','_warningDelayTime','backHomeURL','trim','_errorNode','setInstance','_instance','errorMgr','defineProperty','FGIXv','showErrorDialog','showWarningDialog','setErrorLabel','setErrorButton','_errorButton','setWarningNode','_warningNode','setWarningLabel','_warningLabel','setErrorButtonLabel','_warningState','pebXG','kgxuy','xvDOh','UHcve','BJLNA','_isShowBackHomeButton','errorButtonLabel','_errorButtonLabel','set','animationManager','spineName','AnimationHandler','該類尚未實例化','resources\x20資源名錯誤','尚未獲取資源,請查看\x20AnimationManager.instance.spineName','_spineName','_handler','animationMgr','PMLLd','getSpineName','has','nitaT','get','XKohI','NVioO','AnimationManager','CLEAR_TO_REPLAY','SUPERIMPOSE','mQUbR','NXrYL','uoWaF','BaQYh','NOT_PLAYING','CEnJn','AudioStateType','AOtSK','PZlbi','wYwTZ','iABUb','btZgj','uwlcJ','jLSyd','WVKmM','WPIjj','ugpsa','Arixx','WELcQ','roundOff','sCLNR','round','NxRrY','PTACC','XbZFb','pow','MRPma','roundDown','XqbEW','floor','EQpJL','roundUp','OtaQq','ceil','FVSwm','uSVNA','decimalsCount','lSBoc','TlYPf','OKgrT','lXzbk','XRMVx','sncLi','TUcEa','format','formatting','Util','global','IMG_ATLAS','MUSIC','TEXT','IMG','SPINE','SCENE','SCRIPT','4|0|5|7|2|3|6|8|1','dExjs','sbpvU','eVigb','idfzJ','zCRku','yuypm','LoadType','severEvent','eventCount','WOteT','_eventCount','target','eventMgr','mpYhl','emitEvent','hWYzB','FewyX','emit','apply','JfkOC','OTnbX','eventListener','_eventsCurrentlyBeing','once','destroyEvent','off','hasListening','hasEventListener','EventManager','流程尚未結束,請勿重複執行','gameProcessFactory','_gameState','GameStateType','isStartProcess','processMgr','setProcess','initProcess','setDefaultProcess','changeProcess','play','QWvNV','HnsjI','naaGd','xPSJH','iJPVc','updateProcessState','useProcess','sent','BfHZB','JieFf','remake','SQfMD','AUTO','HORIZONTAL','JkGrZ','QkGbp','VERTICAL','SceneStyleType','PORTRAIT','fOIjE','HOSVj','LANDSCAPE','SceneDirectionType','更新畫面完畢......','canvas-resize','_isCanUpdateScene','sceneManager','designSceneEventListener','view','xwbcj','OtUya','makeDesignScene','SiRRO','tsMoI','rRoJg','OQuKC','AGBYt','VweOV','SceneSizeChangeListener','\x20該IBaseObserver已註冊過自動狀態改變時事件,請檢查','\x20:\x20該觀察類尚未綁定過,無須移除觀察對象','OcZeW','NZXJW','observer','subscribe','iJBZB','isPermanent','unsubscribe','delete','getSubscribeCount','size','getAllSubscribe','ABaseNotification','ABS','3|8|1|7|2|0|5|9|6|4','SCENE_DIRECTION_CHANGE','USER_MONEY_CHANGE','USER_GET_WIN','AUTO_CHANGE','SLOT_ROW_END','USER_BET_CHANGE','SCROLL_FOCUS_STATE','WiRPG','wslbf','gFNWo','sREdF','ETmrp','RESPONSE_RESULT','LpyiO','GjzxJ','SPEED_CHANGE','fgMKo','NotificationType','_isPermanent','self','pushNotification','callFun','POBfe','FZFSr','qHwMK','FdhpH','FhBMK','你尚未綁定當遊戲方向更動時的推播事件,因此不會觸發方向改變的推播事件','DOcKM','eventLock','updateSceneDirection','wKmfQ','getFrameSize','width','height','kUocZ','zZWTW','setDesignResolutionSize','ResolutionPolicy','FIXED_HEIGHT','BkzVl','xKPqh','FIXED_WIDTH','OkKxu','rtTDc','sceneDirection','NotificationManager','AutoStyle','xFMHU','find','rVMQz','pDokF','zPRDQ','fitHeight','fitWidth','HpHoM','curDR','node','designResolution','HorizontalStyle','尚未完成直向是配模式','executionStyle','briiu','VerticalStyle','getStyle','autoStyle','horizontalStyle','verticalStyle','該更新模式尚未包含在框架中,請確認是否有實作ISceneStyle','AkcTm','sceneSizeChangeListener','style','sceneStyleHandler','SceneStyleHandler','_designHeight','sceneMgr','setDesignWidth','_designWidth','setDesignHeight','updateSize','_sceneDirection','geNZf','startListener','tvgay','director','runScene','sceneRes','removeScene','destroy','srVxT','Slot\x20Template\x20未賦予,需實做一個SlotTemplate','_slot','_slotStyle','slotStyleMgr','CuNlR','setSlotStyle','build','template','WUnmg','tag','soinb','emVGQ','SlotStyleManager','0|5|1|4|2|3','AUTO_50','AUTO_500','AUTO_1000','FREE_END','LbWhO','FYqmC','rUhDH','vrSsy','ZEXLJ','AutoType','NTD','CHINESE','THAILAND','THB','USD','VND','IDR','MALAYSIA','cMFpc','zROvn','EkueD','JDNAq','AMERICA','XbeCF','VIETNAM','mJofd','AWybE','CJcnq','MYR','_resetDebugSetting','externallyLoadURL','isAuto','musicVolume','language','isEffectOnMute','isMusicOnMute','cocosDebugSetting','_cocosDebugSetting','debug','INFO','_isAuto','_isSpeedUp','_gameNumber','_effectVolume','_musicVolume','_isEffectOnMute','_externallyLoadURL','_language','LanguageType','MTYCG','setGameNumber','setMusicOnMute','_isMusicOnMute','setEffectOnMute','setAutoCont','_autoCount','setExternallyLoadURL','setAutoState','setSpeedState','setFrameWorkDebug','setCocosDebug','setBackHomeURL','XeYnp','AudioManager','LanguageManager','LoadResManager','ProcessManager','SceneManager','pSsaT','gameNumber','wnDAN','DmkUa','qfbTW','YOAjA','lRXFw','jWFyq','RbBsO','_backHomeURL','hequt','SlotConfigManager','head','scriptName','url','getElementsByTagName','3|7|8|1|2|4|0|6|5','請勿重複加載已有的外部腳本\x20:\x20','VTTvF','vfDgN','.css','bzdqj','sURTa','loadScript','laHbi','onload','scriptRes','add','ALoadScriptType','appendChild','loadScriptEventCallback','linkElem','stylesheet','href','onerror','CtiHT','BFhvJ','parameter','UhUSI','script','.js','3|5|6|2|0|4|7|1','OwOQd','OYJCK','IxYRE','createElement','qGusp','AaRQW','SHGhm','MGXHt','mljDP','ScriptLoad','YhdFG','DlfkV','CrelB','resources','vpWqD','assetBundle','assetManager','getBundle','folder','dataName','beforeProgress','loadResources','kGnob','SceneAsset','loadDir','loadResProgress','loadResCallBack','bind','ZuUtG','setResToManager','updateManagerState','IWxNS','updateProgressEnd','VkxTw','loadMainEventCallback','secondaryLoadState','loadSecondaryEventCallback','initialLoadState','ALoadType','4|1|0|2|3','pZLQx','aMJwd','name','imgRes','ImgLoad','JLorX','musicRes','JKlKq','\x20鍵值重複,請檢查該音樂資源是否已加載過','MusicLoad','\x20prefab名稱重複,請檢查是否有相同名稱prefab','tBRYr','KUJdk','xnPit','Mujyc','YAzdW','iImfe','bSqVx','prefabRes','PrefabLoad','\x20鍵值重複,請檢查該資源是否已加載過','FtyNM','psZuQ','rxEkH','ckRZU','tJXrw','SceneLoad','\x20spine動畫取number有誤,請檢查該spine\x20Animation是否有重複數字情況','grid','bBTXP','pGhNe','ULRDX','spineRes','請檢察資源是否以載入過,鍵值重複','toLowerCase','match','aNkoL','keys','skeletonJson','animations','yICQY','pIPdr','AYPKh','jxOfA','ELxHt','lFGFK','wcrIT','replace','readFileRes','TextLoad','secondaryRes','資源類型錯誤,尚無此類型載入方法','LoadType\x20無法偵測','wEaTT','RIAJS','fBjqr','assetMethod','loadResManager','loadBundle','Nvrbb','isLoadBundle','Ppblo','push','checkLoadType','executeLoad','AuEXd','executeLoadBundle','shift','SpriteFrame','ImgAtlasLoad','SpriteAtlas','Prefab','SpineLoad','SkeletonData','TextAsset','executeLoadExternalScript','CSS','WGhGX','oeHrj','LoadTypeFactory','\x20此(主資源)已載入過了,或名稱重複,請檢察','pLaFM','tEOmD','ojOac','\x20此(次資源)已載入過了,或名稱重複,請檢察','factory','checkRepeatTheName','YfyWh','eYSQN','alRne','gnYqG','LoadTypeHandler','如果拿取該資源進度,請勿重複callback','如果拿取總進度,請勿在之前資源尚未加載完前,重複callback','scriptLoadState','eaSAf','_prefabRes','loadTypeHandler','_initialLoadState','_musicRes','_imgRes','count','allProgress','_scriptLoadState','loadMgr','IveGd','QWKYM','allProgressEndCount','wFszM','LXejH','onlyResEventCallback','radXA','Zlfuf','loadAsset','cQRPv','Dwhxe','callback','xIpMT','JfgVS','getLoadState','YjCyQ','IvBQc','zdBCV','remove','clear','PREFAB','HCfEC','_secondaryLoadState','_spineRes','_readFileRes','bSpis','xtwuj','_scriptRes','_sceneRes','uAIkc','STOP','PAUSE','\x20無此資源,請檢察資源類\x20musicRes內的資源是否錯誤','volume','PLAYING','GNaww','musicID','PBHAZ','audioEngine','resume','TZtYz','playMusic','eJwem','ASexJ','FtbEL','setVolume','getState','stop','pause','AudioState','MusicController','7|1|3|11|5|4|9|6|10|12|8|0|2','loop','hMFJI','canSuperimpose','uubkG','zjjlJ','wGGua','PLxnb','PbjQh','fwYqn','ZdeBJ','vBbka','effectID','ecKBq','ERROR','SkUZJ','ydQCn','playEffect','qgTjC','NyUjE','zfYpN','11|8|1|3|5|6|12|7|10|9|0|4|2','RtAtw','PsrDc','GrhhB','jOmAB','eGxyW','effectVolume','effectController','musicOnMute','effectData','musicData','audioManager','effectOnMute','initializeData','effectNormalData','musicNormalData','jLKaa','jzFJK','UspEs','2|0|1|3|5|4','UQPNY','qBVGT','settingEffect','JtGdA','gWjNS','musicPlay','musicController','effectPlay','musicStop','effectStop','effectStopAll','getMusicState','getEffectState','AudioFactory','_effectOnMute','_musicOnMute','veKCC','RfvEa','settingMusic','nJvlw','PFRuo','musicPause','updateMusicOnMute','Ysiaa','BkIdG','cWdsg','Itvfj','FfzcQ','enumerable','izJXi','Npjio','skADA','kCNKy','eygJK','ZOibY','wWgIO','forEach','QxgFW','TbsaJ','Effect','wWaxY','QNBKW'];(function(_0x144792,_0x5909cb){var _0x471987=function(_0x5e380d){while(--_0x5e380d){_0x144792['push'](_0x144792['shift']());}};_0x471987(++_0x5909cb);}(_0x3022,0xd3));var _0xf868=function(_0x314adc,_0x4585be){_0x314adc=_0x314adc-0x0;var _0x3e3c6e=_0x3022[_0x314adc];return _0x3e3c6e;};var __read=this&&this[_0xf868('0x0')]||function(_0x5c6cfe,_0x4f5051){var _0x5b57c4={'sjiQs':_0xf868('0x1'),'wCjiX':function(_0x235e3a,_0x18cf06){return _0x235e3a===_0x18cf06;},'wulzB':_0xf868('0x2'),'QdYHo':function(_0x445c89,_0x1b49d8){return _0x445c89>_0x1b49d8;},'DsVrK':_0xf868('0x3')};var _0x3d0df5=_0x5b57c4[_0xf868('0x4')][_0xf868('0x5')]('|'),_0xb185d8=0x0;while(!![]){switch(_0x3d0df5[_0xb185d8++]){case'0':if(!_0x2b585d)return _0x5c6cfe;continue;case'1':var _0x2b585d=_0x5b57c4['wCjiX'](typeof Symbol,_0x5b57c4['wulzB'])&&_0x5c6cfe[Symbol[_0xf868('0x6')]];continue;case'2':return _0x4d3449;case'3':var _0x136809=_0x2b585d[_0xf868('0x7')](_0x5c6cfe),_0x429740,_0x4d3449=[],_0x4d6db3;continue;case'4':try{while((_0x5b57c4[_0xf868('0x8')](_0x4f5051,void 0x0)||_0x5b57c4[_0xf868('0x9')](_0x4f5051--,0x0))&&!(_0x429740=_0x136809[_0xf868('0xa')]())[_0xf868('0xb')])_0x4d3449['push'](_0x429740[_0xf868('0xc')]);}catch(_0x162c16){_0x4d6db3={'error':_0x162c16};}finally{try{if(_0x429740&&!_0x429740['done']&&(_0x2b585d=_0x136809[_0x5b57c4['DsVrK']]))_0x2b585d[_0xf868('0x7')](_0x136809);}finally{if(_0x4d6db3)throw _0x4d6db3[_0xf868('0xd')];}}continue;}break;}};var __spreadArray=this&&this['__spreadArray']||function(_0x3ffde0,_0x164e5c){var _0x3fa268={'VsjZS':function(_0x41332d,_0x55ba94){return _0x41332d<_0x55ba94;}};for(var _0x4b7b51=0x0,_0x2b71ec=_0x164e5c[_0xf868('0xe')],_0x46538a=_0x3ffde0[_0xf868('0xe')];_0x3fa268[_0xf868('0xf')](_0x4b7b51,_0x2b71ec);_0x4b7b51++,_0x46538a++)_0x3ffde0[_0x46538a]=_0x164e5c[_0x4b7b51];return _0x3ffde0;};var __awaiter=this&&this[_0xf868('0x10')]||function(_0x24a91a,_0x518de7,_0x21e7db,_0x5a8f4e){var _0x294147={'pQeGM':function(_0x2366ab,_0xa6ffb5){return _0x2366ab(_0xa6ffb5);},'mHYdV':_0xf868('0x11'),'hLdvu':function(_0x6513e4,_0x57ddc0){return _0x6513e4(_0x57ddc0);},'FJljo':function(_0x2cbc62,_0x171a7e){return _0x2cbc62(_0x171a7e);}};function _0x332535(_0x3379aa){return _0x3379aa instanceof _0x21e7db?_0x3379aa:new _0x21e7db(function(_0x318fe8){_0x318fe8(_0x3379aa);});}return new(_0x21e7db||(_0x21e7db=Promise))(function(_0x572e80,_0x5401d5){var _0x124bb6={'SEXHe':function(_0x3400e2,_0x55c657){return _0x294147[_0xf868('0x12')](_0x3400e2,_0x55c657);}};function _0x29b757(_0x2bbc84){try{_0x124bb6[_0xf868('0x13')](_0x4ebb5b,_0x5a8f4e[_0xf868('0xa')](_0x2bbc84));}catch(_0x3b2426){_0x124bb6[_0xf868('0x13')](_0x5401d5,_0x3b2426);}}function _0x5b68ad(_0x55c94d){try{_0x294147[_0xf868('0x14')](_0x4ebb5b,_0x5a8f4e[_0x294147[_0xf868('0x15')]](_0x55c94d));}catch(_0x5172e9){_0x294147[_0xf868('0x14')](_0x5401d5,_0x5172e9);}}function _0x4ebb5b(_0x416185){_0x416185[_0xf868('0xb')]?_0x572e80(_0x416185[_0xf868('0xc')]):_0x294147['hLdvu'](_0x332535,_0x416185[_0xf868('0xc')])[_0xf868('0x16')](_0x29b757,_0x5b68ad);}_0x294147['FJljo'](_0x4ebb5b,(_0x5a8f4e=_0x5a8f4e['apply'](_0x24a91a,_0x518de7||[]))[_0xf868('0xa')]());});};var __generator=this&&this[_0xf868('0x17')]||function(_0x19bec7,_0x7f3556){var _0x48a63d={'zMlYq':function(_0x5ee1e0,_0x5720e8){return _0x5ee1e0&_0x5720e8;},'ZxJCR':function(_0x4668e6,_0x1dd96e){return _0x4668e6(_0x1dd96e);},'yknNz':_0xf868('0x18'),'gxtzx':function(_0x219491,_0x2ea231){return _0x219491&_0x2ea231;},'fJUiz':_0xf868('0x3'),'WcFsL':'throw','CIDSk':function(_0x4af0cc,_0x1ccecf){return _0x4af0cc&_0x1ccecf;},'gupED':function(_0x4fce51,_0x241d10){return _0x4fce51>_0x241d10;},'iCxFg':function(_0x33c63b,_0x91b8ea){return _0x33c63b-_0x91b8ea;},'KuUSO':function(_0x3d7b9f,_0x25933a){return _0x3d7b9f===_0x25933a;},'ZWvWx':function(_0x322924,_0x364a8c){return _0x322924<_0x364a8c;},'DWhXX':function(_0x13e156,_0x1bafc1){return _0x13e156&_0x1bafc1;},'HPSdd':function(_0x5a68ed,_0x591196){return _0x5a68ed===_0x591196;},'FkmLw':_0xf868('0x2')};var _0x281f8b={'label':0x0,'sent':function(){if(_0x48a63d[_0xf868('0x19')](_0x3c6e7e[0x0],0x1))throw _0x3c6e7e[0x1];return _0x3c6e7e[0x1];},'trys':[],'ops':[]},_0x1503a3,_0x18aa4a,_0x3c6e7e,_0x33118b;return _0x33118b={'next':_0x48a63d[_0xf868('0x1a')](_0x5adad6,0x0),'throw':_0x48a63d[_0xf868('0x1a')](_0x5adad6,0x1),'return':_0x5adad6(0x2)},_0x48a63d[_0xf868('0x1b')](typeof Symbol,_0x48a63d[_0xf868('0x1c')])&&(_0x33118b[Symbol[_0xf868('0x6')]]=function(){return this;}),_0x33118b;function _0x5adad6(_0xe35103){return function(_0x400d4e){return _0x48a63d[_0xf868('0x1a')](_0x4cd4fa,[_0xe35103,_0x400d4e]);};}function _0x4cd4fa(_0x1652a6){if(_0x1503a3)throw new TypeError(_0x48a63d['yknNz']);while(_0x281f8b)try{if(_0x1503a3=0x1,_0x18aa4a&&(_0x3c6e7e=_0x48a63d[_0xf868('0x1d')](_0x1652a6[0x0],0x2)?_0x18aa4a[_0x48a63d[_0xf868('0x1e')]]:_0x1652a6[0x0]?_0x18aa4a[_0x48a63d[_0xf868('0x1f')]]||((_0x3c6e7e=_0x18aa4a[_0xf868('0x3')])&&_0x3c6e7e[_0xf868('0x7')](_0x18aa4a),0x0):_0x18aa4a[_0xf868('0xa')])&&!(_0x3c6e7e=_0x3c6e7e[_0xf868('0x7')](_0x18aa4a,_0x1652a6[0x1]))[_0xf868('0xb')])return _0x3c6e7e;if(_0x18aa4a=0x0,_0x3c6e7e)_0x1652a6=[_0x48a63d[_0xf868('0x20')](_0x1652a6[0x0],0x2),_0x3c6e7e[_0xf868('0xc')]];switch(_0x1652a6[0x0]){case 0x0:case 0x1:_0x3c6e7e=_0x1652a6;break;case 0x4:_0x281f8b[_0xf868('0x21')]++;return{'value':_0x1652a6[0x1],'done':![]};case 0x5:_0x281f8b['label']++;_0x18aa4a=_0x1652a6[0x1];_0x1652a6=[0x0];continue;case 0x7:_0x1652a6=_0x281f8b['ops'][_0xf868('0x22')]();_0x281f8b[_0xf868('0x23')][_0xf868('0x22')]();continue;default:if(!(_0x3c6e7e=_0x281f8b[_0xf868('0x23')],_0x3c6e7e=_0x48a63d['gupED'](_0x3c6e7e[_0xf868('0xe')],0x0)&&_0x3c6e7e[_0x48a63d['iCxFg'](_0x3c6e7e['length'],0x1)])&&(_0x48a63d[_0xf868('0x24')](_0x1652a6[0x0],0x6)||_0x48a63d[_0xf868('0x24')](_0x1652a6[0x0],0x2))){_0x281f8b=0x0;continue;}if(_0x1652a6[0x0]===0x3&&(!_0x3c6e7e||_0x48a63d[_0xf868('0x25')](_0x1652a6[0x1],_0x3c6e7e[0x0])&&_0x48a63d[_0xf868('0x26')](_0x1652a6[0x1],_0x3c6e7e[0x3]))){_0x281f8b[_0xf868('0x21')]=_0x1652a6[0x1];break;}if(_0x1652a6[0x0]===0x6&&_0x48a63d['ZWvWx'](_0x281f8b[_0xf868('0x21')],_0x3c6e7e[0x1])){_0x281f8b[_0xf868('0x21')]=_0x3c6e7e[0x1];_0x3c6e7e=_0x1652a6;break;}if(_0x3c6e7e&&_0x48a63d[_0xf868('0x26')](_0x281f8b[_0xf868('0x21')],_0x3c6e7e[0x2])){_0x281f8b[_0xf868('0x21')]=_0x3c6e7e[0x2];_0x281f8b[_0xf868('0x27')]['push'](_0x1652a6);break;}if(_0x3c6e7e[0x2])_0x281f8b['ops'][_0xf868('0x22')]();_0x281f8b[_0xf868('0x23')][_0xf868('0x22')]();continue;}_0x1652a6=_0x7f3556[_0xf868('0x7')](_0x19bec7,_0x281f8b);}catch(_0x42f18d){_0x1652a6=[0x6,_0x42f18d];_0x18aa4a=0x0;}finally{_0x1503a3=_0x3c6e7e=0x0;}if(_0x48a63d[_0xf868('0x28')](_0x1652a6[0x0],0x5))throw _0x1652a6[0x1];return{'value':_0x1652a6[0x0]?_0x1652a6[0x1]:void 0x0,'done':!![]};}};var __extends=this&&this[_0xf868('0x29')]||function(){var _0x3aa81e={'VuHCf':function(_0x32c347,_0x3820ee){return _0x32c347 instanceof _0x3820ee;},'AirzJ':function(_0x3a60f3,_0x82b616,_0x40ceba){return _0x3a60f3(_0x82b616,_0x40ceba);},'ZoFxK':_0xf868('0x2'),'ZXOPO':function(_0x33e37d,_0x400704){return _0x33e37d!==_0x400704;},'JNHSi':function(_0x1b44f9,_0x34fbd4){return _0x1b44f9+_0x34fbd4;},'niEoZ':function(_0xb0c01b,_0x5352f2){return _0xb0c01b(_0x5352f2);},'xYrKN':'\x20is\x20not\x20a\x20constructor\x20or\x20null','PkGuv':function(_0x2dfd90,_0x42c9ac){return _0x2dfd90===_0x42c9ac;}};var _0x10b1dd=function(_0x90836f,_0x3c1cfa){_0x10b1dd=Object['setPrototypeOf']||_0x3aa81e[_0xf868('0x2a')]({'__proto__':[]},Array)&&function(_0x90836f,_0x3c1cfa){_0x90836f[_0xf868('0x2b')]=_0x3c1cfa;}||function(_0x90836f,_0x3c1cfa){for(var _0x209671 in _0x3c1cfa)if(Object[_0xf868('0x2c')]['hasOwnProperty']['call'](_0x3c1cfa,_0x209671))_0x90836f[_0x209671]=_0x3c1cfa[_0x209671];};return _0x3aa81e[_0xf868('0x2d')](_0x10b1dd,_0x90836f,_0x3c1cfa);};return function(_0x3bbe61,_0x387945){if(typeof _0x387945!==_0x3aa81e[_0xf868('0x2e')]&&_0x3aa81e[_0xf868('0x2f')](_0x387945,null))throw new TypeError(_0x3aa81e[_0xf868('0x30')](_0xf868('0x31'),_0x3aa81e[_0xf868('0x32')](String,_0x387945))+_0x3aa81e[_0xf868('0x33')]);_0x10b1dd(_0x3bbe61,_0x387945);function _0x509c3e(){this['constructor']=_0x3bbe61;}_0x3bbe61[_0xf868('0x2c')]=_0x3aa81e[_0xf868('0x34')](_0x387945,null)?Object[_0xf868('0x35')](_0x387945):(_0x509c3e[_0xf868('0x2c')]=_0x387945[_0xf868('0x2c')],new _0x509c3e());};}();var __values=this&&this[_0xf868('0x36')]||function(_0x184fdf){var _0x386caf={'IvJky':_0xf868('0x37'),'sXQRQ':'number','IvNKp':function(_0x4d59b3,_0x22df1c){return _0x4d59b3>=_0x22df1c;},'Znjou':function(_0x597328,_0x142266){return _0x597328===_0x142266;},'WGdpi':_0xf868('0x2'),'gGSLg':_0xf868('0x38'),'mINwx':_0xf868('0x39')};var _0x532382=_0x386caf['IvJky'][_0xf868('0x5')]('|'),_0x5c77e6=0x0;while(!![]){switch(_0x532382[_0x5c77e6++]){case'0':if(_0x184fdf&&typeof _0x184fdf['length']===_0x386caf['sXQRQ'])return{'next':function(){if(_0x184fdf&&_0x510a37['tSPcS'](_0x528971,_0x184fdf['length']))_0x184fdf=void 0x0;return{'value':_0x184fdf&&_0x184fdf[_0x528971++],'done':!_0x184fdf};}};continue;case'1':if(_0x4f9da0)return _0x4f9da0['call'](_0x184fdf);continue;case'2':var _0x510a37={'tSPcS':function(_0x7d7e46,_0xa20e5){return _0x386caf[_0xf868('0x3a')](_0x7d7e46,_0xa20e5);}};continue;case'3':var _0x513993=_0x386caf[_0xf868('0x3b')](typeof Symbol,_0x386caf['WGdpi'])&&Symbol[_0xf868('0x6')],_0x4f9da0=_0x513993&&_0x184fdf[_0x513993],_0x528971=0x0;continue;case'4':throw new TypeError(_0x513993?_0x386caf['gGSLg']:_0x386caf[_0xf868('0x3c')]);continue;}break;}};var fcc;(function(_0x14d6ee){var _0x17f989={'OWXRS':'3|9|2|1|0|7|5|10|11|4|12|8|6','MLIVv':'LOAD_FW','knnYw':'UNDEFINED_FW','CvJpZ':_0xf868('0x3d'),'jiyRx':_0xf868('0x3e'),'GBEzN':_0xf868('0x3f'),'MVcHk':'TEMPLATE_FW','wckMg':_0xf868('0x40'),'ZPNiv':_0xf868('0x41'),'liGWA':_0xf868('0x42'),'SXxqn':_0xf868('0x43'),'aNepc':_0xf868('0x44'),'kKqET':_0xf868('0x45'),'aJTWY':_0xf868('0x46'),'QInAC':_0xf868('0x47'),'llYwf':_0xf868('0x48'),'rHcce':_0xf868('0x49'),'nvDqw':_0xf868('0x4a')};var _0x2f1215;(function(_0x2f1215){var _0x5f399e={'jssZI':_0x17f989[_0xf868('0x4b')],'WStxD':_0x17f989[_0xf868('0x4c')],'EOIxU':_0x17f989[_0xf868('0x4d')],'BWyVW':_0xf868('0x4e'),'HgOOS':_0xf868('0x4f'),'DxiMV':_0x17f989[_0xf868('0x50')],'KjJor':_0xf868('0x51'),'AAvTw':_0x17f989[_0xf868('0x52')],'biKru':_0x17f989[_0xf868('0x53')],'gZXUb':_0x17f989[_0xf868('0x54')],'qqdJq':_0x17f989['wckMg'],'LPiYw':_0x17f989[_0xf868('0x55')],'wodbt':_0x17f989[_0xf868('0x56')],'iSZkK':_0x17f989[_0xf868('0x57')],'LqDfZ':_0x17f989[_0xf868('0x58')],'QhNZa':_0x17f989[_0xf868('0x59')],'JMfMJ':_0x17f989[_0xf868('0x5a')],'VoeDN':_0x17f989['QInAC'],'WZBaV':_0x17f989['llYwf'],'YYNzv':_0x17f989[_0xf868('0x5b')],'ecUcc':_0xf868('0x5c'),'jtdcL':_0x17f989['nvDqw']};var _0x1f614e;(function(_0x1f614e){var _0x55d7af=_0x5f399e[_0xf868('0x5d')][_0xf868('0x5')]('|'),_0x2940a3=0x0;while(!![]){switch(_0x55d7af[_0x2940a3++]){case'0':_0x1f614e[_0xf868('0x5e')]=_0xf868('0x5f');continue;case'1':_0x1f614e[_0x5f399e[_0xf868('0x60')]]=_0xf868('0x61');continue;case'2':_0x1f614e[_0x5f399e[_0xf868('0x62')]]=_0x5f399e[_0xf868('0x63')];continue;case'3':_0x1f614e['TYPE_FW']=_0x5f399e['HgOOS'];continue;case'4':_0x1f614e[_0x5f399e[_0xf868('0x64')]]=_0x5f399e[_0xf868('0x65')];continue;case'5':_0x1f614e[_0x5f399e[_0xf868('0x66')]]=_0x5f399e[_0xf868('0x67')];continue;case'6':_0x1f614e[_0x5f399e[_0xf868('0x68')]]=_0x5f399e['qqdJq'];continue;case'7':_0x1f614e[_0xf868('0x69')]=_0x5f399e[_0xf868('0x6a')];continue;case'8':_0x1f614e[_0x5f399e[_0xf868('0x6b')]]=_0x5f399e['iSZkK'];continue;case'9':_0x1f614e[_0x5f399e[_0xf868('0x6c')]]=_0x5f399e[_0xf868('0x6d')];continue;case'10':_0x1f614e[_0x5f399e[_0xf868('0x6e')]]=_0x5f399e[_0xf868('0x6f')];continue;case'11':_0x1f614e[_0x5f399e[_0xf868('0x70')]]=_0x5f399e[_0xf868('0x71')];continue;case'12':_0x1f614e[_0x5f399e[_0xf868('0x72')]]=_0x5f399e[_0xf868('0x73')];continue;}break;}}(_0x1f614e=_0x2f1215['ErrorType']||(_0x2f1215[_0xf868('0x74')]={})));}(_0x2f1215=_0x14d6ee[_0xf868('0x75')]||(_0x14d6ee[_0xf868('0x75')]={})));}(fcc||(fcc={})));var fcc;(function(_0x3d8af5){var _0x3ec31b={'qypdO':function(_0x3a1298,_0x27e29a){return _0x3a1298+_0x27e29a;},'FwzIn':'例外錯誤\x20:\x20'};var _0x554f8a=function(){function _0x554f8a(_0x3f6685){this[_0xf868('0x76')]=_0x3f6685;}_0x554f8a[_0xf868('0x2c')][_0xf868('0x77')]=function(_0x36caab,_0x56f0a2){throw new Error(_0x3ec31b[_0xf868('0x78')](_0x3ec31b[_0xf868('0x79')],_0x36caab));};return _0x554f8a;}();_0x3d8af5[_0xf868('0x7a')]=_0x554f8a;}(fcc||(fcc={})));var fcc;(function(_0x289685){var _0x5e9860={'bwTch':function(_0x14df33,_0x4d451f){return _0x14df33+_0x4d451f;},'cKWke':function(_0x19d3ae,_0x32efea){return _0x19d3ae+_0x32efea;},'GCZJo':function(_0x41e566,_0x1946bf){return _0x41e566+_0x1946bf;},'KGrlS':function(_0x42eeba,_0x1293a1){return _0x42eeba+_0x1293a1;}};var _0x3e255f=function(){var _0x1397a7={'xEqUx':function(_0x111b51,_0x524fb7){return _0x5e9860['bwTch'](_0x111b51,_0x524fb7);},'mYySu':function(_0x2f396a,_0x12d8b9){return _0x5e9860[_0xf868('0x7b')](_0x2f396a,_0x12d8b9);},'AoHgE':function(_0x1664e5,_0x5bb1ca){return _0x5e9860[_0xf868('0x7c')](_0x1664e5,_0x5bb1ca);},'oRiDG':function(_0x56f302,_0x179441){return _0x5e9860[_0xf868('0x7d')](_0x56f302,_0x179441);},'TVqZQ':function(_0x5d439a,_0x3df263){return _0x5e9860[_0xf868('0x7e')](_0x5d439a,_0x3df263);},'Xlvfa':function(_0x30caab,_0x12ba93){return _0x5e9860[_0xf868('0x7e')](_0x30caab,_0x12ba93);},'vDZLf':function(_0x482962,_0x5047e3){return _0x482962+_0x5047e3;},'fmInN':function(_0x1de56e,_0x4e77be){return _0x1de56e+_0x4e77be;},'rruqa':function(_0x107ae2,_0x168618){return _0x5e9860[_0xf868('0x7e')](_0x107ae2,_0x168618);}};function _0x3e255f(_0x3562ad){this[_0xf868('0x7f')]=new _0x289685[(_0xf868('0x7a'))](_0x3562ad);this['configManager']=_0x3562ad;}_0x3e255f[_0xf868('0x2c')][_0xf868('0x77')]=function(_0x26baf1,_0xf957f5){if(this[_0xf868('0x76')][_0xf868('0x80')]){switch(_0x26baf1){case _0x289685[_0xf868('0x75')][_0xf868('0x74')]['IS_RUNNING_FW']:throw new Error(_0x1397a7['xEqUx'](_0x1397a7[_0xf868('0x81')](_0x289685[_0xf868('0x75')][_0xf868('0x74')][_0xf868('0x44')],'\x20'),_0xf957f5));case _0x289685[_0xf868('0x75')][_0xf868('0x74')]['UNDEFINED_FW']:throw new Error(_0x1397a7[_0xf868('0x81')](_0x1397a7[_0xf868('0x81')](_0x289685[_0xf868('0x75')][_0xf868('0x74')][_0xf868('0x82')],'\x20'),_0xf957f5));case _0x289685['type'][_0xf868('0x74')][_0xf868('0x83')]:throw new Error(_0x1397a7[_0xf868('0x84')](_0x289685[_0xf868('0x75')][_0xf868('0x74')][_0xf868('0x83')]+'\x20',_0xf957f5));case _0x289685[_0xf868('0x75')]['ErrorType'][_0xf868('0x5e')]:throw new Error(_0x1397a7[_0xf868('0x84')](_0x1397a7[_0xf868('0x85')](_0x289685[_0xf868('0x75')][_0xf868('0x74')][_0xf868('0x5e')],'\x20'),_0xf957f5));case _0x289685['type'][_0xf868('0x74')][_0xf868('0x86')]:throw new Error(_0x1397a7[_0xf868('0x87')](_0x1397a7[_0xf868('0x87')](_0x289685[_0xf868('0x75')]['ErrorType'][_0xf868('0x86')],'\x20'),_0xf957f5));case _0x289685[_0xf868('0x75')][_0xf868('0x74')]['WEB_REQUEST_FW']:throw new Error(_0x1397a7['oRiDG'](_0x1397a7['oRiDG'](_0x289685[_0xf868('0x75')][_0xf868('0x74')][_0xf868('0x69')],'\x20'),_0xf957f5));case _0x289685[_0xf868('0x75')]['ErrorType'][_0xf868('0x46')]:throw new Error(_0x1397a7['TVqZQ'](_0x1397a7[_0xf868('0x88')](_0x289685['type'][_0xf868('0x74')][_0xf868('0x46')],'\x20'),_0xf957f5));case _0x289685['type'][_0xf868('0x74')][_0xf868('0x3e')]:throw new Error(_0x1397a7[_0xf868('0x88')](_0x1397a7[_0xf868('0x88')](_0x289685[_0xf868('0x75')][_0xf868('0x74')][_0xf868('0x3e')],'\x20'),_0xf957f5));case _0x289685[_0xf868('0x75')][_0xf868('0x74')]['SCENE_FW']:throw new Error(_0x1397a7[_0xf868('0x88')](_0x1397a7[_0xf868('0x89')](_0x289685[_0xf868('0x75')][_0xf868('0x74')][_0xf868('0x48')],'\x20'),_0xf957f5));case _0x289685[_0xf868('0x75')][_0xf868('0x74')]['PROCESS_FW']:throw new Error(_0x1397a7['vDZLf'](_0x289685[_0xf868('0x75')][_0xf868('0x74')][_0xf868('0x3d')],'\x20')+_0xf957f5);case _0x289685[_0xf868('0x75')][_0xf868('0x74')][_0xf868('0x5c')]:throw new Error(_0x1397a7[_0xf868('0x8a')](_0x1397a7[_0xf868('0x8b')](_0x289685[_0xf868('0x75')][_0xf868('0x74')][_0xf868('0x5c')],'\x20'),_0xf957f5));case _0x289685[_0xf868('0x75')]['ErrorType']['SLOT_STYLE_FW']:throw new Error(_0x1397a7[_0xf868('0x8b')](_0x1397a7[_0xf868('0x8b')](_0x289685[_0xf868('0x75')][_0xf868('0x74')][_0xf868('0x42')],'\x20'),_0xf957f5));case _0x289685['type']['ErrorType'][_0xf868('0x8c')]:throw new Error(_0x1397a7[_0xf868('0x8b')](_0x1397a7['rruqa'](_0x289685[_0xf868('0x75')][_0xf868('0x74')][_0xf868('0x8c')],'\x20'),_0xf957f5));default:this['unknownError'][_0xf868('0x77')](_0x26baf1);}}else{console[_0xf868('0x8d')](_0xf868('0x8e'));}};return _0x3e255f;}();_0x289685[_0xf868('0x8f')]=_0x3e255f;}(fcc||(fcc={})));var fcc;(function(_0x7f0628){var _0x2d1ae2={'KOcoC':function(_0x16edf7,_0x14f50d){return _0x16edf7!=_0x14f50d;},'vuvcG':_0xf868('0x90'),'HzCTm':_0xf868('0x91'),'HcjtF':function(_0x3decd0,_0xa4a4a0){return _0x3decd0===_0xa4a4a0;}};var _0x1f257b=function(){var _0x34238f={'YlJKQ':_0x2d1ae2[_0xf868('0x92')],'HwLRe':function(_0x23988d,_0x36dbea){return _0x2d1ae2[_0xf868('0x93')](_0x23988d,_0x36dbea);}};function _0x1f257b(_0x528a2c){this[_0xf868('0x94')]=new _0x7f0628[(_0xf868('0x8f'))](_0x528a2c);}_0x1f257b[_0xf868('0x2c')][_0xf868('0x77')]=function(_0x4f535b,_0x236f47){if(typeof _0x4f535b===_0x34238f[_0xf868('0x95')]){this['frameWorkError']['checkErrorType'](_0x4f535b,_0x236f47);}else if(_0x34238f[_0xf868('0x96')](_0x4f535b,null)){return this['checkObjectType'](_0x236f47);}};_0x1f257b['prototype']['checkObjectType']=function(_0x44882e){if(_0x44882e&&_0x2d1ae2[_0xf868('0x97')](_0x44882e,0x0)){return typeof _0x44882e;}else{throw new Error(_0x2d1ae2[_0xf868('0x98')]);}};return _0x1f257b;}();_0x7f0628[_0xf868('0x99')]=_0x1f257b;}(fcc||(fcc={})));var fcc;(function(_0x1a742c){var _0x8d5acc={'XvkzT':function(_0x378275,_0x5dedf4){return _0x378275(_0x5dedf4);},'uzUBS':_0xf868('0x9a'),'cOQhF':_0xf868('0x9b')};var _0x34af5e=function(){function _0x34af5e(_0x31fda3){this[_0xf868('0x9c')]=null;this[_0xf868('0x9d')]=_0x31fda3;}_0x34af5e[_0xf868('0x2c')][_0xf868('0x9e')]=function(_0x14d4ba,_0x1bf1c5,_0x39b3bf,_0xb2c4d3){var _0x71e532=this;if(this['timeOut']!=null)_0x8d5acc[_0xf868('0x9f')](clearTimeout,this[_0xf868('0x9c')]);if(!this[_0xf868('0x9d')][_0xf868('0xa0')])this[_0xf868('0x9d')][_0xf868('0xa1')](_0x1a742c[_0xf868('0x75')]['ErrorType'][_0xf868('0x82')],_0x8d5acc[_0xf868('0xa2')]);if(!this[_0xf868('0x9d')]['errorLabel'])this['errorManager'][_0xf868('0xa1')](_0x1a742c[_0xf868('0x75')]['ErrorType'][_0xf868('0x82')],_0x8d5acc['cOQhF']);if(!this[_0xf868('0x9d')][_0xf868('0xa3')])this[_0xf868('0x9d')][_0xf868('0xa1')](_0x1a742c[_0xf868('0x75')][_0xf868('0x74')][_0xf868('0x82')],_0xf868('0xa4'));_0x1a742c[_0xf868('0xa5')][_0xf868('0xa6')]=!![];this['errorManager']['errorNode']['active']=!![];this[_0xf868('0x9d')][_0xf868('0xa7')][_0xf868('0x91')]=_0x1bf1c5;if(!_0x14d4ba){this[_0xf868('0x9d')][_0xf868('0xa3')]['active']=![];}else if(_0xb2c4d3){this[_0xf868('0x9d')][_0xf868('0xa3')][_0xf868('0xa8')]=_0xb2c4d3;this['errorManager']['errorButtonLabel']['string']=_0x39b3bf;}else if(this[_0xf868('0x9d')][_0xf868('0xa9')]){this['errorManager'][_0xf868('0xa3')][_0xf868('0xa8')]=this[_0xf868('0x9d')]['isShowBackHomeButton'];this[_0xf868('0x9d')]['errorButtonLabel'][_0xf868('0x91')]=_0x39b3bf;}else{this[_0xf868('0x9d')][_0xf868('0xa3')][_0xf868('0xa8')]=![];}if(!_0x14d4ba){this[_0xf868('0x9c')]=window[_0xf868('0xaa')](function(){_0x1a742c[_0xf868('0xa5')]['errorState']=![];_0x71e532[_0xf868('0x9d')][_0xf868('0xa0')][_0xf868('0xa8')]=![];_0x71e532[_0xf868('0x9d')][_0xf868('0xa3')][_0xf868('0xa8')]=![];_0x71e532[_0xf868('0x9c')]=null;},this[_0xf868('0x9d')][_0xf868('0xab')]);}};return _0x34af5e;}();_0x1a742c[_0xf868('0xac')]=_0x34af5e;}(fcc||(fcc={})));var fcc;(function(_0xf12b17){var _0x263914={'lkRyd':_0xf868('0xad'),'XOpbH':function(_0x5be731,_0x5af51d){return _0x5be731==_0x5af51d;},'iVAFM':_0xf868('0xae'),'XCTQM':_0xf868('0xaf'),'JqZGY':function(_0x31cdfd,_0x434bad){return _0x31cdfd!=_0x434bad;},'PXnfy':_0xf868('0xb0'),'cpuNY':_0xf868('0xb1'),'vJrsm':'ErrorManager\x20errorLabel為空','XKpsi':_0xf868('0xb2'),'nGFGT':_0xf868('0xa4')};var _0x330a57=function(){var _0x21f126={'AjZTr':_0x263914['lkRyd'],'eyqAK':function(_0x590205,_0x454406){return _0x263914[_0xf868('0xb3')](_0x590205,_0x454406);},'nzkhH':_0x263914[_0xf868('0xb4')],'eVtRj':_0x263914[_0xf868('0xb5')],'Fkian':function(_0xa9fe1c,_0xa5b1c2){return _0x263914[_0xf868('0xb6')](_0xa9fe1c,_0xa5b1c2);},'dDEbM':_0x263914[_0xf868('0xb7')],'yKueF':_0x263914['cpuNY'],'cDDOY':_0x263914['vJrsm'],'okNtS':_0xf868('0x9a'),'dEqRb':_0x263914[_0xf868('0xb8')],'DvLLr':_0x263914['nGFGT']};function _0x330a57(_0x2ff399){this[_0xf868('0xb9')]=null;this[_0xf868('0x9d')]=_0x2ff399;}_0x330a57[_0xf868('0x2c')]['showError']=function(_0x30f4ea,_0xe6bb98,_0x53820d){var _0x9a9872=_0x21f126[_0xf868('0xba')][_0xf868('0x5')]('|'),_0x31bf18=0x0;while(!![]){switch(_0x9a9872[_0x31bf18++]){case'0':if(_0x21f126[_0xf868('0xbb')](this['errorManager'][_0xf868('0xbc')],0x0)){this[_0xf868('0x9d')][_0xf868('0xa1')](_0x21f126[_0xf868('0xbd')]);}continue;case'1':_0xf12b17['ErrorManager'][_0xf868('0xbe')]=!![];continue;case'2':var _0xaf6f74=this;continue;case'3':this[_0xf868('0x9d')][_0xf868('0xbf')][_0xf868('0x91')]=_0xe6bb98;continue;case'4':if(!this['errorManager'][_0xf868('0xbf')])this[_0xf868('0x9d')][_0xf868('0xa1')](_0xf12b17[_0xf868('0x75')]['ErrorType'][_0xf868('0x82')],_0x21f126[_0xf868('0xc0')]);continue;case'5':this[_0xf868('0x9d')][_0xf868('0xc1')]['active']=!![];continue;case'6':if(_0x30f4ea)return;continue;case'7':if(_0x21f126[_0xf868('0xc2')](this[_0xf868('0xb9')],null))clearTimeout(this[_0xf868('0xb9')]);continue;case'8':if(!this['errorManager']['warningNode'])this[_0xf868('0x9d')]['executeError'](_0xf12b17['type']['ErrorType'][_0xf868('0x82')],_0x21f126[_0xf868('0xc3')]);continue;case'9':this[_0xf868('0xb9')]=window[_0xf868('0xaa')](function(){_0xf12b17[_0xf868('0xa5')][_0xf868('0xbe')]=![];_0xaf6f74[_0xf868('0x9d')][_0xf868('0xc1')][_0xf868('0xa8')]=![];},this[_0xf868('0x9d')]['warningDelayTime']);continue;}break;}};_0x330a57[_0xf868('0x2c')][_0xf868('0xc4')]=function(_0x338a58){var _0x50159b=_0x21f126[_0xf868('0xc5')][_0xf868('0x5')]('|'),_0x1f4ff2=0x0;while(!![]){switch(_0x50159b[_0x1f4ff2++]){case'0':if(!this[_0xf868('0x9d')][_0xf868('0xa7')])this[_0xf868('0x9d')][_0xf868('0xa1')](_0xf12b17['type'][_0xf868('0x74')][_0xf868('0x82')],_0x21f126[_0xf868('0xc6')]);continue;case'1':if(!this['errorManager']['errorNode'])this['errorManager'][_0xf868('0xa1')](_0xf12b17[_0xf868('0x75')]['ErrorType'][_0xf868('0x82')],_0x21f126[_0xf868('0xc7')]);continue;case'2':if(_0xf12b17[_0xf868('0xa5')][_0xf868('0xa6')])return;continue;case'3':this['errorManager'][_0xf868('0xa7')][_0xf868('0x91')]=_0x338a58;continue;case'4':this[_0xf868('0x9d')][_0xf868('0xa0')][_0xf868('0xa8')]=!![];continue;case'5':if(_0x21f126[_0xf868('0xbb')](this['errorManager'][_0xf868('0xab')],0x0)){this[_0xf868('0x9d')]['executeError'](_0xf12b17[_0xf868('0x75')][_0xf868('0x74')][_0xf868('0x82')],_0x21f126[_0xf868('0xc8')]);}continue;case'6':var _0x1b1e41=this;continue;case'7':_0xf12b17[_0xf868('0xa5')][_0xf868('0xa6')]=!![];continue;case'8':if(!this['errorManager'][_0xf868('0xa3')])this['errorManager']['executeError'](_0xf12b17[_0xf868('0x75')][_0xf868('0x74')][_0xf868('0x82')],_0x21f126['DvLLr']);continue;case'9':window[_0xf868('0xaa')](function(){_0xf12b17[_0xf868('0xa5')][_0xf868('0xa6')]=![];_0x1b1e41[_0xf868('0x9d')][_0xf868('0xa0')][_0xf868('0xa8')]=![];},this['errorManager'][_0xf868('0xab')]);continue;}break;}};return _0x330a57;}();_0xf12b17[_0xf868('0xc9')]=_0x330a57;}(fcc||(fcc={})));var fcc;(function(_0x476eef){var _0x18d255=function(){function _0x18d255(_0x5a1fe9,_0x3e42c3){this[_0xf868('0xca')]=new _0x476eef[(_0xf868('0x99'))](_0x5a1fe9);this[_0xf868('0xcb')]=new _0x476eef[(_0xf868('0xac'))](_0x3e42c3);this[_0xf868('0xcc')]=new _0x476eef['WarningError'](_0x3e42c3);}_0x18d255[_0xf868('0x2c')][_0xf868('0x77')]=function(_0x163418,_0x44a7ff){return this[_0xf868('0xca')][_0xf868('0x77')](_0x163418,_0x44a7ff);};_0x18d255[_0xf868('0x2c')][_0xf868('0xcd')]=function(_0x1414a5,_0x54a574,_0x3e75b6,_0x66f1f4){this[_0xf868('0xcb')][_0xf868('0x9e')](_0x1414a5,_0x54a574,_0x3e75b6,_0x66f1f4);};_0x18d255[_0xf868('0x2c')][_0xf868('0xce')]=function(_0xe7cfed,_0x4e61a1,_0x4fe5ec){this[_0xf868('0xcc')][_0xf868('0x9e')](_0xe7cfed,_0x4e61a1,_0x4fe5ec);};return _0x18d255;}();_0x476eef[_0xf868('0xcf')]=_0x18d255;}(fcc||(fcc={})));var fcc;(function(_0x169931){var _0x41b468={'EcZzV':_0xf868('0xd0'),'JVNNP':_0xf868('0xa6'),'pebXG':'warningNode','kgxuy':_0xf868('0xa3'),'xvDOh':'warningLabel','UHcve':_0xf868('0xa7'),'BJLNA':'errorDelayTime','gaiOe':_0xf868('0xbc')};var _0x2c115d=function(){var _0x3a7a37={'FGIXv':_0xf868('0xd1')};function _0x2c115d(_0x320c08){var _0x280af2=_0xf868('0xd2')[_0xf868('0x5')]('|'),_0x228e5e=0x0;while(!![]){switch(_0x280af2[_0x228e5e++]){case'0':this[_0xf868('0xd3')]=0x7d0;continue;case'1':this[_0xf868('0xd4')]=new _0x169931[(_0xf868('0xcf'))](_0x320c08,this);continue;case'2':_0x2c115d['_warningState']=![];continue;case'3':this[_0xf868('0xd5')]=null;continue;case'4':_0x2c115d[_0xf868('0xd6')]=![];continue;case'5':this[_0xf868('0xd7')]=0x3e8;continue;case'6':this[_0xf868('0x76')]=_0x320c08;continue;case'7':this['_isShowBackHomeButton']=!!this[_0xf868('0x76')][_0xf868('0xd8')][_0xf868('0xd9')]();continue;case'8':this[_0xf868('0xda')]=null;continue;}break;}}_0x2c115d[_0xf868('0xdb')]=function(_0x30468a){if(!this[_0xf868('0xdc')]){this[_0xf868('0xdc')]=new _0x2c115d(_0x30468a);_0x169931[_0xf868('0xdd')]=this['_instance'];}};Object[_0xf868('0xde')](_0x2c115d,_0x41b468['EcZzV'],{'get':function(){if(!this[_0xf868('0xdc')]){throw new Error(_0x3a7a37[_0xf868('0xdf')]);}return this[_0xf868('0xdc')];},'enumerable':![],'configurable':!![]});_0x2c115d[_0xf868('0x2c')][_0xf868('0xa1')]=function(_0x3a57c6,_0x45453c){return this[_0xf868('0xd4')]['checkErrorType'](_0x3a57c6,_0x45453c);};_0x2c115d[_0xf868('0x2c')][_0xf868('0xe0')]=function(_0x1ce9f7,_0xbe1e46,_0x26494d,_0x2f1ca7){this[_0xf868('0xd4')][_0xf868('0xcd')](_0x1ce9f7,_0xbe1e46,_0x26494d,_0x2f1ca7);};_0x2c115d['prototype'][_0xf868('0xe1')]=function(_0x25112d,_0x483c42,_0x8ad083){this[_0xf868('0xd4')][_0xf868('0xce')](_0x25112d,_0x483c42,_0x8ad083);};_0x2c115d[_0xf868('0x2c')]['setErrorNode']=function(_0x3b510c){this[_0xf868('0xda')]=_0x3b510c;return this;};_0x2c115d[_0xf868('0x2c')][_0xf868('0xe2')]=function(_0x12312d){this[_0xf868('0xd5')]=_0x12312d;return this;};_0x2c115d[_0xf868('0x2c')][_0xf868('0xe3')]=function(_0x13c927){this[_0xf868('0xe4')]=_0x13c927;return this;};_0x2c115d['prototype']['setErrorDelayTime']=function(_0x11830a){this[_0xf868('0xd3')]=_0x11830a;return this;};_0x2c115d[_0xf868('0x2c')]['setWarningDelayTime']=function(_0x2f8c3f){this[_0xf868('0xd7')]=_0x2f8c3f;return this;};_0x2c115d[_0xf868('0x2c')][_0xf868('0xe5')]=function(_0x3044ee){this[_0xf868('0xe6')]=_0x3044ee;return this;};_0x2c115d[_0xf868('0x2c')][_0xf868('0xe7')]=function(_0x3c94f6){this[_0xf868('0xe8')]=_0x3c94f6;return this;};_0x2c115d[_0xf868('0x2c')][_0xf868('0xe9')]=function(_0x155243){this['_errorButtonLabel']=_0x155243;return this;};Object[_0xf868('0xde')](_0x2c115d,_0x41b468['JVNNP'],{'get':function(){return this[_0xf868('0xd6')];},'set':function(_0x135d88){this[_0xf868('0xd6')]=_0x135d88;},'enumerable':![],'configurable':!![]});Object[_0xf868('0xde')](_0x2c115d,_0xf868('0xbe'),{'get':function(){return this[_0xf868('0xea')];},'set':function(_0x41e9f4){this['_warningState']=_0x41e9f4;},'enumerable':![],'configurable':!![]});Object[_0xf868('0xde')](_0x2c115d[_0xf868('0x2c')],_0xf868('0xa0'),{'get':function(){return this[_0xf868('0xda')];},'enumerable':![],'configurable':!![]});Object[_0xf868('0xde')](_0x2c115d[_0xf868('0x2c')],_0x41b468[_0xf868('0xeb')],{'get':function(){return this[_0xf868('0xe6')];},'enumerable':![],'configurable':!![]});Object[_0xf868('0xde')](_0x2c115d[_0xf868('0x2c')],_0x41b468[_0xf868('0xec')],{'get':function(){return this[_0xf868('0xe4')];},'enumerable':![],'configurable':!![]});Object[_0xf868('0xde')](_0x2c115d[_0xf868('0x2c')],_0x41b468[_0xf868('0xed')],{'get':function(){return this[_0xf868('0xe8')];},'enumerable':![],'configurable':!![]});Object['defineProperty'](_0x2c115d['prototype'],_0x41b468[_0xf868('0xee')],{'get':function(){return this[_0xf868('0xd5')];},'enumerable':![],'configurable':!![]});Object[_0xf868('0xde')](_0x2c115d[_0xf868('0x2c')],_0x41b468[_0xf868('0xef')],{'get':function(){return this[_0xf868('0xd3')];},'enumerable':![],'configurable':!![]});Object['defineProperty'](_0x2c115d['prototype'],_0x41b468['gaiOe'],{'get':function(){return this[_0xf868('0xd7')];},'enumerable':![],'configurable':!![]});Object[_0xf868('0xde')](_0x2c115d[_0xf868('0x2c')],'isShowBackHomeButton',{'get':function(){return this[_0xf868('0xf0')];},'enumerable':![],'configurable':!![]});Object[_0xf868('0xde')](_0x2c115d[_0xf868('0x2c')],_0xf868('0xf1'),{'get':function(){return this[_0xf868('0xf2')];},'enumerable':![],'configurable':!![]});return _0x2c115d;}();_0x169931['ErrorManager']=_0x2c115d;}(fcc||(fcc={})));var fcc;(function(_0x2bdc32){var _0xe26002=function(){function _0xe26002(_0x5c04f9){this['animationManager']=_0x5c04f9;}_0xe26002[_0xf868('0x2c')]['updateSpineAnimationName']=function(_0x1958c6,_0x592e47,_0x465a8f){var _0x11b477=new Map();_0x11b477[_0xf868('0xf3')](_0x592e47,_0x465a8f);this[_0xf868('0xf4')][_0xf868('0xf5')]['set'](_0x1958c6,_0x11b477);};return _0xe26002;}();_0x2bdc32[_0xf868('0xf6')]=_0xe26002;}(fcc||(fcc={})));var fcc;(function(_0x4502ca){var _0x1c2053={'PMLLd':_0xf868('0xf7'),'nitaT':_0xf868('0xf8'),'XKohI':function(_0x14bfea,_0x2a6892){return _0x14bfea+_0x2a6892;},'ofIRN':_0xf868('0xf9'),'tkvWM':function(_0x35489b,_0x504022){return _0x35489b+_0x504022;},'NVioO':_0xf868('0xf5')};var _0x1bcb89=function(){function _0x1bcb89(_0x5a369a){this[_0xf868('0x76')]=_0x5a369a;this[_0xf868('0xfa')]=new Map();this[_0xf868('0xfb')]=new _0x4502ca[(_0xf868('0xf6'))](this);}_0x1bcb89[_0xf868('0xdb')]=function(_0x39262e){if(!this[_0xf868('0xdc')]){this['_instance']=new _0x1bcb89(_0x39262e);_0x4502ca[_0xf868('0xfc')]=this['_instance'];}};Object[_0xf868('0xde')](_0x1bcb89,_0xf868('0xd0'),{'get':function(){if(!this[_0xf868('0xdc')]){_0x4502ca[_0xf868('0xa5')]['instance'][_0xf868('0xa1')](_0x4502ca['type'][_0xf868('0x74')][_0xf868('0x46')],_0x1c2053[_0xf868('0xfd')]);return;}return this['_instance'];},'enumerable':![],'configurable':!![]});_0x1bcb89['prototype'][_0xf868('0xfe')]=function(_0x74d82d,_0x1cdc39){if(this[_0xf868('0xfa')][_0xf868('0xff')](_0x74d82d)){_0x4502ca['ErrorManager'][_0xf868('0xd0')]['executeError'](_0x4502ca['type'][_0xf868('0x74')]['ANIMATION_FW'],_0x1c2053[_0xf868('0x100')]);}else if(this[_0xf868('0xfa')][_0xf868('0x101')](_0x74d82d)[_0xf868('0xff')](_0x1c2053[_0xf868('0x102')]('',_0x1cdc39))){_0x4502ca[_0xf868('0xa5')][_0xf868('0xd0')][_0xf868('0xa1')](_0x4502ca[_0xf868('0x75')][_0xf868('0x74')][_0xf868('0x5e')],_0x1c2053['ofIRN']);}return this[_0xf868('0xf5')][_0xf868('0x101')](_0x74d82d)[_0xf868('0x101')](_0x1c2053['tkvWM']('',_0x1cdc39));};Object['defineProperty'](_0x1bcb89[_0xf868('0x2c')],_0x1c2053[_0xf868('0x103')],{'get':function(){return this[_0xf868('0xfa')];},'set':function(_0xf88c73){this[_0xf868('0xfa')]=_0xf88c73;},'enumerable':![],'configurable':!![]});Object[_0xf868('0xde')](_0x1bcb89[_0xf868('0x2c')],'handler',{'get':function(){return this['_handler'];},'enumerable':![],'configurable':!![]});return _0x1bcb89;}();_0x4502ca[_0xf868('0x104')]=_0x1bcb89;}(fcc||(fcc={})));var fcc;(function(_0x5599ee){var _0x2c5fbc={'mQUbR':_0xf868('0x105'),'nVxJb':'NOT_PLAYING','NXrYL':_0xf868('0x106')};var _0x1086db;(function(_0x1086db){var _0x17d476={'uoWaF':_0x2c5fbc[_0xf868('0x107')],'BaQYh':_0x2c5fbc['nVxJb'],'CEnJn':_0x2c5fbc[_0xf868('0x108')]};var _0x123e76;(function(_0x123e76){_0x123e76[_0x17d476[_0xf868('0x109')]]=_0x17d476[_0xf868('0x109')];_0x123e76[_0x17d476[_0xf868('0x10a')]]=_0xf868('0x10b');_0x123e76[_0x17d476[_0xf868('0x10c')]]=_0x17d476[_0xf868('0x10c')];}(_0x123e76=_0x1086db[_0xf868('0x10d')]||(_0x1086db['AudioStateType']={})));}(_0x1086db=_0x5599ee[_0xf868('0x75')]||(_0x5599ee[_0xf868('0x75')]={})));}(fcc||(fcc={})));var fcc;(function(_0x564b8f){var _0xc1e850={'WELcQ':function(_0x43bf79,_0x1bc7ff){return _0x43bf79/_0x1bc7ff;},'igcXM':function(_0x3ecabc,_0x5b74c5){return _0x3ecabc*_0x5b74c5;},'btZgj':function(_0x5c4a61,_0x5bb395){return _0x5c4a61+_0x5bb395;},'AOtSK':function(_0x64b245,_0x90ced9){return _0x64b245/_0x90ced9;},'PZlbi':function(_0x3d64d5,_0x18f7f2){return _0x3d64d5/_0x18f7f2;},'wYwTZ':function(_0x3081f0,_0x51f20d){return _0x3081f0*_0x51f20d;},'mNoyz':function(_0x1f1dd3,_0x395bfb){return _0x1f1dd3||_0x395bfb;},'iABUb':function(_0x10bb7b,_0x107fb6){return _0x10bb7b||_0x107fb6;},'uwlcJ':function(_0x1b84e1,_0x3215ea){return _0x1b84e1(_0x3215ea);},'jLSyd':function(_0x364db0,_0x27b57e){return _0x364db0-_0x27b57e;},'WVKmM':function(_0x20a4b5,_0x2295b7){return _0x20a4b5==_0x2295b7;},'WPIjj':function(_0x2fefff,_0x4112cc){return _0x2fefff<_0x4112cc;},'ugpsa':function(_0x1c0292,_0x22cd09){return _0x1c0292+_0x22cd09;},'Arixx':function(_0x31e53d,_0x13651a){return _0x31e53d>_0x13651a;}};var _0x58baab;(function(_0x58baab){var _0x3a5953={'sCLNR':function(_0x110f82,_0x42fb0f){return _0xc1e850[_0xf868('0x10e')](_0x110f82,_0x42fb0f);},'XqbEW':function(_0x43f093,_0x38e1df){return _0xc1e850[_0xf868('0x10f')](_0x43f093,_0x38e1df);},'NxRrY':function(_0x24b488,_0x56893d){return _0xc1e850[_0xf868('0x110')](_0x24b488,_0x56893d);},'PTACC':function(_0x5963f0,_0x460462){return _0x5963f0+_0x460462;},'XbZFb':function(_0x592fba,_0x26ae06){return _0x592fba||_0x26ae06;},'MRPma':function(_0x75dc20,_0x388f57){return _0xc1e850['mNoyz'](_0x75dc20,_0x388f57);},'EQpJL':function(_0x4a4422,_0x2b25d9){return _0xc1e850[_0xf868('0x111')](_0x4a4422,_0x2b25d9);},'lSBoc':function(_0x3b62f7,_0x3a4d5c){return _0xc1e850[_0xf868('0x112')](_0x3b62f7,_0x3a4d5c);},'TlYPf':function(_0x3c0499,_0x511b9b){return _0xc1e850[_0xf868('0x113')](_0x3c0499,_0x511b9b);},'OKgrT':function(_0x7d7c5c,_0x352e0c){return _0xc1e850[_0xf868('0x114')](_0x7d7c5c,_0x352e0c);},'lXzbk':function(_0x127bf5,_0x26306b){return _0xc1e850[_0xf868('0x115')](_0x127bf5,_0x26306b);},'XRMVx':function(_0x8f7ef4,_0x4d05ed){return _0xc1e850[_0xf868('0x116')](_0x8f7ef4,_0x4d05ed);},'sncLi':function(_0x3411ef,_0x465ab0){return _0xc1e850[_0xf868('0x117')](_0x3411ef,_0x465ab0);},'TUcEa':function(_0x3f8642,_0x39a7a1){return _0xc1e850[_0xf868('0x118')](_0x3f8642,_0x39a7a1);}};var _0x4ee4c2=function(){var _0x97cdd6={'OtaQq':function(_0x41c3,_0x1f4519){return _0xc1e850[_0xf868('0x119')](_0x41c3,_0x1f4519);},'eQrEt':function(_0x44fa3e,_0x445800){return _0xc1e850[_0xf868('0x119')](_0x44fa3e,_0x445800);},'FVSwm':function(_0x5c3b52,_0x24498b){return _0xc1e850['igcXM'](_0x5c3b52,_0x24498b);},'PkMcE':function(_0x46501a,_0x4ae88a){return _0xc1e850[_0xf868('0x112')](_0x46501a,_0x4ae88a);},'uSVNA':function(_0x2b4b1c,_0x551a40){return _0x2b4b1c||_0x551a40;}};function _0x4ee4c2(){}_0x4ee4c2[_0xf868('0x11a')]=function(_0x4705c3,_0x1288ab){return _0x3a5953[_0xf868('0x11b')](Math[_0xf868('0x11c')](_0x3a5953['XqbEW'](Math[_0xf868('0x11c')](_0x3a5953[_0xf868('0x11d')](_0x4705c3,Math['pow'](0xa,_0x3a5953[_0xf868('0x11e')](_0x3a5953[_0xf868('0x11f')](_0x1288ab,0x0),0x1)))),0xa)),Math[_0xf868('0x120')](0xa,_0x3a5953[_0xf868('0x121')](_0x1288ab,0x0)));};_0x4ee4c2[_0xf868('0x122')]=function(_0x586739,_0x37173b){return _0x3a5953[_0xf868('0x123')](Math[_0xf868('0x124')](_0x3a5953[_0xf868('0x123')](Math[_0xf868('0x124')](_0x3a5953[_0xf868('0x11d')](_0x586739,Math[_0xf868('0x120')](0xa,_0x3a5953[_0xf868('0x11e')](_0x37173b||0x0,0x1)))),0xa)),Math[_0xf868('0x120')](0xa,_0x3a5953[_0xf868('0x125')](_0x37173b,0x0)));};_0x4ee4c2[_0xf868('0x126')]=function(_0x270630,_0x2dede8){return _0x97cdd6[_0xf868('0x127')](Math[_0xf868('0x128')](_0x97cdd6['eQrEt'](Math[_0xf868('0x128')](_0x97cdd6[_0xf868('0x129')](_0x270630,Math['pow'](0xa,_0x97cdd6['PkMcE'](_0x97cdd6[_0xf868('0x12a')](_0x2dede8,0x0),0x1)))),0xa)),Math[_0xf868('0x120')](0xa,_0x2dede8||0x0));};_0x4ee4c2[_0xf868('0x12b')]=function(_0x16d8af){var _0x208dc5=_0x3a5953[_0xf868('0x12c')](_0x3a5953[_0xf868('0x12d')](String,_0x16d8af)['indexOf']('.'),0x1);var _0x16ed4c=_0x3a5953[_0xf868('0x12e')](_0x3a5953[_0xf868('0x12d')](String,_0x16d8af)[_0xf868('0xe')],_0x208dc5);if(_0x3a5953[_0xf868('0x12f')](_0x208dc5,0x0)){return 0x0;}else{return _0x16ed4c;}};_0x4ee4c2['numberFormat']=function(_0x6ae1d3){if(_0x3a5953[_0xf868('0x130')](_0x6ae1d3,0x3e8)){return _0x3a5953[_0xf868('0x131')](_0x6ae1d3,'');}if(_0x3a5953[_0xf868('0x132')](_0x6ae1d3,0x3e8)){return _0x3a5953[_0xf868('0x123')](_0x6ae1d3,0x3e8)+'K';}};_0x4ee4c2[_0xf868('0x133')]=function(_0x29ae31){return this[_0xf868('0x134')][_0xf868('0x133')](_0x29ae31);};_0x4ee4c2['formatting']=new Intl['NumberFormat']();return _0x4ee4c2;}();_0x58baab[_0xf868('0x135')]=_0x4ee4c2;}(_0x58baab=_0x564b8f[_0xf868('0x136')]||(_0x564b8f['global']={})));}(fcc||(fcc={})));var fcc;(function(_0x23376c){var _0x4831a4={'dExjs':_0xf868('0x137'),'sbpvU':'CSS','RSzVr':_0xf868('0x138'),'eVigb':_0xf868('0x139'),'idfzJ':_0xf868('0x13a'),'zCRku':_0xf868('0x13b'),'ySKUE':_0xf868('0x13c'),'hJsLw':'PREFAB','yuypm':_0xf868('0x13d')};var _0x33e64d;(function(_0x33e64d){var _0x2dadd2;(function(_0x2dadd2){var _0x40ca22=_0xf868('0x13e')['split']('|'),_0x439014=0x0;while(!![]){switch(_0x40ca22[_0x439014++]){case'0':_0x2dadd2[_0x4831a4[_0xf868('0x13f')]]=_0x4831a4['dExjs'];continue;case'1':_0x2dadd2[_0x4831a4[_0xf868('0x140')]]=_0x4831a4[_0xf868('0x140')];continue;case'2':_0x2dadd2[_0xf868('0x138')]=_0x4831a4['RSzVr'];continue;case'3':_0x2dadd2[_0x4831a4[_0xf868('0x141')]]=_0x4831a4[_0xf868('0x141')];continue;case'4':_0x2dadd2[_0xf868('0x13a')]=_0x4831a4[_0xf868('0x142')];continue;case'5':_0x2dadd2[_0x4831a4[_0xf868('0x143')]]=_0x4831a4['zCRku'];continue;case'6':_0x2dadd2[_0xf868('0x13c')]=_0x4831a4['ySKUE'];continue;case'7':_0x2dadd2[_0x4831a4['hJsLw']]='PREFAB';continue;case'8':_0x2dadd2[_0x4831a4[_0xf868('0x144')]]=_0x4831a4[_0xf868('0x144')];continue;}break;}}(_0x2dadd2=_0x33e64d[_0xf868('0x145')]||(_0x33e64d['LoadType']={})));}(_0x33e64d=_0x23376c[_0xf868('0x75')]||(_0x23376c[_0xf868('0x75')]={})));}(fcc||(fcc={})));var fcc;(function(_0x3356d9){var _0x28c07b={'hWYzB':function(_0x449dc0,_0x41de27){return _0x449dc0<_0x41de27;},'FewyX':function(_0x12155f,_0x2cdac3){return _0x12155f-_0x2cdac3;},'JfkOC':function(_0x2c55dc,_0x34b018,_0x16f097){return _0x2c55dc(_0x34b018,_0x16f097);},'OTnbX':function(_0x17a278,_0xdd4cff){return _0x17a278(_0xdd4cff);},'WOteT':_0xf868('0xf7'),'DUTTc':_0xf868('0x146'),'mpYhl':_0xf868('0xd0'),'vslWC':_0xf868('0x147'),'EGutj':'eventsCurrentlyBeing'};var _0x57d4f5=function(){var _0x360e39={'rGapG':_0x28c07b[_0xf868('0x148')],'gIsJe':_0x28c07b['DUTTc']};function _0x57d4f5(_0x2cdbea){this[_0xf868('0x76')]=_0x2cdbea;this[_0xf868('0x149')]=0x0;this['_eventsCurrentlyBeing']=new Map();this[_0xf868('0x14a')]=new cc['EventTarget']();}_0x57d4f5['setInstance']=function(_0x494381){if(!this[_0xf868('0xdc')]){this[_0xf868('0xdc')]=new _0x57d4f5(_0x494381);_0x3356d9[_0xf868('0x14b')]=this[_0xf868('0xdc')];}};Object[_0xf868('0xde')](_0x57d4f5,_0x28c07b[_0xf868('0x14c')],{'get':function(){if(!this[_0xf868('0xdc')]){_0x3356d9[_0xf868('0xa5')]['instance'][_0xf868('0xa1')](_0x3356d9['type'][_0xf868('0x74')][_0xf868('0x5c')],_0x360e39['rGapG']);return;}return this['_instance'];},'enumerable':![],'configurable':!![]});_0x57d4f5[_0xf868('0x2c')][_0xf868('0x14d')]=function(_0x17cc4c){var _0x3c3066;var _0x2cde31=[];for(var _0x51d81c=0x1;_0x28c07b[_0xf868('0x14e')](_0x51d81c,arguments[_0xf868('0xe')]);_0x51d81c++){_0x2cde31[_0x28c07b[_0xf868('0x14f')](_0x51d81c,0x1)]=arguments[_0x51d81c];}(_0x3c3066=this[_0xf868('0x14a')])[_0xf868('0x150')][_0xf868('0x151')](_0x3c3066,_0x28c07b[_0xf868('0x152')](__spreadArray,[_0x17cc4c],_0x28c07b[_0xf868('0x153')](__read,_0x2cde31)));};_0x57d4f5[_0xf868('0x2c')][_0xf868('0x154')]=function(_0x3c3c86,_0x2e4f20,_0x464e0c,_0x164e62){this[_0xf868('0x149')]+=0x1;this[_0xf868('0x155')][_0xf868('0xf3')](_0x360e39['gIsJe'],_0x3c3c86);if(_0x464e0c){this['target']['on'](_0x3c3c86,_0x2e4f20,_0x164e62);}else{this[_0xf868('0x14a')][_0xf868('0x156')](_0x3c3c86,_0x2e4f20,_0x164e62);}};_0x57d4f5['prototype'][_0xf868('0x157')]=function(_0x1b2b8b,_0x2f1911){this[_0xf868('0x14a')][_0xf868('0x158')](_0x1b2b8b,_0x2f1911,this[_0xf868('0x14a')]);};_0x57d4f5['prototype'][_0xf868('0x159')]=function(_0xee06d9){return this[_0xf868('0x14a')][_0xf868('0x15a')](_0xee06d9);};Object[_0xf868('0xde')](_0x57d4f5[_0xf868('0x2c')],_0x28c07b['vslWC'],{'get':function(){return this[_0xf868('0x149')];},'enumerable':![],'configurable':!![]});Object[_0xf868('0xde')](_0x57d4f5[_0xf868('0x2c')],_0x28c07b['EGutj'],{'get':function(){return this['_eventsCurrentlyBeing'];},'enumerable':![],'configurable':!![]});return _0x57d4f5;}();_0x3356d9[_0xf868('0x15b')]=_0x57d4f5;}(fcc||(fcc={})));var fcc;(function(_0x38f3ce){var _0x8f97b={'KFHnj':_0xf868('0xf7'),'QWvNV':function(_0x2004b7){return _0x2004b7();},'HnsjI':_0xf868('0x15c'),'ccANS':function(_0x3e0d3e,_0x2f174f,_0x303193,_0x1fdfc4,_0x206f51){return _0x3e0d3e(_0x2f174f,_0x303193,_0x1fdfc4,_0x206f51);},'MtveY':'instance','SQfMD':'gameState'};var _0x2c4271=function(){var _0x4a0351={'naaGd':function(_0x38d77d,_0x2bf092,_0x33c3be,_0x26c201,_0x510740){return _0x8f97b['ccANS'](_0x38d77d,_0x2bf092,_0x33c3be,_0x26c201,_0x510740);}};function _0x2c4271(_0x77b7ce){this[_0xf868('0x76')]=_0x77b7ce;this[_0xf868('0x15d')]=new _0x38f3ce['GameProcessFactory'](this);this[_0xf868('0x15e')]=_0x38f3ce[_0xf868('0x75')][_0xf868('0x15f')]['STANDBY'];this[_0xf868('0x160')]=![];}_0x2c4271[_0xf868('0xdb')]=function(_0x4e9ffa){if(!this[_0xf868('0xdc')]){this[_0xf868('0xdc')]=new _0x2c4271(_0x4e9ffa);_0x38f3ce[_0xf868('0x161')]=this[_0xf868('0xdc')];}};Object[_0xf868('0xde')](_0x2c4271,_0x8f97b['MtveY'],{'get':function(){if(!this[_0xf868('0xdc')]){_0x38f3ce[_0xf868('0xa5')][_0xf868('0xd0')][_0xf868('0xa1')](_0x38f3ce[_0xf868('0x75')][_0xf868('0x74')][_0xf868('0x3d')],_0x8f97b['KFHnj']);return;}return this[_0xf868('0xdc')];},'enumerable':![],'configurable':!![]});_0x2c4271[_0xf868('0x2c')][_0xf868('0x162')]=function(_0x2d4343,_0x2efb7c){this[_0xf868('0x15d')][_0xf868('0x162')](_0x2d4343,_0x2efb7c);return this;};_0x2c4271[_0xf868('0x2c')][_0xf868('0x163')]=function(_0x2f8431){this['gameProcessFactory']['initProcess'](_0x2f8431);};_0x2c4271['prototype'][_0xf868('0x164')]=function(_0x34371f){this['gameProcessFactory'][_0xf868('0x165')](_0x34371f);};_0x2c4271['prototype'][_0xf868('0x165')]=function(_0x3a1b6d){this[_0xf868('0x15d')][_0xf868('0x165')](_0x3a1b6d);};_0x2c4271['prototype'][_0xf868('0x166')]=function(){var _0x51058a={'xPSJH':function(_0x548fb0){return _0x8f97b[_0xf868('0x167')](_0x548fb0);},'iJPVc':_0x8f97b[_0xf868('0x168')]};var _0x59aee2=this;return new Promise(function(_0x2c401a){return _0x4a0351[_0xf868('0x169')](__awaiter,_0x59aee2,void 0x0,void 0x0,function(){var _0x3c847a={'BfHZB':function(_0x222f7e){return _0x51058a[_0xf868('0x16a')](_0x222f7e);},'JieFf':_0x51058a[_0xf868('0x16b')]};return __generator(this,function(_0x50926b){switch(_0x50926b[_0xf868('0x21')]){case 0x0:if(!!this[_0xf868('0x160')])return[0x3,0x2];this[_0xf868('0x16c')](!![]);return[0x4,this[_0xf868('0x15d')][_0xf868('0x16d')]()];case 0x1:_0x50926b[_0xf868('0x16e')]();this['updateProcessState'](![]);_0x3c847a[_0xf868('0x16f')](_0x2c401a);return[0x3,0x3];case 0x2:_0x38f3ce[_0xf868('0xa5')][_0xf868('0xd0')][_0xf868('0xa1')](_0x38f3ce[_0xf868('0x75')][_0xf868('0x74')][_0xf868('0x3d')],_0x3c847a[_0xf868('0x170')]);_0x50926b[_0xf868('0x21')]=0x3;case 0x3:return[0x2];}});});});};;_0x2c4271['prototype'][_0xf868('0x16c')]=function(_0x237743){this[_0xf868('0x160')]=_0x237743;};_0x2c4271[_0xf868('0x2c')][_0xf868('0x171')]=function(){this[_0xf868('0x160')]=![];};Object[_0xf868('0xde')](_0x2c4271[_0xf868('0x2c')],_0x8f97b[_0xf868('0x172')],{'get':function(){return this['_gameState'];},'set':function(_0x23a5f9){this[_0xf868('0x15e')]=_0x23a5f9;},'enumerable':![],'configurable':!![]});return _0x2c4271;}();_0x38f3ce['ProcessManager']=_0x2c4271;}(fcc||(fcc={})));var fcc;(function(_0x50f7ca){var _0x147214={'JkGrZ':_0xf868('0x173'),'QkGbp':_0xf868('0x174'),'HayVB':'VERTICAL'};var _0x32439b;(function(_0x32439b){var _0x2763e2;(function(_0x2763e2){_0x2763e2[_0x147214['JkGrZ']]=_0x147214[_0xf868('0x175')];_0x2763e2[_0x147214[_0xf868('0x176')]]=_0x147214[_0xf868('0x176')];_0x2763e2[_0x147214['HayVB']]=_0xf868('0x177');}(_0x2763e2=_0x32439b[_0xf868('0x178')]||(_0x32439b[_0xf868('0x178')]={})));}(_0x32439b=_0x50f7ca['type']||(_0x50f7ca[_0xf868('0x75')]={})));}(fcc||(fcc={})));var fcc;(function(_0x4754e7){var _0x5184f2={'fOIjE':_0xf868('0x179'),'HOSVj':'LANDSCAPE'};var _0x2837c7;(function(_0x2837c7){var _0x117faf;(function(_0x117faf){_0x117faf[_0x5184f2[_0xf868('0x17a')]]=_0x5184f2[_0xf868('0x17a')];_0x117faf[_0x5184f2[_0xf868('0x17b')]]=_0xf868('0x17c');}(_0x117faf=_0x2837c7[_0xf868('0x17d')]||(_0x2837c7[_0xf868('0x17d')]={})));}(_0x2837c7=_0x4754e7['type']||(_0x4754e7[_0xf868('0x75')]={})));}(fcc||(fcc={})));var fcc;(function(_0x201b32){var _0x38b95f={'EbjFO':_0xf868('0x17e'),'xwbcj':_0xf868('0x17f'),'pjpBU':function(_0x5780ad,_0x3d782d,_0x1340e8){return _0x5780ad(_0x3d782d,_0x1340e8);}};var _0x27c2a1=function(){var _0x3b4ef4={'wrqPU':function(_0x1bb0f4,_0x6f706c,_0x34779d){return _0x38b95f['pjpBU'](_0x1bb0f4,_0x6f706c,_0x34779d);},'tsMoI':function(_0x4c19b8,_0x31f601){return _0x4c19b8(_0x31f601);},'rRoJg':'正在UpdateScene中\x20請稍後......'};function _0x27c2a1(_0x3e5ccd,_0x246a0e){this[_0xf868('0x180')]=!![];this[_0xf868('0x76')]=_0x3e5ccd;this[_0xf868('0x181')]=_0x246a0e;}_0x27c2a1[_0xf868('0x2c')][_0xf868('0x182')]=function(_0x46ae35){var _0x49e0d1={'SnScr':_0x38b95f['EbjFO'],'OtUya':function(_0x1d017b,_0x4350fd,_0x437a48,_0x393d70,_0x53906c){return _0x1d017b(_0x4350fd,_0x437a48,_0x393d70,_0x53906c);}};var _0x20b844=this;cc[_0xf868('0x183')]['on'](_0x38b95f[_0xf868('0x184')],function(){var _0x188b06={'SiRRO':_0x49e0d1['SnScr']};return _0x49e0d1[_0xf868('0x185')](__awaiter,_0x20b844,void 0x0,void 0x0,function(){return __generator(this,function(_0x4c5411){switch(_0x4c5411[_0xf868('0x21')]){case 0x0:return[0x4,this[_0xf868('0x186')](_0x46ae35)];case 0x1:_0x4c5411[_0xf868('0x16e')]();cc[_0xf868('0x8d')](_0x188b06[_0xf868('0x187')]);return[0x2];}});});});};_0x27c2a1[_0xf868('0x2c')]['makeDesignScene']=function(_0x51a2a8){var _0x5d7214={'OQuKC':function(_0x1a6246,_0x543f90,_0x1ba2cf){return _0x3b4ef4['wrqPU'](_0x1a6246,_0x543f90,_0x1ba2cf);},'AGBYt':function(_0x203780,_0x278e10){return _0x3b4ef4[_0xf868('0x188')](_0x203780,_0x278e10);},'VweOV':_0x3b4ef4[_0xf868('0x189')]};var _0x133dcc=this;return new Promise(function(_0x27f461,_0x57ee8a){if(_0x133dcc[_0xf868('0x180')]){_0x133dcc['_isCanUpdateScene']=![];_0x5d7214[_0xf868('0x18a')](setTimeout,function(){_0x133dcc[_0xf868('0x181')]['updateSize']();_0x133dcc[_0xf868('0x180')]=!![];_0x27f461();},_0x51a2a8);}else{if(_0x133dcc['configManager'][_0xf868('0x80')])_0x5d7214[_0xf868('0x18b')](_0x57ee8a,_0x5d7214[_0xf868('0x18c')]);}});};return _0x27c2a1;}();_0x201b32[_0xf868('0x18d')]=_0x27c2a1;}(fcc||(fcc={})));var fcc;(function(_0x55ffbc){var _0x3d2676={'DAStL':_0xf868('0x18e'),'OcZeW':function(_0x424949,_0x3e81f9){return _0x424949+_0x3e81f9;},'NZXJW':_0xf868('0x18f')};var _0x4d4679;(function(_0x4d4679){var _0x2f2999={'iJBZB':_0x3d2676['DAStL'],'qMKsM':function(_0x2ab13a,_0x21d652){return _0x3d2676[_0xf868('0x190')](_0x2ab13a,_0x21d652);},'MpjRn':_0x3d2676[_0xf868('0x191')]};var _0x5b7b93=function(){function _0x5b7b93(){this[_0xf868('0x192')]=new Set();}_0x5b7b93[_0xf868('0x2c')][_0xf868('0x193')]=function(_0x44da67,_0x1e0b71){if(this[_0xf868('0x192')][_0xf868('0xff')](_0x44da67)){_0x55ffbc['ErrorManager'][_0xf868('0xd0')][_0xf868('0xa1')](_0x55ffbc['type'][_0xf868('0x74')][_0xf868('0x48')],_0x44da67+_0x2f2999[_0xf868('0x194')]);return;}_0x44da67[_0xf868('0x195')]=_0x1e0b71;this[_0xf868('0x192')]['add'](_0x44da67);};;_0x5b7b93['prototype'][_0xf868('0x196')]=function(_0x3c6c52){if(this[_0xf868('0x192')][_0xf868('0xff')](_0x3c6c52)){this[_0xf868('0x192')][_0xf868('0x197')](_0x3c6c52);}else{_0x55ffbc['ErrorManager']['instance'][_0xf868('0xa1')](_0x55ffbc[_0xf868('0x75')][_0xf868('0x74')]['PROCESS_FW'],_0x2f2999['qMKsM'](_0x3c6c52,_0x2f2999['MpjRn']));}};;_0x5b7b93[_0xf868('0x2c')]['removeAll']=function(){this[_0xf868('0x192')]['clear']();};_0x5b7b93[_0xf868('0x2c')][_0xf868('0x198')]=function(){return this[_0xf868('0x192')][_0xf868('0x199')];};;_0x5b7b93[_0xf868('0x2c')][_0xf868('0x19a')]=function(){return this[_0xf868('0x192')];};;return _0x5b7b93;}();_0x4d4679[_0xf868('0x19b')]=_0x5b7b93;}(_0x4d4679=_0x55ffbc['ABS']||(_0x55ffbc[_0xf868('0x19c')]={})));}(fcc||(fcc={})));var fcc;(function(_0x3b061a){var _0x472d30={'kNgSZ':_0xf868('0x19d'),'WiRPG':_0xf868('0x19e'),'lajtU':_0xf868('0x19f'),'wslbf':_0xf868('0x1a0'),'gFNWo':_0xf868('0x1a1'),'sREdF':'STOP_NOW','ETmrp':'RESPONSE_RESULT','LpyiO':_0xf868('0x1a2'),'GjzxJ':_0xf868('0x1a3'),'fgMKo':_0xf868('0x1a4')};var _0x18c430;(function(_0x18c430){var _0x38e27a;(function(_0x38e27a){var _0x3e1061=_0x472d30['kNgSZ'][_0xf868('0x5')]('|'),_0x30b490=0x0;while(!![]){switch(_0x3e1061[_0x30b490++]){case'0':_0x38e27a['SCENE_DIRECTION_CHANGE']=_0x472d30[_0xf868('0x1a5')];continue;case'1':_0x38e27a[_0x472d30['lajtU']]=_0x472d30['lajtU'];continue;case'2':_0x38e27a[_0x472d30[_0xf868('0x1a6')]]='USER_GET_WIN';continue;case'3':_0x38e27a[_0x472d30[_0xf868('0x1a7')]]=_0x472d30['gFNWo'];continue;case'4':_0x38e27a[_0x472d30[_0xf868('0x1a8')]]=_0x472d30[_0xf868('0x1a8')];continue;case'5':_0x38e27a[_0x472d30[_0xf868('0x1a9')]]=_0xf868('0x1aa');continue;case'6':_0x38e27a[_0x472d30[_0xf868('0x1ab')]]='SLOT_ROW_END';continue;case'7':_0x38e27a[_0x472d30[_0xf868('0x1ac')]]=_0x472d30[_0xf868('0x1ac')];continue;case'8':_0x38e27a[_0xf868('0x1ad')]=_0xf868('0x1ad');continue;case'9':_0x38e27a[_0x472d30[_0xf868('0x1ae')]]=_0x472d30[_0xf868('0x1ae')];continue;}break;}}(_0x38e27a=_0x18c430[_0xf868('0x1af')]||(_0x18c430[_0xf868('0x1af')]={})));}(_0x18c430=_0x3b061a[_0xf868('0x75')]||(_0x3b061a['type']={})));}(fcc||(fcc={})));var fcc;(function(_0x49a5dc){var _0x4be146=function(){function _0x4be146(_0x18398b,_0x82663b){this[_0xf868('0x1b0')]=![];this[_0xf868('0x1b1')]=_0x82663b;this['callFun']=_0x18398b;}_0x4be146[_0xf868('0x2c')][_0xf868('0x1b2')]=function(_0x4702ed){this[_0xf868('0x1b3')][_0xf868('0x7')](this[_0xf868('0x1b1')],_0x4702ed);};Object[_0xf868('0xde')](_0x4be146[_0xf868('0x2c')],_0xf868('0x195'),{'get':function(){return this[_0xf868('0x1b0')];},'set':function(_0x569890){this[_0xf868('0x1b0')]=_0x569890;},'enumerable':![],'configurable':!![]});return _0x4be146;}();_0x49a5dc['SceneDirectionChangeObserver']=_0x4be146;}(fcc||(fcc={})));var fcc;(function(_0x3cfdac){var _0x202fc8={'POBfe':function(_0x2f326b,_0x177617){return _0x2f326b>_0x177617;},'FZFSr':function(_0x3697a3,_0x40eff1){return _0x3697a3(_0x40eff1);},'qHwMK':function(_0x210000,_0x51b7ec,_0x51d1d1){return _0x210000(_0x51b7ec,_0x51d1d1);}};var _0x5b75b5=function(_0x249061){var _0x4cb2ee={'FdhpH':function(_0xa180eb,_0x88fda9){return _0x202fc8[_0xf868('0x1b4')](_0xa180eb,_0x88fda9);},'FhBMK':function(_0x3ee187,_0xd13e9d){return _0x202fc8[_0xf868('0x1b5')](_0x3ee187,_0xd13e9d);}};_0x202fc8[_0xf868('0x1b6')](__extends,_0x5b75b5,_0x249061);function _0x5b75b5(){var _0x2ab14e=_0x249061['call'](this)||this;_0x2ab14e['TAG_NAME']=_0x3cfdac[_0xf868('0x75')][_0xf868('0x1af')][_0xf868('0x19e')];return _0x2ab14e;}_0x5b75b5['prototype']['subscribe']=function(_0x4b6ef7,_0x571e1b){_0x249061[_0xf868('0x2c')][_0xf868('0x193')]['call'](this,_0x4b6ef7,_0x571e1b);};_0x5b75b5['prototype']['notify']=function(_0x4c1993){var _0x27bb6c,_0x239e51;if(_0x4cb2ee[_0xf868('0x1b7')](this[_0xf868('0x192')][_0xf868('0x199')],0x0)){try{for(var _0x180a3d=_0x4cb2ee[_0xf868('0x1b8')](__values,this[_0xf868('0x192')]),_0x3c7f90=_0x180a3d[_0xf868('0xa')]();!_0x3c7f90[_0xf868('0xb')];_0x3c7f90=_0x180a3d[_0xf868('0xa')]()){var _0x67afcd=_0x3c7f90[_0xf868('0xc')];_0x67afcd[_0xf868('0x1b2')](_0x4c1993);if(!_0x67afcd['isPermanent']){this['unsubscribe'](_0x67afcd);}}}catch(_0x19835c){_0x27bb6c={'error':_0x19835c};}finally{try{if(_0x3c7f90&&!_0x3c7f90['done']&&(_0x239e51=_0x180a3d[_0xf868('0x3')]))_0x239e51[_0xf868('0x7')](_0x180a3d);}finally{if(_0x27bb6c)throw _0x27bb6c[_0xf868('0xd')];}}}};return _0x5b75b5;}(_0x3cfdac[_0xf868('0x19c')][_0xf868('0x19b')]);_0x3cfdac['SceneDirectionChangeNotification']=_0x5b75b5;}(fcc||(fcc={})));var fcc;(function(_0x3369a0){var _0x425d1a={'DOcKM':_0xf868('0x1b9'),'wKmfQ':function(_0x694c6c,_0x4c8730){return _0x694c6c>=_0x4c8730;},'kUocZ':function(_0x2e6635,_0x104b96){return _0x2e6635/_0x104b96;},'zZWTW':function(_0x1b1f79,_0x11e214){return _0x1b1f79*_0x11e214;},'BkzVl':function(_0x328279,_0x234a45){return _0x328279>_0x234a45;},'xKPqh':function(_0x359e31,_0x478b52){return _0x359e31/_0x478b52;},'rGQgK':function(_0x21a366,_0x404215){return _0x21a366/_0x404215;},'OkKxu':function(_0x35c98a,_0x73676c){return _0x35c98a<_0x73676c;},'rtTDc':function(_0x56a827,_0x1b37b8){return _0x56a827==_0x1b37b8;},'ZXfbN':function(_0x209f93,_0x2506f6){return _0x209f93==_0x2506f6;}};var _0x2535ed=function(){function _0x2535ed(_0x174881){this[_0xf868('0x181')]=_0x174881;if(!_0x3369a0['NotificationManager'][_0xf868('0xd0')]()['hasNotification'](_0x3369a0[_0xf868('0x75')][_0xf868('0x1af')]['SCENE_DIRECTION_CHANGE'])){this['eventLock']=!![];console[_0xf868('0x8d')](_0x425d1a[_0xf868('0x1ba')]);}else{this[_0xf868('0x1bb')]=![];}}_0x2535ed[_0xf868('0x2c')]['executionStyle']=function(_0x38f33e,_0x9cf8cb){this[_0xf868('0x1bc')]();if(_0x425d1a[_0xf868('0x1bd')](cc['view'][_0xf868('0x1be')]()[_0xf868('0x1bf')]/cc[_0xf868('0x183')][_0xf868('0x1be')]()[_0xf868('0x1c0')],_0x425d1a[_0xf868('0x1c1')](_0x38f33e,_0x9cf8cb))){var _0x10b536=_0x425d1a[_0xf868('0x1c2')](cc['view'][_0xf868('0x1be')]()[_0xf868('0x1bf')],_0x425d1a[_0xf868('0x1c1')](_0x38f33e,cc[_0xf868('0x183')][_0xf868('0x1be')]()[_0xf868('0x1c0')]));cc[_0xf868('0x183')][_0xf868('0x1c3')](_0x10b536,_0x9cf8cb,cc[_0xf868('0x1c4')][_0xf868('0x1c5')]);}else{if(_0x425d1a[_0xf868('0x1c6')](cc[_0xf868('0x183')][_0xf868('0x1be')]()[_0xf868('0x1bf')],cc[_0xf868('0x183')][_0xf868('0x1be')]()['height'])){var _0x1ab51f=_0x425d1a['zZWTW'](cc['view'][_0xf868('0x1be')]()['height'],_0x38f33e/cc[_0xf868('0x183')]['getFrameSize']()['width']);cc['view'][_0xf868('0x1c3')](_0x38f33e,_0x1ab51f,cc['ResolutionPolicy']['FIXED_WIDTH']);}else{if(_0x425d1a[_0xf868('0x1bd')](_0x425d1a[_0xf868('0x1c1')](cc[_0xf868('0x183')][_0xf868('0x1be')]()[_0xf868('0x1bf')],cc[_0xf868('0x183')]['getFrameSize']()['height']),_0x425d1a[_0xf868('0x1c7')](0x3e8,0x6f1))){var _0x1ab51f=_0x425d1a[_0xf868('0x1c2')](cc[_0xf868('0x183')][_0xf868('0x1be')]()[_0xf868('0x1c0')],_0x425d1a[_0xf868('0x1c7')](0x3e8,cc['view'][_0xf868('0x1be')]()[_0xf868('0x1bf')]));cc['view'][_0xf868('0x1c3')](0x3e8,_0x1ab51f,cc[_0xf868('0x1c4')][_0xf868('0x1c5')]);}else{var _0x1ab51f=_0x425d1a['zZWTW'](cc[_0xf868('0x183')][_0xf868('0x1be')]()[_0xf868('0x1c0')],_0x425d1a['rGQgK'](0x3e8,cc[_0xf868('0x183')][_0xf868('0x1be')]()[_0xf868('0x1bf')]));cc[_0xf868('0x183')][_0xf868('0x1c3')](0x3e8,_0x1ab51f,cc[_0xf868('0x1c4')][_0xf868('0x1c8')]);}}}};_0x2535ed[_0xf868('0x2c')][_0xf868('0x1bc')]=function(){if(_0x425d1a[_0xf868('0x1c9')](cc['view'][_0xf868('0x1be')]()[_0xf868('0x1bf')],cc[_0xf868('0x183')]['getFrameSize']()[_0xf868('0x1c0')])){if(_0x425d1a[_0xf868('0x1ca')](this[_0xf868('0x181')][_0xf868('0x1cb')],_0x3369a0[_0xf868('0x75')]['SceneDirectionType'][_0xf868('0x179')]))return;this[_0xf868('0x181')][_0xf868('0x1cb')]=_0x3369a0[_0xf868('0x75')][_0xf868('0x17d')][_0xf868('0x179')];if(!this[_0xf868('0x1bb')]){_0x3369a0[_0xf868('0x1cc')][_0xf868('0xd0')]()['getNotification'](_0x3369a0[_0xf868('0x75')][_0xf868('0x1af')][_0xf868('0x19e')])['notify'](_0x3369a0[_0xf868('0x75')][_0xf868('0x17d')][_0xf868('0x179')]);}}else{if(_0x425d1a['ZXfbN'](this['sceneManager'][_0xf868('0x1cb')],_0x3369a0['type'][_0xf868('0x17d')][_0xf868('0x17c')]))return;this[_0xf868('0x181')][_0xf868('0x1cb')]=_0x3369a0[_0xf868('0x75')][_0xf868('0x17d')][_0xf868('0x17c')];if(!this[_0xf868('0x1bb')]){_0x3369a0[_0xf868('0x1cc')][_0xf868('0xd0')]()['getNotification'](_0x3369a0[_0xf868('0x75')][_0xf868('0x1af')][_0xf868('0x19e')])['notify'](_0x3369a0[_0xf868('0x75')][_0xf868('0x17d')]['LANDSCAPE']);}}};return _0x2535ed;}();_0x3369a0[_0xf868('0x1cd')]=_0x2535ed;}(fcc||(fcc={})));var fcc;(function(_0x27130a){var _0x2773fc={'xFMHU':'0|3|7|4|6|5|1|10|2|9|11|8','rVMQz':'Canvas','pDokF':function(_0x332502,_0x30f3f7){return _0x332502>_0x30f3f7;},'zPRDQ':function(_0x446d88,_0x55946a){return _0x446d88/_0x55946a;},'Lmrez':function(_0xf3e2ac,_0x1f398e){return _0xf3e2ac/_0x1f398e;},'bEKXu':function(_0x4fedcf,_0x5eb5f9){return _0x4fedcf/_0x5eb5f9;},'HpHoM':function(_0x3cf570,_0x3fc20f){return _0x3cf570*_0x3fc20f;},'ziRUG':function(_0x5ab63d,_0x32d05e){return _0x5ab63d/_0x32d05e;}};var _0x3ba6c7=function(){function _0x3ba6c7(){}_0x3ba6c7[_0xf868('0x2c')]['executionStyle']=function(_0x170ce4,_0x562f6e){var _0x18636f=_0x2773fc[_0xf868('0x1ce')][_0xf868('0x5')]('|'),_0x56f432=0x0;while(!![]){switch(_0x18636f[_0x56f432++]){case'0':var _0x3f6cbc=cc[_0xf868('0x1cf')](_0x2773fc[_0xf868('0x1d0')])['getComponent'](cc['Canvas']);continue;case'1':var _0x125d93=_0x5b7f02;continue;case'2':if(_0x2773fc[_0xf868('0x1d1')](_0x2773fc[_0xf868('0x1d2')](_0x5b7f02,_0x11ed84),_0x2773fc['Lmrez'](_0x258c79[_0xf868('0x1bf')],_0x258c79[_0xf868('0x1c0')]))){_0x3f6cbc[_0xf868('0x1d3')]=!![];_0x3f6cbc[_0xf868('0x1d4')]=![];_0x36b016=_0x258c79[_0xf868('0x1c0')];_0x125d93=_0x2773fc['bEKXu'](_0x2773fc[_0xf868('0x1d5')](_0x36b016,_0x5b7f02),_0x11ed84);}else{_0x3f6cbc[_0xf868('0x1d3')]=![];_0x3f6cbc[_0xf868('0x1d4')]=!![];_0x125d93=_0x258c79['width'];_0x36b016=_0x2773fc[_0xf868('0x1d5')](_0x2773fc['ziRUG'](_0x11ed84,_0x5b7f02),_0x125d93);}continue;case'3':if(!this[_0xf868('0x1d6')]){this[_0xf868('0x1d6')]=cc[_0xf868('0x199')](_0x170ce4,_0x562f6e);}continue;case'4':var _0x19dfd6=cc['view'][_0xf868('0x1be')]();continue;case'5':var _0x11ed84=_0x19dfd6[_0xf868('0x1c0')];continue;case'6':var _0x5b7f02=_0x19dfd6[_0xf868('0x1bf')];continue;case'7':var _0x258c79=this[_0xf868('0x1d6')];continue;case'8':_0x3f6cbc[_0xf868('0x1d7')][_0xf868('0x1c0')]=_0x36b016;continue;case'9':_0x3f6cbc[_0xf868('0x1d8')]=cc['size'](_0x125d93,_0x36b016);continue;case'10':var _0x36b016=_0x11ed84;continue;case'11':_0x3f6cbc[_0xf868('0x1d7')]['width']=_0x125d93;continue;}break;}};return _0x3ba6c7;}();_0x27130a[_0xf868('0x1d9')]=_0x3ba6c7;}(fcc||(fcc={})));var fcc;(function(_0x446dbc){var _0x2801a1=function(){var _0x2b050f={'briiu':_0xf868('0x1da')};function _0x2801a1(){}_0x2801a1[_0xf868('0x2c')][_0xf868('0x1db')]=function(_0x5420e7,_0x3437a9){_0x446dbc[_0xf868('0xa5')][_0xf868('0xd0')][_0xf868('0xa1')](_0x2b050f[_0xf868('0x1dc')]);};return _0x2801a1;}();_0x446dbc[_0xf868('0x1dd')]=_0x2801a1;}(fcc||(fcc={})));var fcc;(function(_0x438d39){var _0x5ccd0d=function(){function _0x5ccd0d(_0x4f2964){this[_0xf868('0x181')]=_0x4f2964;}_0x5ccd0d[_0xf868('0x2c')][_0xf868('0x1de')]=function(_0x1ad8c6,_0x2212d6,_0x4b05db){switch(_0x1ad8c6){case _0x438d39['type'][_0xf868('0x178')][_0xf868('0x173')]:if(!this['autoStyle'])this[_0xf868('0x1df')]=new _0x438d39['AutoStyle'](this[_0xf868('0x181')]);this['autoStyle'][_0xf868('0x1db')](_0x2212d6,_0x4b05db);break;case _0x438d39[_0xf868('0x75')]['SceneStyleType'][_0xf868('0x174')]:if(!this[_0xf868('0x1e0')])this[_0xf868('0x1e0')]=new _0x438d39['HorizontalStyle']();this[_0xf868('0x1e0')]['executionStyle'](_0x2212d6,_0x4b05db);break;case _0x438d39['type'][_0xf868('0x178')][_0xf868('0x177')]:if(!this[_0xf868('0x1e1')])this[_0xf868('0x1e1')]=new _0x438d39['VerticalStyle']();this[_0xf868('0x1e1')][_0xf868('0x1db')](_0x2212d6,_0x4b05db);break;default:_0x1ad8c6[_0xf868('0x1db')](_0x2212d6,_0x4b05db);}};return _0x5ccd0d;}();_0x438d39['SceneStyleHandler']=_0x5ccd0d;}(fcc||(fcc={})));var fcc;(function(_0x2a315c){var _0x11f5a9={'AkcTm':'3|2|5|0|4|1','geNZf':_0xf868('0x1e2'),'OrkIF':'加載不到你的Scene資源,請檢查該資源名是否正確','dYPbB':'instance','srVxT':_0xf868('0x1cb')};var _0x45d797=function(){var _0x5b8b68={'tvgay':_0x11f5a9['OrkIF']};function _0x45d797(_0x1a5099){var _0x427c13=_0x11f5a9[_0xf868('0x1e3')]['split']('|'),_0x31029e=0x0;while(!![]){switch(_0x427c13[_0x31029e++]){case'0':this[_0xf868('0x1e4')]=new _0x2a315c['SceneSizeChangeListener'](_0x1a5099,this);continue;case'1':this[_0xf868('0x1e5')]=_0x2a315c['type'][_0xf868('0x178')][_0xf868('0x174')];continue;case'2':this['_designWidth']=0x500;continue;case'3':this[_0xf868('0x76')]=_0x1a5099;continue;case'4':this[_0xf868('0x1e6')]=new _0x2a315c[(_0xf868('0x1e7'))](this);continue;case'5':this[_0xf868('0x1e8')]=0x2d0;continue;}break;}}_0x45d797[_0xf868('0xdb')]=function(_0x3ba7df){if(!this['_instance']){this['_instance']=new _0x45d797(_0x3ba7df);_0x2a315c[_0xf868('0x1e9')]=this['_instance'];}};Object['defineProperty'](_0x45d797,_0x11f5a9['dYPbB'],{'get':function(){if(!this[_0xf868('0xdc')]){_0x2a315c['ErrorManager'][_0xf868('0xd0')][_0xf868('0xa1')](_0x2a315c['type']['ErrorType']['SCENE_FW'],_0xf868('0xf7'));return;}return this[_0xf868('0xdc')];},'enumerable':![],'configurable':!![]});_0x45d797[_0xf868('0x2c')][_0xf868('0x1ea')]=function(_0x4e89f3){this[_0xf868('0x1eb')]=_0x4e89f3;return this;};_0x45d797[_0xf868('0x2c')][_0xf868('0x1ec')]=function(_0x5ecfc5){this[_0xf868('0x1e8')]=_0x5ecfc5;return this;};_0x45d797[_0xf868('0x2c')][_0xf868('0x1ed')]=function(_0x2eea2e){if(_0x2eea2e){this['style']=_0x2eea2e;switch(_0x2eea2e){case _0x2a315c[_0xf868('0x75')][_0xf868('0x178')]['HORIZONTAL']:this[_0xf868('0x1ee')]=_0x2a315c[_0xf868('0x75')][_0xf868('0x17d')][_0xf868('0x179')];break;case _0x2a315c[_0xf868('0x75')]['SceneStyleType'][_0xf868('0x177')]:this['_sceneDirection']=_0x2a315c['type'][_0xf868('0x17d')][_0xf868('0x17c')];break;case _0x2a315c[_0xf868('0x75')][_0xf868('0x178')]['AUTO']:break;default:console[_0xf868('0x8d')](_0x11f5a9[_0xf868('0x1ef')]);break;}}this[_0xf868('0x1e6')][_0xf868('0x1de')](this[_0xf868('0x1e5')],this[_0xf868('0x1eb')],this['_designHeight']);return this;};_0x45d797[_0xf868('0x2c')][_0xf868('0x1f0')]=function(_0x436a50){this[_0xf868('0x1e4')][_0xf868('0x182')](_0x436a50);};_0x45d797['prototype']['changeScene']=function(_0x234770){if(!_0x2a315c['LoadResManager'][_0xf868('0xd0')]['sceneRes'][_0xf868('0xff')](_0x234770)){_0x2a315c[_0xf868('0xa5')][_0xf868('0xd0')][_0xf868('0xa1')](_0x2a315c[_0xf868('0x75')][_0xf868('0x74')][_0xf868('0x48')],_0x5b8b68[_0xf868('0x1f1')]);}cc[_0xf868('0x1f2')][_0xf868('0x1f3')](_0x2a315c['LoadResManager'][_0xf868('0xd0')][_0xf868('0x1f4')][_0xf868('0x101')](_0x234770));};_0x45d797[_0xf868('0x2c')][_0xf868('0x1f5')]=function(_0x4fb7f8){_0x4fb7f8[_0xf868('0x1f6')]();};Object[_0xf868('0xde')](_0x45d797['prototype'],_0x11f5a9[_0xf868('0x1f7')],{'get':function(){return this[_0xf868('0x1ee')];},'set':function(_0x3e4a42){this[_0xf868('0x1ee')]=_0x3e4a42;},'enumerable':![],'configurable':!![]});return _0x45d797;}();_0x2a315c['SceneManager']=_0x45d797;}(fcc||(fcc={})));var fcc;(function(_0x5058fd){var _0xef21a8={'WUnmg':_0xf868('0x1f8'),'CuNlR':_0xf868('0xd0'),'soinb':'slot','emVGQ':'slotStyle'};var _0x42b565=function(){function _0x42b565(_0x110227){this['configManager']=_0x110227;this[_0xf868('0x1f9')]=new Map();this[_0xf868('0x1fa')]=new Map();}_0x42b565[_0xf868('0xdb')]=function(_0x5ddd20){if(!this[_0xf868('0xdc')]){this[_0xf868('0xdc')]=new _0x42b565(_0x5ddd20);_0x5058fd[_0xf868('0x1fb')]=this[_0xf868('0xdc')];}};Object[_0xf868('0xde')](_0x42b565,_0xef21a8[_0xf868('0x1fc')],{'get':function(){if(!this['_instance']){_0x5058fd[_0xf868('0xa5')][_0xf868('0xd0')]['executeError'](_0x5058fd['type'][_0xf868('0x74')][_0xf868('0x42')],_0xf868('0xf7'));return;}return this[_0xf868('0xdc')];},'enumerable':![],'configurable':!![]});_0x42b565[_0xf868('0x2c')]['setSlotTemplate']=function(_0x54586d){this['template']=_0x54586d;return this;};_0x42b565[_0xf868('0x2c')][_0xf868('0x1fd')]=function(_0x1d3d1a){return new _0x1d3d1a(this);};_0x42b565[_0xf868('0x2c')][_0xf868('0x1fe')]=function(_0x217a26){if(!this[_0xf868('0x1ff')]){_0x5058fd[_0xf868('0xa5')]['instance']['executeError'](_0x5058fd['type'][_0xf868('0x74')]['UNDEFINED_FW'],_0xef21a8[_0xf868('0x200')]);}var _0x2e2969=new this[(_0xf868('0x1ff'))](_0x217a26,this[_0xf868('0x76')]);this[_0xf868('0x1f9')]['set'](_0x217a26[_0xf868('0x201')],_0x2e2969);this[_0xf868('0x1fa')][_0xf868('0xf3')](_0x217a26[_0xf868('0x201')],_0x217a26);};Object[_0xf868('0xde')](_0x42b565['prototype'],_0xef21a8[_0xf868('0x202')],{'get':function(){return this[_0xf868('0x1f9')];},'enumerable':![],'configurable':!![]});Object[_0xf868('0xde')](_0x42b565[_0xf868('0x2c')],_0xef21a8[_0xf868('0x203')],{'get':function(){return this['_slotStyle'];},'enumerable':![],'configurable':!![]});return _0x42b565;}();_0x5058fd[_0xf868('0x204')]=_0x42b565;}(fcc||(fcc={})));var fcc;(function(_0x42e0cd){var _0x57fc55={'LbWhO':_0xf868('0x205'),'FYqmC':_0xf868('0x206'),'PUUXG':_0xf868('0x207'),'rUhDH':_0xf868('0x208'),'vrSsy':'AUTO_100','ZEXLJ':_0xf868('0x209')};var _0x556d0f;(function(_0x556d0f){var _0x3c649c;(function(_0x3c649c){var _0x2926d0=_0x57fc55[_0xf868('0x20a')]['split']('|'),_0x487d82=0x0;while(!![]){switch(_0x2926d0[_0x487d82++]){case'0':_0x3c649c[_0x3c649c['AUTO']=-0x1]='AUTO';continue;case'1':_0x3c649c[_0x3c649c[_0xf868('0x206')]=0x32]=_0x57fc55[_0xf868('0x20b')];continue;case'2':_0x3c649c[_0x3c649c[_0x57fc55['PUUXG']]=0x1f4]=_0x57fc55['PUUXG'];continue;case'3':_0x3c649c[_0x3c649c[_0x57fc55[_0xf868('0x20c')]]=0x3e8]=_0x57fc55['rUhDH'];continue;case'4':_0x3c649c[_0x3c649c[_0x57fc55['vrSsy']]=0x64]=_0x57fc55[_0xf868('0x20d')];continue;case'5':_0x3c649c[_0x3c649c[_0x57fc55[_0xf868('0x20e')]]=-0x2]=_0x57fc55[_0xf868('0x20e')];continue;}break;}}(_0x3c649c=_0x556d0f[_0xf868('0x20f')]||(_0x556d0f[_0xf868('0x20f')]={})));}(_0x556d0f=_0x42e0cd[_0xf868('0x75')]||(_0x42e0cd[_0xf868('0x75')]={})));}(fcc||(fcc={})));var fcc;(function(_0x4a8869){var _0x275247={'FoLol':_0xf868('0x210'),'cMFpc':_0xf868('0x211'),'zROvn':'CNY','EkueD':_0xf868('0x212'),'JDNAq':_0xf868('0x213'),'XbeCF':_0xf868('0x214'),'vkVnp':_0xf868('0x215'),'mJofd':'INDONESIA','AWybE':_0xf868('0x216'),'CJcnq':_0xf868('0x217')};var _0x511c77;(function(_0x511c77){var _0x2dcc25;(function(_0x2dcc25){_0x2dcc25['TAIWAN']=_0x275247['FoLol'];_0x2dcc25[_0x275247[_0xf868('0x218')]]=_0x275247[_0xf868('0x219')];_0x2dcc25[_0x275247[_0xf868('0x21a')]]=_0x275247[_0xf868('0x21b')];_0x2dcc25[_0xf868('0x21c')]=_0x275247[_0xf868('0x21d')];_0x2dcc25[_0xf868('0x21e')]=_0x275247['vkVnp'];_0x2dcc25[_0x275247[_0xf868('0x21f')]]=_0x275247[_0xf868('0x220')];_0x2dcc25[_0x275247[_0xf868('0x221')]]=_0xf868('0x222');}(_0x2dcc25=_0x511c77['LanguageType']||(_0x511c77['LanguageType']={})));}(_0x511c77=_0x4a8869[_0xf868('0x75')]||(_0x4a8869['type']={})));}(fcc||(fcc={})));var fcc;(function(_0x219401){var _0xa7d7e0={'XeYnp':_0xf868('0x223'),'DauRs':'5|10|3|4|6|8|7|0|9|12|11|1|2','MTYCG':'instance','pSsaT':_0xf868('0x224'),'wnDAN':_0xf868('0x225'),'DmkUa':'autoCount','vGmGv':'isSpeedUp','qfbTW':_0xf868('0x226'),'flufG':'effectVolume','YOAjA':_0xf868('0x227'),'lRXFw':_0xf868('0x228'),'jWFyq':_0xf868('0x229'),'RbBsO':_0xf868('0xd8'),'hequt':_0xf868('0x22a')};var _0x1e50c8=function(){var _0x304590={'ZvBXM':_0xa7d7e0['DauRs']};function _0x1e50c8(){var _0x3dd2af=_0x304590['ZvBXM']['split']('|'),_0x12b23d=0x0;while(!![]){switch(_0x3dd2af[_0x12b23d++]){case'0':this['_isMusicOnMute']=![];continue;case'1':this[_0xf868('0x22b')]=cc[_0xf868('0x22c')]['DebugMode'][_0xf868('0x22d')];continue;case'2':this['_isFrameworkDebug']=!![];continue;case'3':this[_0xf868('0x22e')]=![];continue;case'4':this[_0xf868('0x22f')]=![];continue;case'5':this[_0xf868('0x230')]=null;continue;case'6':this['_autoCount']=_0x219401[_0xf868('0x75')][_0xf868('0x20f')]['AUTO'];continue;case'7':this[_0xf868('0x231')]=0x1;continue;case'8':this[_0xf868('0x232')]=0x1;continue;case'9':this[_0xf868('0x233')]=![];continue;case'10':this[_0xf868('0x234')]='';continue;case'11':this['_backHomeURL']='';continue;case'12':this[_0xf868('0x235')]=_0x219401['type'][_0xf868('0x236')][_0xf868('0x211')];continue;}break;}}Object[_0xf868('0xde')](_0x1e50c8,_0xa7d7e0[_0xf868('0x237')],{'get':function(){if(!this[_0xf868('0xdc')]){this['_instance']=new _0x1e50c8();}return this['_instance'];},'enumerable':![],'configurable':!![]});_0x1e50c8[_0xf868('0x2c')][_0xf868('0x238')]=function(_0x1b49c2){this[_0xf868('0x230')]=_0x1b49c2;return this;};_0x1e50c8[_0xf868('0x2c')]['setMusicVolume']=function(_0x108b32){this[_0xf868('0x232')]=_0x108b32;return this;};_0x1e50c8[_0xf868('0x2c')]['setEffectVolume']=function(_0x4d53a3){this[_0xf868('0x231')]=_0x4d53a3;return this;};_0x1e50c8['prototype'][_0xf868('0x239')]=function(_0x4ff9dc){this[_0xf868('0x23a')]=_0x4ff9dc;return this;};_0x1e50c8[_0xf868('0x2c')][_0xf868('0x23b')]=function(_0x12cc20){this[_0xf868('0x233')]=_0x12cc20;return this;};_0x1e50c8[_0xf868('0x2c')][_0xf868('0x23c')]=function(_0x29b28d){this[_0xf868('0x23d')]=_0x29b28d;return this;};_0x1e50c8['prototype'][_0xf868('0x23e')]=function(_0x3b5c59){this['_externallyLoadURL']=_0x3b5c59;return this;};_0x1e50c8[_0xf868('0x2c')]['setLanguage']=function(_0x438842){this[_0xf868('0x235')]=_0x438842;return this;};_0x1e50c8[_0xf868('0x2c')][_0xf868('0x23f')]=function(_0x52525d){this[_0xf868('0x22e')]=_0x52525d;return this;};_0x1e50c8[_0xf868('0x2c')][_0xf868('0x240')]=function(_0x30e151){this[_0xf868('0x22f')]=_0x30e151;return this;};_0x1e50c8[_0xf868('0x2c')][_0xf868('0x241')]=function(_0x4d2a60){this['_isFrameworkDebug']=_0x4d2a60;return this;};_0x1e50c8[_0xf868('0x2c')][_0xf868('0x242')]=function(_0x1ba3e1){this[_0xf868('0x22b')]=_0x1ba3e1;return this;};_0x1e50c8['prototype'][_0xf868('0x243')]=function(_0x5b36a9){this['_backHomeURL']=_0x5b36a9;return this;};_0x1e50c8[_0xf868('0x2c')][_0xf868('0x1fe')]=function(){cc[_0xf868('0x22c')][_0xa7d7e0[_0xf868('0x244')]](this[_0xf868('0x22b')]);_0x219401[_0xf868('0xa5')][_0xf868('0xdb')](this);_0x219401[_0xf868('0x245')]['setInstance'](this);_0x219401[_0xf868('0x246')][_0xf868('0xdb')](this);_0x219401['EventManager']['setInstance'](this);_0x219401[_0xf868('0x247')][_0xf868('0xdb')](this);_0x219401[_0xf868('0x248')]['setInstance'](this);_0x219401[_0xf868('0x249')]['setInstance'](this);_0x219401['SlotStyleManager'][_0xf868('0xdb')](this);};Object[_0xf868('0xde')](_0x1e50c8[_0xf868('0x2c')],_0xa7d7e0[_0xf868('0x24a')],{'get':function(){return this[_0xf868('0x234')];},'enumerable':![],'configurable':!![]});Object[_0xf868('0xde')](_0x1e50c8['prototype'],_0xf868('0x24b'),{'get':function(){return this['_gameNumber'];},'enumerable':![],'configurable':!![]});Object[_0xf868('0xde')](_0x1e50c8[_0xf868('0x2c')],_0xa7d7e0[_0xf868('0x24c')],{'get':function(){return this[_0xf868('0x22e')];},'enumerable':![],'configurable':!![]});Object[_0xf868('0xde')](_0x1e50c8[_0xf868('0x2c')],_0xa7d7e0[_0xf868('0x24d')],{'get':function(){return this['_autoCount'];},'enumerable':![],'configurable':!![]});Object[_0xf868('0xde')](_0x1e50c8['prototype'],_0xa7d7e0['vGmGv'],{'get':function(){return this[_0xf868('0x22f')];},'enumerable':![],'configurable':!![]});Object['defineProperty'](_0x1e50c8[_0xf868('0x2c')],_0xa7d7e0[_0xf868('0x24e')],{'get':function(){return this[_0xf868('0x232')];},'enumerable':![],'configurable':!![]});Object[_0xf868('0xde')](_0x1e50c8[_0xf868('0x2c')],_0xa7d7e0['flufG'],{'get':function(){return this[_0xf868('0x231')];},'enumerable':![],'configurable':!![]});Object['defineProperty'](_0x1e50c8[_0xf868('0x2c')],_0xa7d7e0[_0xf868('0x24f')],{'get':function(){return this[_0xf868('0x235')];},'enumerable':![],'configurable':!![]});Object['defineProperty'](_0x1e50c8[_0xf868('0x2c')],_0xf868('0x80'),{'get':function(){return this['_isFrameworkDebug'];},'enumerable':![],'configurable':!![]});Object[_0xf868('0xde')](_0x1e50c8[_0xf868('0x2c')],_0xa7d7e0[_0xf868('0x250')],{'get':function(){return this[_0xf868('0x233')];},'enumerable':![],'configurable':!![]});Object[_0xf868('0xde')](_0x1e50c8[_0xf868('0x2c')],_0xa7d7e0[_0xf868('0x251')],{'get':function(){return this['_isMusicOnMute'];},'enumerable':![],'configurable':!![]});Object[_0xf868('0xde')](_0x1e50c8['prototype'],_0xa7d7e0[_0xf868('0x252')],{'get':function(){return this[_0xf868('0x253')];},'enumerable':![],'configurable':!![]});Object['defineProperty'](_0x1e50c8['prototype'],_0xa7d7e0[_0xf868('0x254')],{'get':function(){return this[_0xf868('0x22b')];},'enumerable':![],'configurable':!![]});return _0x1e50c8;}();_0x219401[_0xf868('0x255')]=_0x1e50c8;}(fcc||(fcc={})));var fcc;(function(_0x3ccd82){var _0xa3b55a;(function(_0xa3b55a){var _0x28d8fa={'lhZsf':_0xf868('0x256')};var _0x1d1034=function(){function _0x1d1034(_0x4dbbed,_0x33f3fd,_0x56c5a8,_0x17beda){this[_0xf868('0x257')]=_0x4dbbed;this[_0xf868('0x75')]=_0x33f3fd;this[_0xf868('0x258')]=_0x56c5a8;this['parameter']=_0x17beda;}_0x1d1034[_0xf868('0x256')]=document[_0xf868('0x259')](_0x28d8fa['lhZsf'])[0x0];return _0x1d1034;}();_0xa3b55a['ALoadScriptType']=_0x1d1034;}(_0xa3b55a=_0x3ccd82[_0xf868('0x19c')]||(_0x3ccd82[_0xf868('0x19c')]={})));}(fcc||(fcc={})));var fcc;(function(_0x270cc7){var _0x1628cf={'sURTa':'link','VTTvF':_0xf868('0x25a'),'vfDgN':function(_0x50d0b3,_0x3fc984){return _0x50d0b3+_0x3fc984;},'HmOTR':function(_0x50b4a7,_0x3939b6){return _0x50b4a7+_0x3939b6;},'bzdqj':_0xf868('0x25b'),'uDVfT':function(_0x343607,_0x1c66b7,_0x5435a0){return _0x343607(_0x1c66b7,_0x5435a0);}};var _0x38b952=function(_0x127fec){var _0x1654c3={'laHbi':_0x1628cf[_0xf868('0x25c')],'CtiHT':function(_0x5dcddc,_0x44ee87){return _0x1628cf[_0xf868('0x25d')](_0x5dcddc,_0x44ee87);},'BFhvJ':_0xf868('0x25e'),'UhUSI':function(_0x26a8f7,_0x3612ac){return _0x1628cf['HmOTR'](_0x26a8f7,_0x3612ac);},'OpWmN':_0x1628cf[_0xf868('0x25f')]};_0x1628cf['uDVfT'](__extends,_0x38b952,_0x127fec);function _0x38b952(_0x3cb705,_0x442a26,_0xeda7fe,_0x51890a){var _0x5662ae=_0x127fec[_0xf868('0x7')](this,_0x3cb705,_0x442a26,_0xeda7fe,_0x51890a)||this;_0x5662ae['linkElem']=document['createElement'](_0x1628cf[_0xf868('0x260')]);return _0x5662ae;}_0x38b952[_0xf868('0x2c')][_0xf868('0x261')]=function(){var _0x3e70e2=_0x1654c3[_0xf868('0x262')][_0xf868('0x5')]('|'),_0xc37db5=0x0;while(!![]){switch(_0x3e70e2[_0xc37db5++]){case'0':this['linkElem'][_0xf868('0x263')]=function(){_0x270cc7[_0xf868('0x247')]['instance'][_0xf868('0x264')][_0xf868('0x265')](_0x6d4be9);_0x270cc7['ABS'][_0xf868('0x266')][_0xf868('0x256')][_0xf868('0x267')](_0x49dc61['linkElem']);_0x270cc7['LoadResManager'][_0xf868('0xd0')][_0xf868('0x268')](_0x49dc61[_0xf868('0x257')],![]);};continue;case'1':this[_0xf868('0x269')]['rel']=_0xf868('0x26a');continue;case'2':this[_0xf868('0x269')][_0xf868('0x75')]=this[_0xf868('0x75')];continue;case'3':var _0x49dc61=this;continue;case'4':this[_0xf868('0x269')][_0xf868('0x26b')]=_0x6d4be9;continue;case'5':_0x270cc7[_0xf868('0x19c')][_0xf868('0x266')][_0xf868('0x256')][_0xf868('0x267')](this[_0xf868('0x269')]);continue;case'6':this['linkElem'][_0xf868('0x26c')]=function(){_0x270cc7[_0xf868('0x247')]['instance'][_0xf868('0x268')](_0x49dc61['scriptName'],!![]);};continue;case'7':var _0x6d4be9=_0x1654c3[_0xf868('0x26d')](_0x1654c3['CtiHT'](_0x1654c3[_0xf868('0x26d')](_0x1654c3['CtiHT'](_0x270cc7['SlotConfigManager'][_0xf868('0xd0')][_0xf868('0x224')],'/')+this[_0xf868('0x258')],'/')+this['scriptName'],_0x1654c3[_0xf868('0x26e')]),this[_0xf868('0x26f')]);continue;case'8':if(_0x270cc7[_0xf868('0x247')]['instance'][_0xf868('0x264')][_0xf868('0xff')](_0x6d4be9)){_0x270cc7[_0xf868('0xa5')][_0xf868('0xd0')][_0xf868('0xa1')](_0x270cc7[_0xf868('0x75')][_0xf868('0x74')][_0xf868('0x86')],_0x1654c3[_0xf868('0x270')](_0x1654c3['OpWmN'],_0x6d4be9));}continue;}break;}};return _0x38b952;}(_0x270cc7[_0xf868('0x19c')][_0xf868('0x266')]);_0x270cc7['CSSLoad']=_0x38b952;}(fcc||(fcc={})));var fcc;(function(_0x511d93){var _0x135c69={'qGusp':_0xf868('0x271'),'OwOQd':function(_0xdfdf58,_0x5efa98){return _0xdfdf58+_0x5efa98;},'ezakv':_0xf868('0x272'),'OYJCK':function(_0x38628e,_0x357f73){return _0x38628e+_0x357f73;},'IxYRE':function(_0x34cc1a,_0x22e27f,_0x250f59){return _0x34cc1a(_0x22e27f,_0x250f59);}};var _0x20f4d9=function(_0x220773){var _0x57a4df={'AaRQW':_0xf868('0x273'),'SHGhm':function(_0x36a0b5,_0x477351){return _0x135c69[_0xf868('0x274')](_0x36a0b5,_0x477351);},'XZIqq':function(_0x5749a9,_0x4beb88){return _0x135c69[_0xf868('0x274')](_0x5749a9,_0x4beb88);},'MGXHt':_0x135c69['ezakv'],'mljDP':function(_0x1aa61d,_0x292bf8){return _0x135c69[_0xf868('0x275')](_0x1aa61d,_0x292bf8);},'pJePe':_0xf868('0x25b')};_0x135c69[_0xf868('0x276')](__extends,_0x20f4d9,_0x220773);function _0x20f4d9(_0x2df8d8,_0x1119a4,_0x4202b0,_0x259b82){var _0x905dbe=_0x220773[_0xf868('0x7')](this,_0x2df8d8,_0x1119a4,_0x4202b0,_0x259b82)||this;_0x905dbe[_0xf868('0x269')]=document[_0xf868('0x277')](_0x135c69[_0xf868('0x278')]);return _0x905dbe;}_0x20f4d9[_0xf868('0x2c')][_0xf868('0x261')]=function(){var _0x10c222=_0x57a4df[_0xf868('0x279')][_0xf868('0x5')]('|'),_0x5bbf07=0x0;while(!![]){switch(_0x10c222[_0x5bbf07++]){case'0':this[_0xf868('0x269')]['src']=_0x4862f8;continue;case'1':_0x511d93[_0xf868('0x19c')][_0xf868('0x266')][_0xf868('0x256')][_0xf868('0x267')](this[_0xf868('0x269')]);continue;case'2':this[_0xf868('0x269')][_0xf868('0x75')]=this[_0xf868('0x75')];continue;case'3':var _0x403c64=this;continue;case'4':this[_0xf868('0x269')][_0xf868('0x263')]=function(){_0x511d93[_0xf868('0x247')][_0xf868('0xd0')][_0xf868('0x264')][_0xf868('0x265')](_0x4862f8);_0x511d93['LoadResManager'][_0xf868('0xd0')]['loadScriptEventCallback'](_0x403c64[_0xf868('0x257')],![]);};continue;case'5':var _0x4862f8=_0x57a4df[_0xf868('0x27a')](_0x57a4df[_0xf868('0x27a')](_0x57a4df['XZIqq'](_0x511d93['SlotConfigManager'][_0xf868('0xd0')][_0xf868('0x224')],'/')+this[_0xf868('0x258')]+'/'+this[_0xf868('0x257')],_0x57a4df[_0xf868('0x27b')]),this[_0xf868('0x26f')]);continue;case'6':if(_0x511d93[_0xf868('0x247')][_0xf868('0xd0')][_0xf868('0x264')]['has'](_0x4862f8)){_0x511d93['ErrorManager'][_0xf868('0xd0')]['executeError'](_0x511d93[_0xf868('0x75')][_0xf868('0x74')]['LOAD_FW'],_0x57a4df[_0xf868('0x27c')](_0x57a4df['pJePe'],_0x4862f8));}continue;case'7':this[_0xf868('0x269')][_0xf868('0x26c')]=function(){_0x511d93['LoadResManager'][_0xf868('0xd0')][_0xf868('0x268')](_0x403c64['scriptName'],!![]);};continue;}break;}};return _0x20f4d9;}(_0x511d93[_0xf868('0x19c')][_0xf868('0x266')]);_0x511d93[_0xf868('0x27d')]=_0x20f4d9;}(fcc||(fcc={})));var fcc;(function(_0x2035c8){var _0x55cae3={'JHqUe':'0|4|2|5|3|1','PQIQt':function(_0x2e9e4a,_0x22db33){return _0x2e9e4a instanceof _0x22db33;},'YhdFG':function(_0x4363be,_0x51dd99){return _0x4363be+_0x51dd99;},'DlfkV':function(_0x149c09,_0xc3bb75){return _0x149c09-_0xc3bb75;},'CrelB':function(_0x17cd12,_0x50949c){return _0x17cd12===_0x50949c;}};var _0x42fc02;(function(_0x42fc02){var _0xe6cb9a={'vpWqD':_0x55cae3['JHqUe'],'kGnob':function(_0x11288e,_0x50640e){return _0x11288e!==_0x50640e;},'ZuUtG':function(_0xadb8e9,_0x4e7f72){return _0x55cae3['PQIQt'](_0xadb8e9,_0x4e7f72);},'rbVDf':function(_0x13e9ca,_0x4adebf){return _0x55cae3[_0xf868('0x27e')](_0x13e9ca,_0x4adebf);},'DEWYx':function(_0x9fafe5,_0x4a0953){return _0x9fafe5>_0x4a0953;},'IWxNS':function(_0x3fae42,_0x4deb51){return _0x55cae3[_0xf868('0x27f')](_0x3fae42,_0x4deb51);},'VkxTw':function(_0xa7820c,_0x3e820e){return _0x55cae3[_0xf868('0x280')](_0xa7820c,_0x3e820e);}};var _0x2163d7=function(){var _0x2fde17={'GThLL':_0xf868('0x281')};function _0x2163d7(_0x5c4396,_0x4df30b,_0x548442,_0x13fde5){var _0x3bd23f=_0xe6cb9a[_0xf868('0x282')][_0xf868('0x5')]('|'),_0x373e14=0x0;while(!![]){switch(_0x3bd23f[_0x373e14++]){case'0':this[_0xf868('0x75')]=_0x4df30b;continue;case'1':this[_0xf868('0x283')]=cc[_0xf868('0x284')][_0xf868('0x285')](this[_0xf868('0x286')]);continue;case'2':this[_0xf868('0x287')]=_0x5c4396;continue;case'3':this[_0xf868('0x288')]=0x0;continue;case'4':this[_0xf868('0x258')]=_0x548442;continue;case'5':this[_0xf868('0x286')]=_0x13fde5;continue;}break;}}_0x2163d7['prototype'][_0xf868('0x289')]=function(){if(_0xe6cb9a[_0xf868('0x28a')](this['type'],cc[_0xf868('0x28b')])){this['assetBundle'][_0xf868('0x28c')](this[_0xf868('0x258')],this[_0xf868('0x75')],this[_0xf868('0x28d')]['bind'](this),this[_0xf868('0x28e')][_0xf868('0x28f')](this));}else{this['assetBundle']['loadScene'](this[_0xf868('0x287')],cc[_0xf868('0x28b')],this['loadResProgress'][_0xf868('0x28f')](this),this['loadResCallBack']['bind'](this));}};_0x2163d7['prototype'][_0xf868('0x28e')]=function(_0xff72f1,_0x8bbf17){if(_0xff72f1){_0x2035c8[_0xf868('0xa5')][_0xf868('0xd0')][_0xf868('0xa1')](_0x2035c8['type'][_0xf868('0x74')][_0xf868('0x86')],_0xff72f1);}else if(!_0xe6cb9a[_0xf868('0x290')](_0x8bbf17,cc['SceneAsset'])&&_0x8bbf17[_0xf868('0xe')]==0x0){_0x2035c8['ErrorManager'][_0xf868('0xd0')]['executeError'](_0x2035c8['type'][_0xf868('0x74')][_0xf868('0x86')],_0xe6cb9a['rbVDf']('無載入任何資源\x20',this['url'])+'\x20');}this[_0xf868('0x291')](this['dataName'],_0x8bbf17);};_0x2163d7[_0xf868('0x2c')]['loadResProgress']=function(_0x9766c9,_0x135ba0){var _0x1eb82e=_0x2035c8['global'][_0xf868('0x135')][_0xf868('0x122')](_0x9766c9/_0x135ba0,0x2);if(_0xe6cb9a['DEWYx'](_0x1eb82e,this['beforeProgress'])){if(_0x1eb82e>=0x1){_0x1eb82e=0.99;}this[_0xf868('0x292')](this[_0xf868('0x287')],_0x1eb82e,_0xe6cb9a[_0xf868('0x293')](_0x1eb82e,this[_0xf868('0x288')]));this[_0xf868('0x288')]=_0x1eb82e;}};_0x2163d7[_0xf868('0x2c')][_0xf868('0x294')]=function(){if(_0xe6cb9a[_0xf868('0x295')](this[_0xf868('0x286')],'resources')){_0x2035c8[_0xf868('0x247')][_0xf868('0xd0')]['initialLoadState']['set'](this[_0xf868('0x287')],0x1);_0x2035c8[_0xf868('0x247')][_0xf868('0xd0')][_0xf868('0x296')](this[_0xf868('0x287')],0.01,0x1);}else{_0x2035c8[_0xf868('0x247')][_0xf868('0xd0')][_0xf868('0x297')][_0xf868('0xf3')](this[_0xf868('0x287')],0x1);_0x2035c8[_0xf868('0x247')][_0xf868('0xd0')][_0xf868('0x298')](this['dataName'],0x1);}};_0x2163d7[_0xf868('0x2c')][_0xf868('0x292')]=function(_0xedc4c,_0x32fa06,_0x358da8){if(this['folder']===_0x2fde17['GThLL']){_0x2035c8[_0xf868('0x247')]['instance'][_0xf868('0x299')][_0xf868('0xf3')](_0xedc4c,_0x32fa06);_0x2035c8[_0xf868('0x247')][_0xf868('0xd0')][_0xf868('0x296')](_0xedc4c,_0x358da8,_0x32fa06);}else{_0x2035c8['LoadResManager'][_0xf868('0xd0')][_0xf868('0x297')]['set'](_0xedc4c,_0x32fa06);_0x2035c8[_0xf868('0x247')][_0xf868('0xd0')]['loadSecondaryEventCallback'](_0xedc4c,_0x32fa06);}};return _0x2163d7;}();_0x42fc02[_0xf868('0x29a')]=_0x2163d7;}(_0x42fc02=_0x2035c8[_0xf868('0x19c')]||(_0x2035c8[_0xf868('0x19c')]={})));}(fcc||(fcc={})));var fcc;(function(_0x4fb268){var _0x5861a7={'faQjV':_0xf868('0x29b'),'pZLQx':function(_0x271612,_0x4d683b,_0x1a6541){return _0x271612(_0x4d683b,_0x1a6541);}};var _0x536f31=function(_0x321735){var _0x49dcf4={'aMJwd':_0x5861a7['faQjV']};_0x5861a7[_0xf868('0x29c')](__extends,_0x536f31,_0x321735);function _0x536f31(_0x5a2b37,_0x5738a8,_0x2d02e2,_0x3ff7ce){return _0x321735[_0xf868('0x7')](this,_0x5a2b37,_0x5738a8,_0x2d02e2,_0x3ff7ce)||this;}_0x536f31['prototype'][_0xf868('0x291')]=function(_0x4a70e7,_0x138785){var _0x216779=_0x49dcf4[_0xf868('0x29d')][_0xf868('0x5')]('|'),_0x4ceb9e=0x0;while(!![]){switch(_0x216779[_0x4ceb9e++]){case'0':try{for(var _0x5a49b3=__values(_0x138785),_0x41c12f=_0x5a49b3[_0xf868('0xa')]();!_0x41c12f[_0xf868('0xb')];_0x41c12f=_0x5a49b3[_0xf868('0xa')]()){var _0x16bc4a=_0x41c12f[_0xf868('0xc')];_0x53b0e1['set'](_0x16bc4a[_0xf868('0x29e')],_0x16bc4a);}}catch(_0x4a52d0){_0x22ffe5={'error':_0x4a52d0};}finally{try{if(_0x41c12f&&!_0x41c12f['done']&&(_0x37fd70=_0x5a49b3[_0xf868('0x3')]))_0x37fd70['call'](_0x5a49b3);}finally{if(_0x22ffe5)throw _0x22ffe5['error'];}}continue;case'1':var _0x53b0e1=new Map();continue;case'2':_0x4fb268['LoadResManager']['instance'][_0xf868('0x29f')][_0xf868('0xf3')](_0x4a70e7,_0x53b0e1);continue;case'3':this[_0xf868('0x294')]();continue;case'4':var _0x22ffe5,_0x37fd70;continue;}break;}};return _0x536f31;}(_0x4fb268[_0xf868('0x19c')][_0xf868('0x29a')]);_0x4fb268[_0xf868('0x2a0')]=_0x536f31;}(fcc||(fcc={})));var fcc;(function(_0x344f44){var _0x4c5157={'JLorX':function(_0x8f5cbc,_0xc5d426){return _0x8f5cbc+_0xc5d426;}};var _0x74f01f=function(_0xdd145){var _0x11a344={'JKlKq':function(_0x282bb8,_0x446cf0){return _0x4c5157[_0xf868('0x2a1')](_0x282bb8,_0x446cf0);}};__extends(_0x74f01f,_0xdd145);function _0x74f01f(_0x3fe714,_0xd5545,_0x1b60e2,_0x46dee4){return _0xdd145[_0xf868('0x7')](this,_0x3fe714,_0xd5545,_0x1b60e2,_0x46dee4)||this;}_0x74f01f[_0xf868('0x2c')][_0xf868('0x291')]=function(_0x45a01e,_0x19ffd5){var _0x5dff7d,_0x426ced;try{for(var _0xb9fba2=__values(_0x19ffd5),_0x3ec33f=_0xb9fba2[_0xf868('0xa')]();!_0x3ec33f['done'];_0x3ec33f=_0xb9fba2[_0xf868('0xa')]()){var _0xae1362=_0x3ec33f[_0xf868('0xc')];var _0x39bf6d=_0xae1362[_0xf868('0x29e')];if(_0x344f44['LoadResManager'][_0xf868('0xd0')][_0xf868('0x2a2')][_0xf868('0xff')](_0x39bf6d))_0x344f44[_0xf868('0xa5')][_0xf868('0xd0')][_0xf868('0xa1')](_0x344f44[_0xf868('0x75')][_0xf868('0x74')][_0xf868('0x86')],_0x11a344[_0xf868('0x2a3')](_0x39bf6d,_0xf868('0x2a4')));_0x344f44[_0xf868('0x247')][_0xf868('0xd0')][_0xf868('0x2a2')][_0xf868('0xf3')](_0x39bf6d,_0xae1362);}}catch(_0x510c8c){_0x5dff7d={'error':_0x510c8c};}finally{try{if(_0x3ec33f&&!_0x3ec33f[_0xf868('0xb')]&&(_0x426ced=_0xb9fba2[_0xf868('0x3')]))_0x426ced[_0xf868('0x7')](_0xb9fba2);}finally{if(_0x5dff7d)throw _0x5dff7d[_0xf868('0xd')];}}this[_0xf868('0x294')]();};return _0x74f01f;}(_0x344f44[_0xf868('0x19c')]['ALoadType']);_0x344f44[_0xf868('0x2a5')]=_0x74f01f;}(fcc||(fcc={})));var fcc;(function(_0x240fbd){var _0x47fecf={'tBRYr':function(_0xa08e18,_0x18b91d){return _0xa08e18(_0x18b91d);},'KUJdk':function(_0x562a35,_0x47f2a5){return _0x562a35+_0x47f2a5;},'xnPit':_0xf868('0x2a6'),'Mujyc':function(_0x2508bf,_0x5e8bec,_0x4a3182){return _0x2508bf(_0x5e8bec,_0x4a3182);}};var _0x446ce8=function(_0x23c6a1){var _0x2b9caf={'YAzdW':function(_0x141971,_0x2f43cd){return _0x47fecf[_0xf868('0x2a7')](_0x141971,_0x2f43cd);},'iImfe':function(_0x2d7d5e,_0x5a3b44){return _0x47fecf[_0xf868('0x2a8')](_0x2d7d5e,_0x5a3b44);},'bSqVx':_0x47fecf[_0xf868('0x2a9')]};_0x47fecf[_0xf868('0x2aa')](__extends,_0x446ce8,_0x23c6a1);function _0x446ce8(_0x268aba,_0x425333,_0x1fdbaf,_0x457482){return _0x23c6a1['call'](this,_0x268aba,_0x425333,_0x1fdbaf,_0x457482)||this;}_0x446ce8[_0xf868('0x2c')]['setResToManager']=function(_0x2bbb58,_0x922c80){var _0x12350b,_0x270c4c;try{for(var _0x4b207e=_0x2b9caf[_0xf868('0x2ab')](__values,_0x922c80),_0x54ffff=_0x4b207e[_0xf868('0xa')]();!_0x54ffff[_0xf868('0xb')];_0x54ffff=_0x4b207e[_0xf868('0xa')]()){var _0x341905=_0x54ffff[_0xf868('0xc')];if(_0x240fbd[_0xf868('0x247')]['instance']['prefabRes'][_0xf868('0xff')](_0x341905[_0xf868('0x29e')])){_0x240fbd[_0xf868('0xa5')][_0xf868('0xd0')][_0xf868('0xa1')](_0x240fbd[_0xf868('0x75')][_0xf868('0x74')][_0xf868('0x86')],_0x2b9caf[_0xf868('0x2ac')](_0x341905[_0xf868('0x29e')],_0x2b9caf[_0xf868('0x2ad')]));return;}else{_0x240fbd[_0xf868('0x247')][_0xf868('0xd0')][_0xf868('0x2ae')][_0xf868('0xf3')](_0x341905[_0xf868('0x29e')],_0x341905);}}}catch(_0xef25c6){_0x12350b={'error':_0xef25c6};}finally{try{if(_0x54ffff&&!_0x54ffff[_0xf868('0xb')]&&(_0x270c4c=_0x4b207e['return']))_0x270c4c[_0xf868('0x7')](_0x4b207e);}finally{if(_0x12350b)throw _0x12350b['error'];}}this[_0xf868('0x294')]();};return _0x446ce8;}(_0x240fbd[_0xf868('0x19c')]['ALoadType']);_0x240fbd[_0xf868('0x2af')]=_0x446ce8;}(fcc||(fcc={})));var fcc;(function(_0x45f28b){var _0x58e0ad={'FtyNM':function(_0x130cf9,_0x41c366){return _0x130cf9+_0x41c366;},'psZuQ':_0xf868('0x2b0'),'rxEkH':function(_0x5cdc9a,_0xb74a13,_0x2a8078){return _0x5cdc9a(_0xb74a13,_0x2a8078);}};var _0x48d9ba=function(_0x17d9bb){var _0x4273ca={'ckRZU':function(_0x32f5e6,_0x3335b4){return _0x58e0ad[_0xf868('0x2b1')](_0x32f5e6,_0x3335b4);},'tJXrw':_0x58e0ad[_0xf868('0x2b2')]};_0x58e0ad[_0xf868('0x2b3')](__extends,_0x48d9ba,_0x17d9bb);function _0x48d9ba(_0x3312c9,_0x32e06a,_0x4f3597,_0x2bcfb8){return _0x17d9bb[_0xf868('0x7')](this,_0x3312c9,_0x32e06a,_0x4f3597,_0x2bcfb8)||this;}_0x48d9ba[_0xf868('0x2c')][_0xf868('0x291')]=function(_0x27116c,_0x2cd603){if(_0x45f28b[_0xf868('0x247')][_0xf868('0xd0')][_0xf868('0x264')][_0xf868('0xff')](_0x27116c))_0x45f28b[_0xf868('0xa5')]['instance'][_0xf868('0xa1')](_0x45f28b[_0xf868('0x75')][_0xf868('0x74')]['LOAD_FW'],_0x4273ca[_0xf868('0x2b4')](_0x27116c,_0x4273ca[_0xf868('0x2b5')]));_0x45f28b['LoadResManager']['instance']['sceneRes']['set'](_0x27116c,_0x2cd603);this[_0xf868('0x294')]();};return _0x48d9ba;}(_0x45f28b[_0xf868('0x19c')][_0xf868('0x29a')]);_0x45f28b[_0xf868('0x2b6')]=_0x48d9ba;}(fcc||(fcc={})));var fcc;(function(_0x55de27){var _0x6af21b={'bBTXP':function(_0x16fcc4,_0x55b28c){return _0x16fcc4(_0x55b28c);},'pGhNe':_0xf868('0x2b7'),'ULRDX':function(_0x2b7295,_0x5147a4,_0x31128e){return _0x2b7295(_0x5147a4,_0x31128e);}};var _0x5da4e7=function(_0x144af3){var _0x1217ff={'aNkoL':_0xf868('0x2b8'),'yICQY':function(_0x471a5b,_0x32275c){return _0x6af21b[_0xf868('0x2b9')](_0x471a5b,_0x32275c);},'pIPdr':_0x6af21b[_0xf868('0x2ba')]};_0x6af21b[_0xf868('0x2bb')](__extends,_0x5da4e7,_0x144af3);function _0x5da4e7(_0x272616,_0x4c316c,_0x599515,_0x3cb980){return _0x144af3[_0xf868('0x7')](this,_0x272616,_0x4c316c,_0x599515,_0x3cb980)||this;}_0x5da4e7[_0xf868('0x2c')]['setResToManager']=function(_0x4c7243,_0x254787){var _0x20c300,_0x725022,_0x446f8d,_0x563694;if(_0x55de27[_0xf868('0x247')][_0xf868('0xd0')][_0xf868('0x2bc')][_0xf868('0xff')](_0x4c7243)){_0x55de27[_0xf868('0xa5')]['instance'][_0xf868('0xa1')](_0x55de27[_0xf868('0x75')][_0xf868('0x74')][_0xf868('0x86')],_0xf868('0x2bd'));}_0x55de27['LoadResManager']['instance'][_0xf868('0x2bc')]['set'](_0x4c7243,_0x254787[0x0]);var _0x1d1346=_0x4c7243[_0xf868('0x2be')]();var _0x4b67b6=_0x1d1346[_0xf868('0x2bf')](_0x1217ff[_0xf868('0x2c0')]);try{for(var _0x433581=__values(_0x254787),_0x1fec9c=_0x433581['next']();!_0x1fec9c[_0xf868('0xb')];_0x1fec9c=_0x433581[_0xf868('0xa')]()){var _0x3c756b=_0x1fec9c[_0xf868('0xc')];var _0x4d107e=Object[_0xf868('0x2c1')](_0x3c756b[_0xf868('0x2c2')][_0xf868('0x2c3')]);var _0x4138f6=new Map();try{for(var _0x9686dd=(_0x446f8d=void 0x0,_0x1217ff[_0xf868('0x2c4')](__values,_0x4d107e)),_0x4392fb=_0x9686dd[_0xf868('0xa')]();!_0x4392fb['done'];_0x4392fb=_0x9686dd[_0xf868('0xa')]()){var _0x44efb7=_0x4392fb[_0xf868('0xc')];if(_0x4b67b6){var _0x239802=_0x44efb7['replace'](/[^0-9]/gi,'');if(_0x239802===''){_0x4138f6[_0xf868('0xf3')](_0x44efb7,_0x44efb7);}else{if(_0x4138f6[_0xf868('0xff')](_0x239802)){_0x55de27[_0xf868('0xa5')][_0xf868('0xd0')][_0xf868('0xa1')](_0x55de27[_0xf868('0x75')]['ErrorType']['LOAD_FW'],_0x44efb7+_0x1217ff[_0xf868('0x2c5')]);}_0x4138f6[_0xf868('0xf3')](_0x239802,_0x44efb7);}}else{_0x4138f6['set'](_0x44efb7,_0x44efb7);}}}catch(_0x1b2d9a){_0x446f8d={'error':_0x1b2d9a};}finally{try{if(_0x4392fb&&!_0x4392fb['done']&&(_0x563694=_0x9686dd[_0xf868('0x3')]))_0x563694[_0xf868('0x7')](_0x9686dd);}finally{if(_0x446f8d)throw _0x446f8d['error'];}}}}catch(_0x429ac5){_0x20c300={'error':_0x429ac5};}finally{try{if(_0x1fec9c&&!_0x1fec9c[_0xf868('0xb')]&&(_0x725022=_0x433581[_0xf868('0x3')]))_0x725022['call'](_0x433581);}finally{if(_0x20c300)throw _0x20c300[_0xf868('0xd')];}}this[_0xf868('0x294')]();};return _0x5da4e7;}(_0x55de27[_0xf868('0x19c')][_0xf868('0x29a')]);_0x55de27['SpineLoad']=_0x5da4e7;}(fcc||(fcc={})));var fcc;(function(_0x460103){var _0x5e9d47={'AYPKh':function(_0x5c4782,_0x3da8c0){return _0x5c4782(_0x3da8c0);},'jxOfA':function(_0x1569bb,_0x2d8a5d){return _0x1569bb==_0x2d8a5d;},'IBEIM':function(_0xcf0d31,_0x32c0a0,_0x408a44){return _0xcf0d31(_0x32c0a0,_0x408a44);}};var _0x1beea7=function(_0x336ab2){var _0x36f4bb={'ELxHt':'text','lFGFK':function(_0x428be3,_0x1ec8b6){return _0x5e9d47[_0xf868('0x2c6')](_0x428be3,_0x1ec8b6);},'wcrIT':function(_0x45177e,_0x4629df){return _0x5e9d47[_0xf868('0x2c7')](_0x45177e,_0x4629df);}};_0x5e9d47['IBEIM'](__extends,_0x1beea7,_0x336ab2);function _0x1beea7(_0x1f141e,_0x5a58e9,_0x3fa423,_0x22e567){return _0x336ab2['call'](this,_0x1f141e,_0x5a58e9,_0x3fa423,_0x22e567)||this;}_0x1beea7[_0xf868('0x2c')][_0xf868('0x291')]=function(_0x38efc9,_0x34ef0e){var _0x2c43bb,_0x46c724;var _0x3c334a=_0x34ef0e[0x0][_0x36f4bb[_0xf868('0x2c8')]][_0xf868('0x5')](/[\s\n]/);var _0x51bf74=new Map();try{for(var _0x432cc6=_0x36f4bb[_0xf868('0x2c9')](__values,_0x3c334a),_0x2c5f53=_0x432cc6['next']();!_0x2c5f53[_0xf868('0xb')];_0x2c5f53=_0x432cc6[_0xf868('0xa')]()){var _0x1078d4=_0x2c5f53[_0xf868('0xc')];var _0x3615f9=_0x1078d4['split'](',');var _0x33c937=_0x3615f9[0x0];var _0x4cb01a=_0x3615f9[0x1];if(_0x36f4bb[_0xf868('0x2ca')](_0x33c937,'')){continue;}var _0x2ee736=_0x4cb01a[_0xf868('0x2cb')](/['"]/g,'');_0x51bf74[_0xf868('0xf3')](_0x33c937,_0x2ee736);}}catch(_0x44c0c2){_0x2c43bb={'error':_0x44c0c2};}finally{try{if(_0x2c5f53&&!_0x2c5f53[_0xf868('0xb')]&&(_0x46c724=_0x432cc6[_0xf868('0x3')]))_0x46c724[_0xf868('0x7')](_0x432cc6);}finally{if(_0x2c43bb)throw _0x2c43bb[_0xf868('0xd')];}}_0x460103['LoadResManager']['instance'][_0xf868('0x2cc')][_0xf868('0xf3')](_0x38efc9,_0x51bf74);this[_0xf868('0x294')]();};return _0x1beea7;}(_0x460103[_0xf868('0x19c')]['ALoadType']);_0x460103[_0xf868('0x2cd')]=_0x1beea7;}(fcc||(fcc={})));var fcc;(function(_0x282dbc){var _0x301859={'Nvrbb':_0xf868('0x2ce'),'AuEXd':_0xf868('0x281'),'WQlNC':_0xf868('0x2cf'),'wEaTT':function(_0x51255f,_0x2dce29){return _0x51255f!=_0x2dce29;},'zHISo':function(_0x2912b4,_0x5c32e1,_0x377c88){return _0x2912b4(_0x5c32e1,_0x377c88);},'RIAJS':'text/css','fBjqr':'text/javascript','PJYlL':_0xf868('0x2d0')};var _0x599354=function(){var _0x3838af={'xTDGs':function(_0x32d94f,_0x373b94){return _0x301859[_0xf868('0x2d1')](_0x32d94f,_0x373b94);},'vepRW':function(_0x3df55e,_0x7b5872,_0x1bca01){return _0x301859['zHISo'](_0x3df55e,_0x7b5872,_0x1bca01);},'vGybo':_0x301859[_0xf868('0x2d2')],'WGhGX':_0x301859[_0xf868('0x2d3')],'oeHrj':_0x301859['PJYlL']};function _0x599354(_0x5637a2,_0x445e31){this[_0xf868('0x2d4')]=new Array();this['configManager']=_0x445e31;this[_0xf868('0x2d5')]=_0x5637a2;}_0x599354[_0xf868('0x2c')][_0xf868('0x2d6')]=function(_0x49b259,_0x184a6b,_0x2e37f3){var _0xc20a59={'Ppblo':function(_0x1d7761){return _0x1d7761();},'rlgok':_0x301859[_0xf868('0x2d7')]};var _0x39ffdf=this;if(this['assetBundle'])return;this['promise']=new Promise(function(){});return new Promise(function(_0x404fcc){if(!_0x39ffdf[_0xf868('0x2d8')]){_0x39ffdf['isLoadBundle']=!![];cc['assetManager']['loadBundle'](_0xc20a59['rlgok'],function(_0x4499a1,_0x1c8754){if(_0x4499a1){_0x282dbc['ErrorManager'][_0xf868('0xd0')][_0xf868('0xa1')](_0x282dbc[_0xf868('0x75')][_0xf868('0x74')][_0xf868('0x86')],_0x4499a1);}_0x39ffdf[_0xf868('0x283')]=_0x1c8754;_0xc20a59[_0xf868('0x2d9')](_0x404fcc);});}else if(!_0x39ffdf[_0xf868('0x283')]&&_0x39ffdf['isLoadBundle']){_0x39ffdf[_0xf868('0x2d4')][_0xf868('0x2da')](_0x39ffdf[_0xf868('0x2db')]['bind'](_0x39ffdf,_0x49b259,_0x184a6b,_0x2e37f3,_0xf868('0x2ce')));}});};_0x599354[_0xf868('0x2c')][_0xf868('0x2dc')]=function(_0x2fa7be,_0x2ebd65,_0x39338e){this[_0xf868('0x2db')](_0x2fa7be,_0x2ebd65,_0x39338e,_0x301859[_0xf868('0x2dd')]);};_0x599354[_0xf868('0x2c')][_0xf868('0x2de')]=function(_0x2b6a6a,_0x35f38e,_0x368e80){return __awaiter(this,void 0x0,void 0x0,function(){var _0x39e06e={'QfFmW':function(_0x5c76be,_0x181ab3){return _0x3838af['xTDGs'](_0x5c76be,_0x181ab3);}};return _0x3838af['vepRW'](__generator,this,function(_0x35b0ca){switch(_0x35b0ca['label']){case 0x0:return[0x4,this[_0xf868('0x2d6')](_0x2b6a6a,_0x35f38e,_0x368e80)];case 0x1:_0x35b0ca[_0xf868('0x16e')]();this['checkLoadType'](_0x2b6a6a,_0x35f38e,_0x368e80,_0xf868('0x2ce'));if(_0x39e06e['QfFmW'](this[_0xf868('0x2d4')]['length'],0x0)){while(this[_0xf868('0x2d4')][_0xf868('0xe')]){this[_0xf868('0x2d4')][0x0]();this[_0xf868('0x2d4')][_0xf868('0x2df')]();}}return[0x2];}});});};_0x599354[_0xf868('0x2c')][_0xf868('0x2db')]=function(_0x250ab2,_0x4211ac,_0x2d1f6d,_0x2a2a60){switch(_0x4211ac){case _0x282dbc['type'][_0xf868('0x145')]['IMG']:new _0x282dbc[(_0xf868('0x2a0'))](_0x250ab2,cc[_0xf868('0x2e0')],_0x2d1f6d,_0x2a2a60)[_0xf868('0x289')]();break;case _0x282dbc[_0xf868('0x75')][_0xf868('0x145')][_0xf868('0x137')]:new _0x282dbc[(_0xf868('0x2e1'))](_0x250ab2,cc[_0xf868('0x2e2')],_0x2d1f6d,_0x2a2a60)[_0xf868('0x289')]();break;case _0x282dbc[_0xf868('0x75')]['LoadType'][_0xf868('0x138')]:new _0x282dbc[(_0xf868('0x2a5'))](_0x250ab2,cc['AudioClip'],_0x2d1f6d,_0x2a2a60)[_0xf868('0x289')]();break;case _0x282dbc[_0xf868('0x75')]['LoadType']['PREFAB']:new _0x282dbc[(_0xf868('0x2af'))](_0x250ab2,cc[_0xf868('0x2e3')],_0x2d1f6d,_0x2a2a60)[_0xf868('0x289')]();break;case _0x282dbc[_0xf868('0x75')][_0xf868('0x145')][_0xf868('0x13b')]:new _0x282dbc[(_0xf868('0x2e4'))](_0x250ab2,sp[_0xf868('0x2e5')],_0x2d1f6d,_0x2a2a60)[_0xf868('0x289')]();break;case _0x282dbc['type']['LoadType'][_0xf868('0x13c')]:new _0x282dbc['SceneLoad'](_0x250ab2,cc['SceneAsset'],null,_0x2a2a60)[_0xf868('0x289')]();break;case _0x282dbc['type']['LoadType'][_0xf868('0x139')]:new _0x282dbc[(_0xf868('0x2cd'))](_0x250ab2,cc[_0xf868('0x2e6')],_0x2d1f6d,_0x2a2a60)[_0xf868('0x289')]();break;default:_0x282dbc[_0xf868('0xa5')][_0xf868('0xd0')][_0xf868('0xa1')](_0x282dbc['type'][_0xf868('0x74')][_0xf868('0x83')],_0x301859['WQlNC']);}};_0x599354[_0xf868('0x2c')][_0xf868('0x2e7')]=function(_0x2cf012,_0x455a3e,_0x543eaf,_0x4eeab9){switch(_0x455a3e){case _0x282dbc[_0xf868('0x75')][_0xf868('0x145')][_0xf868('0x2e8')]:new _0x282dbc['CSSLoad'](_0x2cf012,_0x3838af['vGybo'],_0x543eaf,_0x4eeab9)[_0xf868('0x261')]();break;case _0x282dbc[_0xf868('0x75')][_0xf868('0x145')][_0xf868('0x13d')]:new _0x282dbc['ScriptLoad'](_0x2cf012,_0x3838af[_0xf868('0x2e9')],_0x543eaf,_0x4eeab9)['loadScript']();break;default:_0x282dbc[_0xf868('0xa5')][_0xf868('0xd0')]['executeError'](_0x282dbc[_0xf868('0x75')][_0xf868('0x74')]['TYPE_FW'],_0x3838af[_0xf868('0x2ea')]);}};return _0x599354;}();_0x282dbc[_0xf868('0x2eb')]=_0x599354;}(fcc||(fcc={})));var fcc;(function(_0x56542f){var _0xd2cccd={'YfyWh':function(_0x545795,_0x4d820c,_0x333c71,_0x29ef9a,_0x293a0b){return _0x545795(_0x4d820c,_0x333c71,_0x29ef9a,_0x293a0b);},'pLaFM':function(_0x422c71,_0x1e18b3,_0x57b06f){return _0x422c71(_0x1e18b3,_0x57b06f);},'tEOmD':function(_0x40cd4e,_0x226115){return _0x40cd4e+_0x226115;},'ojOac':_0xf868('0x2ec')};var _0x2bdf0d=function(){var _0x4aacb7={'eYSQN':function(_0x2dd5d4,_0x1fbaa1,_0x5e8665){return _0xd2cccd[_0xf868('0x2ed')](_0x2dd5d4,_0x1fbaa1,_0x5e8665);},'alRne':function(_0x2fc7a3,_0x3b0a8e){return _0xd2cccd[_0xf868('0x2ee')](_0x2fc7a3,_0x3b0a8e);},'IQAen':_0xd2cccd[_0xf868('0x2ef')],'fyCqK':function(_0x1bc6ad,_0x4c5d32){return _0x1bc6ad+_0x4c5d32;},'gnYqG':_0xf868('0x2f0')};function _0x2bdf0d(_0x3ab604,_0x251300){this[_0xf868('0x2d5')]=_0x3ab604;this[_0xf868('0x2f1')]=new _0x56542f[(_0xf868('0x2eb'))](_0x3ab604,_0x251300);}_0x2bdf0d[_0xf868('0x2c')][_0xf868('0x2dc')]=function(_0x3e1068,_0x1a67e4,_0x334dd5){this[_0xf868('0x2f2')](_0x3e1068);this[_0xf868('0x2d5')]['initialLoadState'][_0xf868('0xf3')](_0x3e1068,null);this[_0xf868('0x2f1')]['executeLoad'](_0x3e1068,_0x1a67e4,_0x334dd5);};_0x2bdf0d['prototype'][_0xf868('0x2de')]=function(_0x3e29a6,_0x413edc,_0x3e12a8){return _0xd2cccd[_0xf868('0x2f3')](__awaiter,this,void 0x0,void 0x0,function(){return _0x4aacb7[_0xf868('0x2f4')](__generator,this,function(_0x48ea81){switch(_0x48ea81['label']){case 0x0:this[_0xf868('0x2f2')](_0x3e29a6);this[_0xf868('0x2d5')][_0xf868('0x297')][_0xf868('0xf3')](_0x3e29a6,null);return[0x4,this[_0xf868('0x2f1')][_0xf868('0x2de')](_0x3e29a6,_0x413edc,_0x3e12a8)];case 0x1:_0x48ea81['sent']();return[0x2];}});});};_0x2bdf0d[_0xf868('0x2c')][_0xf868('0x2f2')]=function(_0x212e04){if(this[_0xf868('0x2d5')][_0xf868('0x299')][_0xf868('0xff')](_0x212e04)){_0x56542f[_0xf868('0xa5')][_0xf868('0xd0')][_0xf868('0xa1')](_0x56542f[_0xf868('0x75')][_0xf868('0x74')]['LOAD_FW'],_0x4aacb7[_0xf868('0x2f5')](_0x212e04,_0x4aacb7['IQAen']));}if(this[_0xf868('0x2d5')][_0xf868('0x297')][_0xf868('0xff')](_0x212e04)){_0x56542f['ErrorManager'][_0xf868('0xd0')][_0xf868('0xa1')](_0x56542f[_0xf868('0x75')][_0xf868('0x74')][_0xf868('0x86')],_0x4aacb7['fyCqK'](_0x212e04,_0x4aacb7[_0xf868('0x2f6')]));}};_0x2bdf0d['prototype'][_0xf868('0x2e7')]=function(_0x2cdccb,_0xeb7fb9,_0x46b109,_0x5b3829){this['factory'][_0xf868('0x2e7')](_0x2cdccb,_0xeb7fb9,_0x46b109,_0x5b3829);};return _0x2bdf0d;}();_0x56542f[_0xf868('0x2f7')]=_0x2bdf0d;}(fcc||(fcc={})));var fcc;(function(_0x39da9e){var _0x10f6e4={'IveGd':'1|2|3|0|4','QWKYM':function(_0x276921,_0x50f364){return _0x276921==_0x50f364;},'wFszM':function(_0x53dee0,_0x34929a){return _0x53dee0/_0x34929a;},'radXA':function(_0x2458f0,_0x2ea7fd){return _0x2458f0==_0x2ea7fd;},'LXejH':function(_0x1406ce,_0x4d7395){return _0x1406ce>=_0x4d7395;},'Zlfuf':function(_0x4d0f96,_0x354848,_0x25c7f8){return _0x4d0f96(_0x354848,_0x25c7f8);},'jngBO':function(_0x5277e3,_0x4c7100){return _0x5277e3(_0x4c7100);},'cQRPv':function(_0x2df73a,_0x4b040f){return _0x2df73a+_0x4b040f;},'YjCyQ':function(_0x319947,_0x30c1dc){return _0x319947==_0x30c1dc;},'IvBQc':function(_0x1d707f,_0x2cb299){return _0x1d707f==_0x2cb299;},'zdBCV':function(_0x47811f,_0x3a6569){return _0x47811f===_0x3a6569;},'qMCVg':_0xf868('0x2f8'),'eaSAf':_0xf868('0x2f9'),'HCfEC':_0xf868('0x299'),'Fnynt':_0xf868('0x2bc'),'bSpis':_0xf868('0x2ae'),'ysiFN':_0xf868('0x2a2'),'xtwuj':_0xf868('0x264'),'uAIkc':_0xf868('0x2fa')};var _0x5d911a=function(){var _0xa53efe={'Dwhxe':function(_0x1821ea,_0x564468){return _0x10f6e4['cQRPv'](_0x1821ea,_0x564468);},'xIpMT':_0x10f6e4['qMCVg'],'JfgVS':_0x10f6e4[_0xf868('0x2fb')]};function _0x5d911a(_0x3aef83){var _0x37208c='8|5|7|10|16|12|3|6|4|14|9|1|2|13|15|0|11'[_0xf868('0x5')]('|'),_0x5dcede=0x0;while(!![]){switch(_0x37208c[_0x5dcede++]){case'0':this[_0xf868('0x288')]=0x0;continue;case'1':this['_scriptRes']=new Set();continue;case'2':this['_sceneRes']=new Map();continue;case'3':this['_spineRes']=new Map();continue;case'4':this[_0xf868('0x2fc')]=new Map();continue;case'5':this[_0xf868('0x2fd')]=new _0x39da9e['LoadTypeHandler'](this,_0x3aef83);continue;case'6':this['_readFileRes']=new Map();continue;case'7':this[_0xf868('0x2fe')]=new Map();continue;case'8':this[_0xf868('0x76')]=_0x3aef83;continue;case'9':this[_0xf868('0x2ff')]=new Map();continue;case'10':this['_secondaryLoadState']=new Map();continue;case'11':this['allProgressEndCount']=0x0;continue;case'12':this[_0xf868('0x300')]=new Map();continue;case'13':this[_0xf868('0x301')]=0x0;continue;case'14':this[_0xf868('0x1b3')]=new Map();continue;case'15':this[_0xf868('0x302')]=0x0;continue;case'16':this[_0xf868('0x303')]=new Map();continue;}break;}}_0x5d911a['setInstance']=function(_0x3edc38){if(!this[_0xf868('0xdc')]){this[_0xf868('0xdc')]=new _0x5d911a(_0x3edc38);_0x39da9e[_0xf868('0x304')]=this[_0xf868('0xdc')];}};Object[_0xf868('0xde')](_0x5d911a,'instance',{'get':function(){if(!this[_0xf868('0xdc')]){_0x39da9e[_0xf868('0xa5')]['instance'][_0xf868('0xa1')](_0x39da9e[_0xf868('0x75')][_0xf868('0x74')][_0xf868('0x86')],'該類尚未實例化');return;}return this[_0xf868('0xdc')];},'enumerable':![],'configurable':!![]});_0x5d911a[_0xf868('0x2c')]['loadMainEventCallback']=function(_0x597ab3,_0x155bf4,_0x4feb21){var _0x5b3e8e=_0x10f6e4[_0xf868('0x305')]['split']('|'),_0x3c0318=0x0;while(!![]){switch(_0x5b3e8e[_0x3c0318++]){case'0':if(_0x10f6e4[_0xf868('0x306')](_0x4feb21,0x1)){this[_0xf868('0x307')]+=0x1;if(this['allProgressEndCount']==this['count']){this[_0xf868('0x302')]=0x1;}}continue;case'1':this['onlyResEventCallback'](_0x597ab3,_0x4feb21);continue;case'2':this['allProgress']+=_0x10f6e4[_0xf868('0x308')](_0x155bf4,this[_0xf868('0x301')]);continue;case'3':if(this[_0xf868('0x302')]>=0x1)this['allProgress']=0.99;continue;case'4':if(this['callFun'][_0xf868('0xff')](null)){var _0x33e518=_0x10f6e4['radXA'](_0x39da9e[_0xf868('0x136')][_0xf868('0x135')][_0xf868('0x122')](this[_0xf868('0x288')],0x2),_0x39da9e[_0xf868('0x136')][_0xf868('0x135')][_0xf868('0x122')](this[_0xf868('0x302')],0x2));if(_0x33e518){return;}else{this[_0xf868('0x288')]=this[_0xf868('0x302')];this['callFun'][_0xf868('0x101')](null)(_0x39da9e['global']['Util'][_0xf868('0x122')](this[_0xf868('0x302')],0x2));if(_0x10f6e4[_0xf868('0x309')](this[_0xf868('0x302')],0x1)){this['count']=0x0;this[_0xf868('0x1b3')][_0xf868('0x197')](null);}}}continue;}break;}};_0x5d911a[_0xf868('0x2c')][_0xf868('0x298')]=function(_0x53b9ad,_0x4401b2){this['onlyResEventCallback'](_0x53b9ad,_0x4401b2);};_0x5d911a[_0xf868('0x2c')]['loadScriptEventCallback']=function(_0x545262,_0x1cacc1){this[_0xf868('0x30a')](_0x545262,0x1,_0x1cacc1);};_0x5d911a[_0xf868('0x2c')][_0xf868('0x30a')]=function(_0x4a5737,_0x22b74f,_0x3cf0c5){if(this[_0xf868('0x1b3')]['has'](_0x4a5737)){var _0x125817=this[_0xf868('0x1b3')]['get'](_0x4a5737);if(_0x10f6e4[_0xf868('0x30b')](_0x22b74f,0x1)){this[_0xf868('0x1b3')][_0xf868('0x197')](_0x4a5737);}if(_0x3cf0c5){_0x10f6e4[_0xf868('0x30c')](_0x125817,_0x22b74f,_0x3cf0c5);}else{_0x10f6e4['jngBO'](_0x125817,_0x22b74f);}}};_0x5d911a[_0xf868('0x2c')][_0xf868('0x30d')]=function(_0x1edfd5,_0x6b0cbe,_0x487772,_0x364ae1){this['count']+=0x1;if(_0x364ae1){_0x487772=_0x10f6e4[_0xf868('0x30e')](_0x10f6e4['cQRPv'](_0x487772,'/'),this['configManager']['language']);}this[_0xf868('0x2fd')][_0xf868('0x2dc')](_0x1edfd5,_0x6b0cbe,_0x487772);return this;};_0x5d911a['prototype'][_0xf868('0x2d6')]=function(_0x56b588,_0x2aefc5,_0x324d5b,_0x34ce42){if(_0x34ce42){_0x324d5b=_0xa53efe[_0xf868('0x30f')](_0xa53efe[_0xf868('0x30f')](_0x324d5b,'/'),this['configManager'][_0xf868('0x227')]);}this[_0xf868('0x2fd')]['executeLoadBundle'](_0x56b588,_0x2aefc5,_0x324d5b)['then']();return this;};_0x5d911a[_0xf868('0x2c')][_0xf868('0x310')]=function(_0x541dfc,_0x39d2e9){if(_0x39d2e9){if(this['callFun'][_0xf868('0xff')](_0x39d2e9)){_0x39da9e[_0xf868('0xa5')][_0xf868('0xd0')][_0xf868('0xa1')](_0x39da9e['type'][_0xf868('0x74')][_0xf868('0x86')],_0xa53efe[_0xf868('0x311')]);return;}this[_0xf868('0x1b3')]['set'](_0x39d2e9,_0x541dfc);return this;}else{if(this[_0xf868('0x1b3')][_0xf868('0xff')](null)){_0x39da9e[_0xf868('0xa5')]['instance'][_0xf868('0xa1')](_0x39da9e[_0xf868('0x75')]['ErrorType']['LOAD_FW'],_0xa53efe[_0xf868('0x312')]);return;}this[_0xf868('0x1b3')][_0xf868('0xf3')](null,_0x541dfc);}};_0x5d911a[_0xf868('0x2c')][_0xf868('0x313')]=function(_0x1a6724,_0x204712){if(_0x204712){return _0x10f6e4[_0xf868('0x314')](this[_0xf868('0x2fe')][_0xf868('0x101')](_0x1a6724),0x1);}else{return _0x10f6e4[_0xf868('0x315')](this['_initialLoadState'][_0xf868('0x101')](_0x1a6724),0x1);}};_0x5d911a[_0xf868('0x2c')]['loadExternalScript']=function(_0x211075,_0xe7339f,_0x4ddcc0,_0x1a3a6e){if(_0x10f6e4[_0xf868('0x316')](_0x1a3a6e,void 0x0)){_0x1a3a6e='';}this['loadTypeHandler'][_0xf868('0x2e7')](_0x211075,_0xe7339f,_0x4ddcc0,_0x1a3a6e);return this;};_0x5d911a[_0xf868('0x2c')][_0xf868('0x317')]=function(_0x491ddc){switch(_0x491ddc){case _0x39da9e[_0xf868('0x75')][_0xf868('0x145')][_0xf868('0x13b')]:this['spineRes'][_0xf868('0x318')]();break;case _0x39da9e[_0xf868('0x75')][_0xf868('0x145')][_0xf868('0x138')]:this[_0xf868('0x2a2')][_0xf868('0x318')]();break;case _0x39da9e[_0xf868('0x75')]['LoadType'][_0xf868('0x319')]:this[_0xf868('0x2ae')]['clear']();break;case _0x39da9e[_0xf868('0x75')][_0xf868('0x145')][_0xf868('0x13c')]:this[_0xf868('0x1f4')][_0xf868('0x318')]();break;case _0x39da9e[_0xf868('0x75')]['LoadType'][_0xf868('0x139')]:this[_0xf868('0x2cc')]['clear']();break;}};Object[_0xf868('0xde')](_0x5d911a[_0xf868('0x2c')],_0x10f6e4[_0xf868('0x31a')],{'get':function(){return this['_initialLoadState'];},'set':function(_0x479888){this['_initialLoadState']=_0x479888;},'enumerable':![],'configurable':!![]});Object[_0xf868('0xde')](_0x5d911a['prototype'],'secondaryLoadState',{'get':function(){return this[_0xf868('0x31b')];},'set':function(_0x3a6331){this[_0xf868('0x31b')]=_0x3a6331;},'enumerable':![],'configurable':!![]});Object[_0xf868('0xde')](_0x5d911a[_0xf868('0x2c')],_0xf868('0x29f'),{'get':function(){return this[_0xf868('0x300')];},'set':function(_0x373b62){this[_0xf868('0x300')]=_0x373b62;},'enumerable':![],'configurable':!![]});Object['defineProperty'](_0x5d911a['prototype'],_0x10f6e4['Fnynt'],{'get':function(){return this[_0xf868('0x31c')];},'set':function(_0xd783b4){this['_spineRes']=_0xd783b4;},'enumerable':![],'configurable':!![]});Object[_0xf868('0xde')](_0x5d911a[_0xf868('0x2c')],_0xf868('0x2cc'),{'get':function(){return this[_0xf868('0x31d')];},'set':function(_0x292b44){this[_0xf868('0x31d')]=_0x292b44;},'enumerable':![],'configurable':!![]});Object['defineProperty'](_0x5d911a[_0xf868('0x2c')],_0x10f6e4[_0xf868('0x31e')],{'get':function(){return this[_0xf868('0x2fc')];},'set':function(_0x277010){this[_0xf868('0x2fc')]=_0x277010;},'enumerable':![],'configurable':!![]});Object[_0xf868('0xde')](_0x5d911a['prototype'],_0x10f6e4['ysiFN'],{'get':function(){return this[_0xf868('0x2ff')];},'set':function(_0x58d336){this[_0xf868('0x2ff')]=_0x58d336;},'enumerable':![],'configurable':!![]});Object['defineProperty'](_0x5d911a[_0xf868('0x2c')],_0x10f6e4[_0xf868('0x31f')],{'get':function(){return this[_0xf868('0x320')];},'set':function(_0xd2b864){this['_scriptRes']=_0xd2b864;},'enumerable':![],'configurable':!![]});Object[_0xf868('0xde')](_0x5d911a[_0xf868('0x2c')],'sceneRes',{'get':function(){return this[_0xf868('0x321')];},'set':function(_0x111989){this['_sceneRes']=_0x111989;},'enumerable':![],'configurable':!![]});Object['defineProperty'](_0x5d911a['prototype'],_0x10f6e4[_0xf868('0x322')],{'get':function(){return this['_scriptLoadState'];},'enumerable':![],'configurable':!![]});return _0x5d911a;}();_0x39da9e['LoadResManager']=_0x5d911a;}(fcc||(fcc={})));var fcc;(function(_0x427824){var _0x146d56={'uwUbE':_0xf868('0x323'),'GNaww':_0xf868('0x324'),'PBHAZ':'5|1|9|4|0|7|2|3|8|6','FtbEL':function(_0x4a3493,_0x1ad666){return _0x4a3493==_0x1ad666;},'TZtYz':'loop','LNKmD':function(_0x23f6a1,_0x24f681){return _0x23f6a1+_0x24f681;},'eJwem':_0xf868('0x325'),'ASexJ':_0xf868('0x326')};var _0x240d7c;(function(_0x240d7c){_0x240d7c[_0x240d7c[_0xf868('0x323')]=-0x1]=_0x146d56['uwUbE'];_0x240d7c[_0x240d7c['PLAYING']=0x1]=_0xf868('0x327');_0x240d7c[_0x240d7c[_0xf868('0x324')]=0x2]=_0x146d56[_0xf868('0x328')];}(_0x240d7c||(_0x240d7c={})));var _0x5468d3=function(){function _0x5468d3(){this[_0xf868('0x329')]=null;}_0x5468d3[_0xf868('0x2c')][_0xf868('0x166')]=function(_0x5cdfa4,_0x4d5640){var _0x582c09=_0x146d56[_0xf868('0x32a')]['split']('|'),_0x1d182d=0x0;while(!![]){switch(_0x582c09[_0x1d182d++]){case'0':if(_0x146d56['FtbEL'](_0x212895,_0x240d7c[_0xf868('0x324')])){cc[_0xf868('0x32b')][_0xf868('0x32c')](this[_0xf868('0x329')]);return;}continue;case'1':var _0x42d779=_0x4d5640[_0xf868('0x101')](_0x146d56[_0xf868('0x32d')]);continue;case'2':var _0x3ccb2e=_0x427824['LoadResManager'][_0xf868('0xd0')][_0xf868('0x2a2')][_0xf868('0x101')](_0x5cdfa4);continue;case'3':var _0x188d79=cc['audioEngine'][_0xf868('0x32e')](_0x3ccb2e,_0x42d779);continue;case'4':if(!_0x427824[_0xf868('0x247')][_0xf868('0xd0')][_0xf868('0x2a2')][_0xf868('0xff')](_0x5cdfa4)){_0x427824['ErrorManager'][_0xf868('0xd0')]['executeError'](_0x427824[_0xf868('0x75')][_0xf868('0x74')][_0xf868('0x46')],_0x146d56['LNKmD'](_0x5cdfa4,_0x146d56[_0xf868('0x32f')]));return;}continue;case'5':var _0x387317=_0x4d5640[_0xf868('0x101')](_0x146d56[_0xf868('0x330')]);continue;case'6':this[_0xf868('0x329')]=_0x188d79;continue;case'7':if(_0x146d56[_0xf868('0x331')](_0x212895,_0x240d7c[_0xf868('0x327')])){this['stop']();}continue;case'8':cc['audioEngine'][_0xf868('0x332')](_0x188d79,_0x387317);continue;case'9':var _0x212895=cc[_0xf868('0x32b')][_0xf868('0x333')](this[_0xf868('0x329')]);continue;}break;}};_0x5468d3['prototype']['stop']=function(){cc['audioEngine'][_0xf868('0x332')](this[_0xf868('0x329')],0x0);cc[_0xf868('0x32b')][_0xf868('0x334')](this[_0xf868('0x329')]);};_0x5468d3[_0xf868('0x2c')][_0xf868('0x335')]=function(){if(cc['audioEngine'][_0xf868('0x333')](this[_0xf868('0x329')])!=cc['audioEngine'][_0xf868('0x336')][_0xf868('0x327')])return;cc[_0xf868('0x32b')][_0xf868('0x335')](this[_0xf868('0x329')]);};return _0x5468d3;}();_0x427824[_0xf868('0x337')]=_0x5468d3;}(fcc||(fcc={})));var fcc;(function(_0x29b3c2){var _0x2138ed={'hMFJI':_0xf868('0x338'),'uubkG':_0xf868('0x339'),'IBLSm':function(_0xe84242,_0x149ed6){return _0xe84242==_0x149ed6;},'zjjlJ':function(_0x19cb4a,_0x2689e8){return _0x19cb4a===_0x2689e8;},'wGGua':_0xf868('0x326'),'PLxnb':function(_0x3f18ce,_0x5d22a6){return _0x3f18ce+_0x5d22a6;},'PbjQh':_0xf868('0x325'),'fwYqn':function(_0x4db873,_0x40e62a){return _0x4db873===_0x40e62a;},'ZdeBJ':function(_0x3fc63f,_0x5b418d){return _0x3fc63f(_0x5b418d);}};var _0x3fbef2=function(){var _0x24eca0={'eDXmJ':_0x2138ed[_0xf868('0x33a')],'vBbka':_0xf868('0x33b'),'LhnXn':_0x2138ed[_0xf868('0x33c')],'ecKBq':function(_0x491da0,_0x2371bc){return _0x2138ed['IBLSm'](_0x491da0,_0x2371bc);},'SkUZJ':function(_0xde1768,_0x2cc9ff){return _0x2138ed[_0xf868('0x33d')](_0xde1768,_0x2cc9ff);},'ydQCn':_0x2138ed[_0xf868('0x33e')],'qgTjC':function(_0x1d6c71,_0x140622){return _0x2138ed[_0xf868('0x33f')](_0x1d6c71,_0x140622);},'wndSJ':_0x2138ed[_0xf868('0x340')],'NyUjE':function(_0x22fc05,_0x4c9f3a){return _0x2138ed[_0xf868('0x341')](_0x22fc05,_0x4c9f3a);},'zfYpN':function(_0x358466,_0x434abc){return _0x2138ed[_0xf868('0x342')](_0x358466,_0x434abc);}};function _0x3fbef2(){this['effectID']=new Map();}_0x3fbef2[_0xf868('0x2c')][_0xf868('0x166')]=function(_0x40043f,_0x1ba8b5){var _0x2cfd6b=_0x24eca0['eDXmJ'][_0xf868('0x5')]('|'),_0xadfee5=0x0;while(!![]){switch(_0x2cfd6b[_0xadfee5++]){case'0':cc['audioEngine']['setVolume'](_0xcdaf18,_0x5aae75);continue;case'1':var _0x3f6e44=_0x1ba8b5[_0xf868('0x101')](_0x24eca0[_0xf868('0x343')]);continue;case'2':this[_0xf868('0x344')][_0xf868('0xf3')](_0x40043f,_0xcdaf18);continue;case'3':var _0x5e01ec=_0x1ba8b5[_0xf868('0x101')](_0x24eca0['LhnXn']);continue;case'4':_0x24eca0[_0xf868('0x345')](cc[_0xf868('0x32b')][_0xf868('0x333')](_0x3fda7f),cc[_0xf868('0x32b')][_0xf868('0x336')][_0xf868('0x346')])?_0x49614b=![]:_0x49614b=!![];continue;case'5':var _0x49614b;continue;case'6':if(_0x24eca0[_0xf868('0x347')](_0x3f6e44,_0x29b3c2[_0xf868('0x75')][_0xf868('0x10d')][_0xf868('0x10b')])&&_0x49614b)return;continue;case'7':var _0x5aae75=_0x1ba8b5[_0xf868('0x101')](_0x24eca0[_0xf868('0x348')]);continue;case'8':var _0xcdaf18=cc[_0xf868('0x32b')][_0xf868('0x349')](_0x104edd,_0x5e01ec);continue;case'9':if(!_0x29b3c2[_0xf868('0x247')][_0xf868('0xd0')][_0xf868('0x2a2')]['has'](_0x40043f)){_0x29b3c2['ErrorManager'][_0xf868('0xd0')][_0xf868('0xa1')](_0x29b3c2[_0xf868('0x75')][_0xf868('0x74')][_0xf868('0x46')],_0x24eca0[_0xf868('0x34a')](_0x40043f,_0x24eca0['wndSJ']));return;}continue;case'10':if(_0x24eca0[_0xf868('0x34b')](_0x3f6e44,_0x29b3c2[_0xf868('0x75')]['AudioStateType'][_0xf868('0x105')])&&_0x49614b){cc[_0xf868('0x32b')][_0xf868('0x334')](_0x3fda7f);}continue;case'11':var _0x3fda7f=this[_0xf868('0x344')]['get'](_0x40043f);continue;case'12':var _0x104edd=_0x29b3c2[_0xf868('0x247')][_0xf868('0xd0')]['musicRes'][_0xf868('0x101')](_0x40043f);continue;}break;}};_0x3fbef2['prototype'][_0xf868('0x334')]=function(_0x3eb5c3){if(!this[_0xf868('0x344')][_0xf868('0xff')](_0x3eb5c3)){return;}cc[_0xf868('0x32b')]['stop'](this[_0xf868('0x344')][_0xf868('0x101')](_0x3eb5c3));this['effectID'][_0xf868('0x197')](_0x3eb5c3);};_0x3fbef2[_0xf868('0x2c')]['stopAll']=function(){var _0xfd78e9,_0x46a4ae;try{for(var _0x3aa7f1=_0x24eca0[_0xf868('0x34c')](__values,this[_0xf868('0x344')][_0xf868('0x2c1')]()),_0x53e82b=_0x3aa7f1['next']();!_0x53e82b['done'];_0x53e82b=_0x3aa7f1[_0xf868('0xa')]()){var _0x4d5961=_0x53e82b[_0xf868('0xc')];cc[_0xf868('0x32b')][_0xf868('0x334')](this['effectID'][_0xf868('0x101')](_0x4d5961));}}catch(_0x2acd25){_0xfd78e9={'error':_0x2acd25};}finally{try{if(_0x53e82b&&!_0x53e82b[_0xf868('0xb')]&&(_0x46a4ae=_0x3aa7f1[_0xf868('0x3')]))_0x46a4ae[_0xf868('0x7')](_0x3aa7f1);}finally{if(_0xfd78e9)throw _0xfd78e9[_0xf868('0xd')];}}this[_0xf868('0x344')][_0xf868('0x318')]();};return _0x3fbef2;}();_0x29b3c2['EffectController']=_0x3fbef2;}(fcc||(fcc={})));var fcc;(function(_0x338378){var _0x442ed4={'eGxyW':_0xf868('0x34d'),'UQPNY':function(_0x4676f6,_0x3248ff){return _0x4676f6===_0x3248ff;},'jOmAB':function(_0x4f2211,_0x3597ce){return _0x4f2211===_0x3597ce;},'qBVGT':'loop','RtAtw':_0xf868('0x33b'),'PsrDc':_0xf868('0x326'),'GrhhB':'2|6|4|7|5|0|3|1'};var _0x11eed9=function(){var _0x455fff={'jLKaa':_0xf868('0x339'),'jzFJK':_0x442ed4[_0xf868('0x34e')],'UspEs':_0x442ed4[_0xf868('0x34f')],'JtGdA':_0x442ed4[_0xf868('0x350')],'gWjNS':function(_0x52c1b5,_0x7cbb23){return _0x442ed4[_0xf868('0x351')](_0x52c1b5,_0x7cbb23);}};function _0x11eed9(_0x50520b,_0xf44c74){var _0x3e2e38=_0x442ed4[_0xf868('0x352')][_0xf868('0x5')]('|'),_0x114c36=0x0;while(!![]){switch(_0x3e2e38[_0x114c36++]){case'0':this['musicController']=new _0x338378['MusicController']();continue;case'1':this['musicVolume']=this[_0xf868('0x76')]['musicVolume'];continue;case'2':this['initializeData']();continue;case'3':this[_0xf868('0x353')]=this[_0xf868('0x76')][_0xf868('0x353')];continue;case'4':this[_0xf868('0x354')]=new _0x338378['EffectController']();continue;case'5':this[_0xf868('0x33b')]=![];continue;case'6':this[_0xf868('0x355')]=this[_0xf868('0x76')][_0xf868('0x229')];continue;case'7':this[_0xf868('0x339')]=![];continue;case'8':this[_0xf868('0x76')]=_0xf44c74;continue;case'9':this[_0xf868('0x356')]=new Map();continue;case'10':this[_0xf868('0x357')]=new Map();continue;case'11':this[_0xf868('0x358')]=_0x50520b;continue;case'12':this[_0xf868('0x359')]=this[_0xf868('0x76')][_0xf868('0x228')];continue;}break;}}_0x11eed9[_0xf868('0x2c')][_0xf868('0x35a')]=function(){this['musicNormalData']=new Map();this[_0xf868('0x35b')]=new Map();this[_0xf868('0x35c')][_0xf868('0xf3')](_0xf868('0x326'),this[_0xf868('0x226')]);this['musicNormalData'][_0xf868('0xf3')](_0x455fff[_0xf868('0x35d')],this[_0xf868('0x339')]);this[_0xf868('0x35b')][_0xf868('0xf3')](_0x455fff[_0xf868('0x35e')],_0x338378[_0xf868('0x75')][_0xf868('0x10d')]['NOT_PLAYING']);this[_0xf868('0x35b')][_0xf868('0xf3')](_0x455fff[_0xf868('0x35f')],this[_0xf868('0x353')]);this['effectNormalData'][_0xf868('0xf3')](_0xf868('0x339'),this[_0xf868('0x339')]);};_0x11eed9[_0xf868('0x2c')]['settingMusic']=function(_0x3abe5d,_0x438fd4,_0x17d58a){var _0x269451=_0xf868('0x360')[_0xf868('0x5')]('|'),_0x368535=0x0;while(!![]){switch(_0x269451[_0x368535++]){case'0':if(_0x442ed4[_0xf868('0x361')](_0x17d58a,void 0x0)){_0x17d58a=this[_0xf868('0x339')];}continue;case'1':var _0x3c5864=new Map();continue;case'2':if(_0x442ed4['jOmAB'](_0x438fd4,void 0x0)){_0x438fd4=this['musicVolume'];}continue;case'3':_0x3c5864['set'](_0xf868('0x326'),_0x438fd4);continue;case'4':this[_0xf868('0x357')][_0xf868('0xf3')](_0x3abe5d,_0x3c5864);continue;case'5':_0x3c5864['set'](_0x442ed4[_0xf868('0x362')],_0x17d58a);continue;}break;}};_0x11eed9[_0xf868('0x2c')][_0xf868('0x363')]=function(_0x5a8f12,_0x2a1ca,_0x448402,_0x4b3710){var _0x455e24=_0x455fff[_0xf868('0x364')][_0xf868('0x5')]('|'),_0xcab31c=0x0;while(!![]){switch(_0x455e24[_0xcab31c++]){case'0':_0x2b17ee['set'](_0x455fff[_0xf868('0x35f')],_0x448402);continue;case'1':this[_0xf868('0x356')][_0xf868('0xf3')](_0x5a8f12,_0x2b17ee);continue;case'2':if(_0x455fff[_0xf868('0x365')](_0x2a1ca,void 0x0)){_0x2a1ca=_0x338378[_0xf868('0x75')][_0xf868('0x10d')]['NOT_PLAYING'];}continue;case'3':_0x2b17ee[_0xf868('0xf3')](_0x455fff['jLKaa'],_0x4b3710);continue;case'4':if(_0x4b3710===void 0x0){_0x4b3710=this[_0xf868('0x339')];}continue;case'5':_0x2b17ee[_0xf868('0xf3')]('canSuperimpose',_0x2a1ca);continue;case'6':if(_0x448402===void 0x0){_0x448402=this[_0xf868('0x226')];}continue;case'7':var _0x2b17ee=new Map();continue;}break;}};_0x11eed9[_0xf868('0x2c')][_0xf868('0x366')]=function(_0x414351){if(!_0x414351[_0xf868('0xd9')]())return;if(this[_0xf868('0x358')][_0xf868('0x355')])return;if(!this[_0xf868('0x357')]['has'](_0x414351)){this[_0xf868('0x357')]['set'](_0x414351,this[_0xf868('0x35c')]);this[_0xf868('0x367')][_0xf868('0x166')](_0x414351,this[_0xf868('0x35c')]);}else{this[_0xf868('0x367')][_0xf868('0x166')](_0x414351,this['musicData'][_0xf868('0x101')](_0x414351));}};_0x11eed9[_0xf868('0x2c')][_0xf868('0x368')]=function(_0x1d36e7){if(!_0x1d36e7[_0xf868('0xd9')]())return;if(this[_0xf868('0x358')][_0xf868('0x359')])return;if(!this['effectData'][_0xf868('0xff')](_0x1d36e7)){this[_0xf868('0x356')]['set'](_0x1d36e7,this[_0xf868('0x35b')]);this[_0xf868('0x354')][_0xf868('0x166')](_0x1d36e7,this[_0xf868('0x35b')]);}else{this[_0xf868('0x354')][_0xf868('0x166')](_0x1d36e7,this[_0xf868('0x356')][_0xf868('0x101')](_0x1d36e7));}};_0x11eed9[_0xf868('0x2c')][_0xf868('0x369')]=function(){this[_0xf868('0x367')][_0xf868('0x334')]();};_0x11eed9[_0xf868('0x2c')]['musicPause']=function(){this['musicController'][_0xf868('0x335')]();};_0x11eed9['prototype'][_0xf868('0x36a')]=function(_0x1a36e9){this['effectController']['stop'](_0x1a36e9);};_0x11eed9[_0xf868('0x2c')][_0xf868('0x36b')]=function(){this[_0xf868('0x354')]['stopAll']();};_0x11eed9[_0xf868('0x2c')][_0xf868('0x36c')]=function(_0x261c32){return this[_0xf868('0x357')]['get'](_0x261c32);};_0x11eed9[_0xf868('0x2c')][_0xf868('0x36d')]=function(_0x22ae62){return this[_0xf868('0x356')][_0xf868('0x101')](_0x22ae62);};return _0x11eed9;}();_0x338378['AudioFactory']=_0x11eed9;}(fcc||(fcc={})));var fcc;(function(_0x277903){var _0x4d77b8={'RfvEa':'該類尚未實例化','nJvlw':function(_0x5e491b,_0x225ea7){return _0x5e491b===_0x225ea7;},'IhoRo':function(_0x3431c8,_0xca897a){return _0x3431c8+_0xca897a;},'PFRuo':'\x20使用疊加效果時不建議使用循環撥放','veKCC':'instance','Ysiaa':'effectOnMute','BkIdG':_0xf868('0x355'),'cWdsg':function(_0x4c5ff1,_0x439f19,_0x4fec1a){return _0x4c5ff1(_0x439f19,_0x4fec1a);},'kCNKy':function(_0x591bb0,_0x19700b){return _0x591bb0<_0x19700b;},'eygJK':function(_0x2a0e7e,_0x2843be){return _0x2a0e7e(_0x2843be);},'wWgIO':function(_0x3237e6,_0x42bfde){return _0x3237e6<_0x42bfde;},'JGBmQ':function(_0x1d9b5f,_0x259622){return _0x1d9b5f(_0x259622);}};var _0x5a82c8=function(){function _0x5a82c8(_0x2c3f30){this[_0xf868('0x76')]=_0x2c3f30;this[_0xf868('0x2f1')]=new _0x277903[(_0xf868('0x36e'))](this,_0x2c3f30);this[_0xf868('0x36f')]=this[_0xf868('0x76')]['isEffectOnMute'];this[_0xf868('0x370')]=this[_0xf868('0x76')][_0xf868('0x229')];}_0x5a82c8[_0xf868('0xdb')]=function(_0xcc443d){if(!this[_0xf868('0xdc')]){this[_0xf868('0xdc')]=new _0x5a82c8(_0xcc443d);_0x277903['audioMgr']=this[_0xf868('0xdc')];}};Object[_0xf868('0xde')](_0x5a82c8,_0x4d77b8[_0xf868('0x371')],{'get':function(){if(!this[_0xf868('0xdc')]){_0x277903[_0xf868('0xa5')]['instance']['executeError'](_0x277903[_0xf868('0x75')][_0xf868('0x74')][_0xf868('0x46')],_0x4d77b8[_0xf868('0x372')]);return;}return this[_0xf868('0xdc')];},'enumerable':![],'configurable':!![]});_0x5a82c8['prototype'][_0xf868('0x373')]=function(_0x2e5c86,_0x3e023e,_0x2be3eb){this[_0xf868('0x2f1')][_0xf868('0x373')](_0x2e5c86,_0x3e023e,_0x2be3eb);return this;};_0x5a82c8[_0xf868('0x2c')][_0xf868('0x363')]=function(_0x18665d,_0x10514f,_0x2358f2,_0x3ec7ab){if(_0x4d77b8[_0xf868('0x374')](_0x10514f,_0x277903[_0xf868('0x75')]['AudioStateType'][_0xf868('0x106')])&&_0x3ec7ab){_0x277903[_0xf868('0xa5')][_0xf868('0xd0')][_0xf868('0xa1')](_0x277903[_0xf868('0x75')][_0xf868('0x74')]['AUDIO_FW'],_0x4d77b8['IhoRo'](_0x18665d,_0x4d77b8[_0xf868('0x375')]));}this['factory']['settingEffect'](_0x18665d,_0x10514f,_0x2358f2,_0x3ec7ab);return this;};_0x5a82c8['prototype'][_0xf868('0x366')]=function(_0x24444a){this[_0xf868('0x2f1')]['musicPlay'](_0x24444a);};_0x5a82c8[_0xf868('0x2c')][_0xf868('0x368')]=function(_0x16d6ad){this[_0xf868('0x2f1')][_0xf868('0x368')](_0x16d6ad);};_0x5a82c8[_0xf868('0x2c')][_0xf868('0x369')]=function(){this[_0xf868('0x2f1')]['musicStop']();};_0x5a82c8[_0xf868('0x2c')][_0xf868('0x376')]=function(){this[_0xf868('0x2f1')][_0xf868('0x376')]();};_0x5a82c8[_0xf868('0x2c')][_0xf868('0x36a')]=function(_0x4074dd){this[_0xf868('0x2f1')]['effectStop'](_0x4074dd);};_0x5a82c8[_0xf868('0x2c')][_0xf868('0x36b')]=function(){this[_0xf868('0x2f1')][_0xf868('0x36b')]();};_0x5a82c8[_0xf868('0x2c')][_0xf868('0x36c')]=function(_0x3c695d){return this[_0xf868('0x2f1')][_0xf868('0x36c')](_0x3c695d);};_0x5a82c8['prototype'][_0xf868('0x36d')]=function(_0x1e51c8){return this[_0xf868('0x2f1')][_0xf868('0x36d')](_0x1e51c8);};_0x5a82c8[_0xf868('0x2c')]['updateEffectOnMute']=function(){this[_0xf868('0x36f')]=!this[_0xf868('0x36f')];if(this[_0xf868('0x36f')]){this[_0xf868('0x2f1')]['effectStopAll']();}return this['_effectOnMute'];};_0x5a82c8['prototype'][_0xf868('0x377')]=function(){this['_musicOnMute']=!this[_0xf868('0x370')];if(this[_0xf868('0x370')]){this[_0xf868('0x376')]();}return this[_0xf868('0x370')];};Object[_0xf868('0xde')](_0x5a82c8[_0xf868('0x2c')],_0x4d77b8[_0xf868('0x378')],{'get':function(){return this[_0xf868('0x36f')];},'enumerable':![],'configurable':!![]});Object[_0xf868('0xde')](_0x5a82c8[_0xf868('0x2c')],_0x4d77b8[_0xf868('0x379')],{'get':function(){return this[_0xf868('0x370')];},'enumerable':![],'configurable':!![]});return _0x5a82c8;}();_0x277903[_0xf868('0x245')]=_0x5a82c8;function _0x477e47(_0x589d16){var _0x2c2c4f={'Itvfj':function(_0x13c8c0,_0x4ca701){return _0x13c8c0<_0x4ca701;},'FfzcQ':function(_0x507293,_0x2eda59,_0x352cff){return _0x4d77b8[_0xf868('0x37a')](_0x507293,_0x2eda59,_0x352cff);}};return function(_0x5dca18,_0x317cea,_0x240ade){var _0x5e0a85={'izJXi':function(_0x21169e,_0x30f8e0){return _0x2c2c4f[_0xf868('0x37b')](_0x21169e,_0x30f8e0);},'Npjio':function(_0x1c7c99,_0x9d421b,_0x3b1191){return _0x2c2c4f[_0xf868('0x37c')](_0x1c7c99,_0x9d421b,_0x3b1191);},'skADA':function(_0x158603,_0x275fe2){return _0x158603(_0x275fe2);}};_0x240ade[_0xf868('0x37d')]=!![];var _0x562968=_0x240ade['value'];_0x240ade[_0xf868('0xc')]=function(){var _0x358d9d=[];for(var _0x2bcc1e=0x0;_0x5e0a85[_0xf868('0x37e')](_0x2bcc1e,arguments[_0xf868('0xe')]);_0x2bcc1e++){_0x358d9d[_0x2bcc1e]=arguments[_0x2bcc1e];}_0x5a82c8[_0xf868('0xd0')][_0xf868('0x366')](_0x589d16);return _0x562968[_0xf868('0x7')][_0xf868('0x151')](_0x562968,_0x5e0a85[_0xf868('0x37f')](__spreadArray,[this],_0x5e0a85[_0xf868('0x380')](__read,_0x358d9d)));};};}_0x277903['Music']=_0x477e47;function _0x183742(){var _0x4be7da={'nGtfu':function(_0xa62d18,_0x2d095c){return _0x4d77b8[_0xf868('0x381')](_0xa62d18,_0x2d095c);},'ZOibY':function(_0x49e3a,_0x5b528e){return _0x4d77b8[_0xf868('0x382')](_0x49e3a,_0x5b528e);}};return function(_0x25fc16,_0x15dac9,_0x442e6e){_0x442e6e[_0xf868('0x37d')]=!![];var _0x3ac43f=_0x442e6e[_0xf868('0xc')];_0x442e6e[_0xf868('0xc')]=function(){var _0xf9e3f4=[];for(var _0x25890d=0x0;_0x4be7da['nGtfu'](_0x25890d,arguments[_0xf868('0xe')]);_0x25890d++){_0xf9e3f4[_0x25890d]=arguments[_0x25890d];}_0x5a82c8[_0xf868('0xd0')][_0xf868('0x369')]();return _0x3ac43f[_0xf868('0x7')]['apply'](_0x3ac43f,__spreadArray([this],_0x4be7da[_0xf868('0x383')](__read,_0xf9e3f4)));};};}_0x277903['MusicStop']=_0x183742;function _0x32c595(){var _0x6c37a1=[];for(var _0x552d2a=0x0;_0x4d77b8['wWgIO'](_0x552d2a,arguments[_0xf868('0xe')]);_0x552d2a++){_0x6c37a1[_0x552d2a]=arguments[_0x552d2a];}return function(_0x17e97b,_0x3a3b01,_0x41fdbf){var _0x506460={'Lqrtr':function(_0x2a7a0e,_0xcf6805){return _0x4d77b8[_0xf868('0x384')](_0x2a7a0e,_0xcf6805);},'QxgFW':function(_0x4e7dc6,_0x15ff56,_0xce8e8f){return _0x4e7dc6(_0x15ff56,_0xce8e8f);},'TbsaJ':function(_0x28cf8f,_0x3217b6){return _0x4d77b8['JGBmQ'](_0x28cf8f,_0x3217b6);}};_0x41fdbf['enumerable']=!![];var _0x1dd7c4=_0x41fdbf[_0xf868('0xc')];_0x41fdbf[_0xf868('0xc')]=function(){var _0x290195=[];for(var _0x552d2a=0x0;_0x506460['Lqrtr'](_0x552d2a,arguments[_0xf868('0xe')]);_0x552d2a++){_0x290195[_0x552d2a]=arguments[_0x552d2a];}_0x6c37a1[_0xf868('0x385')](function(_0x6c37a1){_0x5a82c8['instance'][_0xf868('0x368')](_0x6c37a1);});return _0x1dd7c4['call'][_0xf868('0x151')](_0x1dd7c4,_0x506460[_0xf868('0x386')](__spreadArray,[this],_0x506460[_0xf868('0x387')](__read,_0x290195)));};};}_0x277903[_0xf868('0x388')]=_0x32c595;function _0x5daa3a(){var _0x2d200c={'wWaxY':function(_0x146b61,_0x191ff9){return _0x146b61<_0x191ff9;},'tHXpv':function(_0x838853,_0x3be6bf){return _0x838853(_0x3be6bf);}};var _0xaa894c=[];for(var _0x554269=0x0;_0x4d77b8[_0xf868('0x384')](_0x554269,arguments[_0xf868('0xe')]);_0x554269++){_0xaa894c[_0x554269]=arguments[_0x554269];}return function(_0x444f6e,_0x370b23,_0x3245e3){var _0x264feb={'QNBKW':function(_0x439094,_0x22c431){return _0x2d200c[_0xf868('0x389')](_0x439094,_0x22c431);},'RYOdR':function(_0xc36788,_0x356f39,_0x36b370){return _0xc36788(_0x356f39,_0x36b370);},'UPUOf':function(_0x14db8c,_0x420eea){return _0x2d200c['tHXpv'](_0x14db8c,_0x420eea);}};_0x3245e3['enumerable']=!![];var _0x3591d5=_0x3245e3[_0xf868('0xc')];_0x3245e3[_0xf868('0xc')]=function(){var _0xde8ecf=[];for(var _0x554269=0x0;_0x264feb[_0xf868('0x38a')](_0x554269,arguments[_0xf868('0xe')]);_0x554269++){_0xde8ecf[_0x554269]=arguments[_0x554269];}_0xaa894c[_0xf868('0x385')](function(_0xaa894c){_0x5a82c8[_0xf868('0xd0')][_0xf868('0x36a')](_0xaa894c);});return _0x3591d5[_0xf868('0x7')]['apply'](_0x3591d5,_0x264feb['RYOdR'](__spreadArray,[this],_0x264feb[_0xf868('0x38b')](__read,_0xde8ecf)));};};}_0x277903[_0xf868('0x38c')]=_0x5daa3a;}(fcc||(fcc={})));var fcc;(function(_0x170458){var _0x4c9dee={'ravoZ':_0xf868('0x38d'),'kqBQr':_0xf868('0xf7'),'AHfwc':_0xf868('0x38e'),'qirgE':function(_0x1bf14b,_0x2b0ae9){return _0x1bf14b!=_0x2b0ae9;},'BEbuT':function(_0x1b77a5,_0x3436e3){return _0x1b77a5(_0x3436e3);},'SKgBI':function(_0x5894e6,_0x4dbd50){return _0x5894e6(_0x4dbd50);},'KbrtJ':_0xf868('0xd0'),'yblJz':_0xf868('0x38f'),'lYsIl':_0xf868('0x390')};var _0x566b7b={'fontSize':0x24,'lineHeight':0x2e,'textScale':{'default':0x1,'title':1.2,'text':0.8},'fontFamily':'微軟正黑體'};var _0x2d3731={'fontSize':0x24,'lineHeight':0x2e,'textScale':{'default':0x1,'title':1.2,'text':0.8},'fontFamily':_0x4c9dee[_0xf868('0x391')]};var _0x27687c={'fontSize':0x1e,'lineHeight':0x28,'textScale':{'default':0x1,'title':1.2,'text':0.8},'fontFamily':_0x4c9dee[_0xf868('0x392')]};var _0x11662b={'fontSize':0x1e,'lineHeight':0x28,'textScale':{'default':0x1,'title':1.2,'text':0.8},'fontFamily':_0x4c9dee[_0xf868('0x392')]};var _0x7964d4={'fontSize':0x1e,'lineHeight':0x2e,'textScale':{'default':0x1,'title':1.2,'text':0.8},'fontFamily':_0x4c9dee[_0xf868('0x392')]};var _0x33ad95={'fontSize':0x1e,'lineHeight':0x28,'textScale':{'default':0x1,'title':1.2,'text':0.8},'fontFamily':_0x4c9dee[_0xf868('0x392')]};var _0x48d847={'fontSize':0x1e,'lineHeight':0x28,'textScale':{'default':0x1,'title':1.2,'text':0.8},'fontFamily':_0xf868('0x390')};var _0x101c0b=function(){var _0x110255={'JWUka':_0xf868('0x393')};function _0x101c0b(_0x231744){var _0x3cd401=_0x4c9dee[_0xf868('0x394')][_0xf868('0x5')]('|'),_0x18fc1c=0x0;while(!![]){switch(_0x3cd401[_0x18fc1c++]){case'0':this[_0xf868('0x395')]=this['configManager']['language'];continue;case'1':this[_0xf868('0x396')]();continue;case'2':this[_0xf868('0x76')]=_0x231744;continue;case'3':this[_0xf868('0x397')]=new Array();continue;case'4':this[_0xf868('0x398')]=new Map();continue;case'5':this[_0xf868('0x399')]=new Map();continue;}break;}}_0x101c0b['setInstance']=function(_0x3a7807){if(!this['_instance']){this[_0xf868('0xdc')]=new _0x101c0b(_0x3a7807);_0x170458[_0xf868('0x39a')]=this[_0xf868('0xdc')];}};Object[_0xf868('0xde')](_0x101c0b,_0x4c9dee[_0xf868('0x39b')],{'get':function(){if(!this['_instance']){_0x170458[_0xf868('0xa5')][_0xf868('0xd0')][_0xf868('0xa1')](_0x170458['type'][_0xf868('0x74')][_0xf868('0x46')],_0x4c9dee['kqBQr']);return;}return this[_0xf868('0xdc')];},'enumerable':![],'configurable':!![]});_0x101c0b['prototype'][_0xf868('0x396')]=function(){var _0x255bbf=_0x4c9dee[_0xf868('0x39c')][_0xf868('0x5')]('|'),_0x20bcb6=0x0;while(!![]){switch(_0x255bbf[_0x20bcb6++]){case'0':this[_0xf868('0x398')][_0xf868('0xf3')](_0x170458[_0xf868('0x75')][_0xf868('0x236')][_0xf868('0x39d')],_0x2d3731);continue;case'1':this['_style'][_0xf868('0xf3')](_0x170458[_0xf868('0x75')]['LanguageType']['INDONESIA'],_0x33ad95);continue;case'2':this[_0xf868('0x398')][_0xf868('0xf3')](_0x170458[_0xf868('0x75')]['LanguageType'][_0xf868('0x212')],_0x7964d4);continue;case'3':this[_0xf868('0x398')]['set'](_0x170458[_0xf868('0x75')][_0xf868('0x236')][_0xf868('0x217')],_0x48d847);continue;case'4':this[_0xf868('0x398')][_0xf868('0xf3')](_0x170458[_0xf868('0x75')][_0xf868('0x236')][_0xf868('0x21e')],_0x11662b);continue;case'5':this[_0xf868('0x398')][_0xf868('0xf3')](_0x170458['type'][_0xf868('0x236')][_0xf868('0x21c')],_0x27687c);continue;case'6':this[_0xf868('0x398')]['set'](_0x170458['type']['LanguageType'][_0xf868('0x211')],_0x566b7b);continue;}break;}};_0x101c0b[_0xf868('0x2c')][_0xf868('0x39e')]=function(_0x21710e,_0x1273ad){this['_style'][_0xf868('0xf3')](_0x21710e,_0x1273ad);};_0x101c0b[_0xf868('0x2c')][_0xf868('0x39f')]=function(_0x587a17){var _0x13565a,_0xedc6c5,_0x379ddc,_0x3fbb43;if(_0x4c9dee[_0xf868('0x3a0')](this[_0xf868('0x395')],_0x587a17)){this[_0xf868('0x395')]=_0x587a17;try{for(var _0x6db1e9=_0x4c9dee['BEbuT'](__values,this[_0xf868('0x397')]),_0x51ffbd=_0x6db1e9[_0xf868('0xa')]();!_0x51ffbd[_0xf868('0xb')];_0x51ffbd=_0x6db1e9[_0xf868('0xa')]()){var _0x411303=_0x51ffbd['value'];try{for(var _0x272424=(_0x379ddc=void 0x0,__values(_0x411303[_0xf868('0x2c1')]())),_0x1ccee6=_0x272424[_0xf868('0xa')]();!_0x1ccee6[_0xf868('0xb')];_0x1ccee6=_0x272424[_0xf868('0xa')]()){var _0x49732c=_0x1ccee6[_0xf868('0xc')];var _0x5c1924=_0x411303['get'](_0x49732c);this[_0xf868('0x3a1')](_0x49732c,_0x5c1924);}}catch(_0x55de09){_0x379ddc={'error':_0x55de09};}finally{try{if(_0x1ccee6&&!_0x1ccee6[_0xf868('0xb')]&&(_0x3fbb43=_0x272424[_0xf868('0x3')]))_0x3fbb43[_0xf868('0x7')](_0x272424);}finally{if(_0x379ddc)throw _0x379ddc[_0xf868('0xd')];}}}}catch(_0x3215b8){_0x13565a={'error':_0x3215b8};}finally{try{if(_0x51ffbd&&!_0x51ffbd['done']&&(_0xedc6c5=_0x6db1e9[_0xf868('0x3')]))_0xedc6c5[_0xf868('0x7')](_0x6db1e9);}finally{if(_0x13565a)throw _0x13565a[_0xf868('0xd')];}}this[_0xf868('0x3a2')](![]);}};_0x101c0b[_0xf868('0x2c')][_0xf868('0x3a3')]=function(){if(!this[_0xf868('0x3a4')]){this['reTakeLanguageBuffer']();}};_0x101c0b[_0xf868('0x2c')][_0xf868('0x3a5')]=function(){return this[_0xf868('0x395')];};_0x101c0b['prototype'][_0xf868('0x3a6')]=function(_0x2703ed){return this[_0xf868('0x3a4')][_0x2703ed];};_0x101c0b[_0xf868('0x2c')][_0xf868('0x3a7')]=function(){return this[_0xf868('0x3a4')];};_0x101c0b[_0xf868('0x2c')][_0xf868('0x3a8')]=function(_0x40e983){try{if(_0x40e983){this[_0xf868('0x3a4')]=window['language_Mode'][_0x40e983];}else{this[_0xf868('0x3a4')]=window['language_Mode'][this[_0xf868('0x395')]];}}catch(_0x79acc){console[_0xf868('0x8d')](_0x110255[_0xf868('0x3a9')],_0x79acc);}};_0x101c0b[_0xf868('0x2c')]['removeStringBuffer']=function(){};_0x101c0b['prototype'][_0xf868('0x3a1')]=function(_0x557e04,_0x170f76){if(_0x170f76){_0x557e04[_0xf868('0x91')]=this[_0xf868('0x3a6')](_0x170f76);}this['_nowLanguageLabels'][_0xf868('0xf3')](_0x557e04,_0x170f76);return this;};_0x101c0b[_0xf868('0x2c')][_0xf868('0x3a2')]=function(_0x171bd5){var _0x24f459,_0x53ab83;var _0x315fe4=this['_nowLang'];if(!this[_0xf868('0x398')][_0xf868('0xff')](this[_0xf868('0x395')])){_0x315fe4=_0x170458[_0xf868('0x75')][_0xf868('0x236')][_0xf868('0x21c')];}var _0x102d6a=this['_style']['get'](_0x315fe4)[_0xf868('0x3aa')];var _0x5a3994=this[_0xf868('0x398')]['get'](_0x315fe4)[_0xf868('0x3ab')];var _0x2b51d4=this[_0xf868('0x398')][_0xf868('0x101')](_0x315fe4)[_0xf868('0x3ac')];try{for(var _0x3b9623=_0x4c9dee['SKgBI'](__values,this[_0xf868('0x399')][_0xf868('0x2c1')]()),_0x3a31f8=_0x3b9623[_0xf868('0xa')]();!_0x3a31f8[_0xf868('0xb')];_0x3a31f8=_0x3b9623[_0xf868('0xa')]()){var _0x927efd=_0x3a31f8[_0xf868('0xc')];_0x927efd[_0xf868('0x3aa')]=_0x102d6a;_0x927efd[_0xf868('0x3ab')]=_0x5a3994;_0x927efd[_0xf868('0x3ac')]=_0x2b51d4;}}catch(_0x218b0b){_0x24f459={'error':_0x218b0b};}finally{try{if(_0x3a31f8&&!_0x3a31f8[_0xf868('0xb')]&&(_0x53ab83=_0x3b9623[_0xf868('0x3')]))_0x53ab83[_0xf868('0x7')](_0x3b9623);}finally{if(_0x24f459)throw _0x24f459[_0xf868('0xd')];}}if(_0x171bd5)this[_0xf868('0x397')][_0xf868('0x2da')](this['_nowLanguageLabels']);this[_0xf868('0x399')][_0xf868('0x318')]();};return _0x101c0b;}();_0x170458[_0xf868('0x246')]=_0x101c0b;}(fcc||(fcc={})));var fcc;(function(_0x3e85b9){var _0x5739e1=function(){var _0x30c127={'OisId':function(_0x7acf78,_0x33e9a8){return _0x7acf78+_0x33e9a8;}};function _0x5739e1(){this[_0xf868('0x3ad')]=new Map();}_0x5739e1['instance']=function(){if(!this[_0xf868('0xdc')]){this[_0xf868('0xdc')]=new _0x5739e1();}return this[_0xf868('0xdc')];};_0x5739e1[_0xf868('0x2c')][_0xf868('0x3ae')]=function(_0x2d78c5){if(!this[_0xf868('0x3ad')][_0xf868('0xff')](_0x2d78c5[_0xf868('0x3af')])){this[_0xf868('0x3ad')][_0xf868('0xf3')](_0x2d78c5[_0xf868('0x3af')],_0x2d78c5);}return this;};_0x5739e1[_0xf868('0x2c')]['getNotification']=function(_0xe2d2a){if(this[_0xf868('0x3ad')][_0xf868('0xff')](_0xe2d2a)){return this[_0xf868('0x3ad')][_0xf868('0x101')](_0xe2d2a);}else{_0x3e85b9[_0xf868('0xa5')][_0xf868('0xd0')][_0xf868('0xa1')](_0x3e85b9[_0xf868('0x75')][_0xf868('0x74')][_0xf868('0x5c')],_0x30c127['OisId'](_0xe2d2a,_0xf868('0x3b0')));return undefined;}};_0x5739e1[_0xf868('0x2c')][_0xf868('0x3b1')]=function(_0x53f08c){return this['notificationToMap'][_0xf868('0xff')](_0x53f08c);};_0x5739e1['prototype']['getAllNotifications']=function(){return this[_0xf868('0x3ad')];};return _0x5739e1;}();_0x3e85b9[_0xf868('0x1cc')]=_0x5739e1;}(fcc||(fcc={})));var FCC_VERSION=0.04;var fcc;(function(_0x77294e){_0x77294e['configMgr']=_0x77294e[_0xf868('0x255')][_0xf868('0xd0')];function _0xc98528(){return null;}_0x77294e['networkMgr']=_0xc98528;function _0x470a9c(){return _0x77294e['NotificationManager']['instance']();}_0x77294e[_0xf868('0x3b2')]=_0x470a9c;}(fcc||(fcc={})));globalThis[_0xf868('0x3b3')]=fcc;var fcc;(function(_0x23cc31){var _0x4b4723={'wrYmP':function(_0x504bea,_0x4d8f5a){return _0x504bea==_0x4d8f5a;}};var _0x460aca;(function(_0x460aca){var _0xc9ba1e={'pTAwG':function(_0x1e209f,_0x152899){return _0x4b4723[_0xf868('0x3b4')](_0x1e209f,_0x152899);}};var _0x3ae68c=function(){function _0x3ae68c(){}_0x3ae68c[_0xf868('0x3b5')]=function(_0x2fd7a7,_0x4140f2,_0x24d1f2,_0x2659b0){var _0xbd3ad=_0x24d1f2['node'];var _0x786df1=cc['js'][_0xf868('0x3b6')](_0x24d1f2);var _0x3a5dd0=new cc[(_0xf868('0x3b7'))][(_0xf868('0x3b8'))]();_0x3a5dd0[_0xf868('0x14a')]=_0xbd3ad;_0x3a5dd0[_0xf868('0x3b9')]=_0x786df1;_0x3a5dd0[_0xf868('0xd4')]=_0x4140f2;if(_0x2659b0||_0xc9ba1e[_0xf868('0x3ba')](_0x2659b0,0x0)){_0x3a5dd0['customEventData']=_0x2659b0;}_0x2fd7a7[_0xf868('0x3bb')][_0xf868('0x2da')](_0x3a5dd0);};_0x3ae68c[_0xf868('0x3bc')]=function(_0x1d14fc){_0x1d14fc[_0xf868('0x3bd')]=![];};_0x3ae68c[_0xf868('0x3be')]=function(_0x560e65){_0x560e65['interactable']=!![];};_0x3ae68c[_0xf868('0x3bf')]=function(_0x505526,_0x4be947,_0x4db60b,_0x5da3c2){_0x505526['on'](cc[_0xf868('0x3c0')][_0xf868('0x3c1')][_0xf868('0x3c2')],_0x4be947,_0x4db60b,_0x5da3c2);};_0x3ae68c[_0xf868('0x3c3')]=function(_0x1e43ef,_0x9912d6,_0x8e797f,_0x554f71){_0x1e43ef[_0xf868('0x158')](cc[_0xf868('0x3c0')]['EventType'][_0xf868('0x3c2')],_0x9912d6,_0x8e797f,_0x554f71);};return _0x3ae68c;}();_0x460aca['Button']=_0x3ae68c;}(_0x460aca=_0x23cc31[_0xf868('0x136')]||(_0x23cc31[_0xf868('0x136')]={})));}(fcc||(fcc={})));var fcc;(function(_0x4352e2){var _0x268605={'PTbYH':function(_0x480f5c,_0x49f680){return _0x480f5c<=_0x49f680;},'jZAnF':function(_0x5de090,_0x2af515){return _0x5de090<_0x2af515;},'kBwZv':function(_0xaed167,_0x363096){return _0xaed167+_0x363096;},'fdDqS':function(_0x222bd5,_0x4e7825){return _0x222bd5-_0x4e7825;},'JXKnC':function(_0x6e8f02,_0x3b5864){return _0x6e8f02-_0x3b5864;}};var _0x9fdf06;(function(_0x9fdf06){var _0xaed000={'SQVrA':function(_0x4e82a0,_0x4edc04){return _0x4e82a0<_0x4edc04;},'YAYAD':function(_0x5c34c6,_0x5cac32){return _0x268605[_0xf868('0x3c4')](_0x5c34c6,_0x5cac32);},'tQpZo':function(_0x474901,_0x1700b3){return _0x268605['jZAnF'](_0x474901,_0x1700b3);},'gLEFY':function(_0x48b9ec,_0x2aa5d7){return _0x268605[_0xf868('0x3c5')](_0x48b9ec,_0x2aa5d7);},'PhsDd':function(_0x58864d,_0x27d049){return _0x268605['fdDqS'](_0x58864d,_0x27d049);},'SGMUm':function(_0x251663,_0x53239c){return _0x268605[_0xf868('0x3c6')](_0x251663,_0x53239c);}};var _0xbbab99=function(){function _0xbbab99(){}_0xbbab99[_0xf868('0x3c7')]=function(_0xcdd203){var _0x292bae=new Map();for(var _0x3d1f9e=0x0;_0xaed000[_0xf868('0x3c8')](_0x3d1f9e,_0xcdd203[_0xf868('0x3c9')]);_0x3d1f9e++){var _0x2b569e=_0xcdd203['children'][_0x3d1f9e];for(var _0x26c9dd=0x0;_0xaed000['YAYAD'](_0x26c9dd,_0x2b569e[_0xf868('0x3c9')]);_0x26c9dd++){_0x292bae[_0xf868('0xf3')](_0xcdd203[_0xf868('0x3ca')][_0x3d1f9e][_0xf868('0x29e')],_0x2b569e);}}return _0x292bae;};_0xbbab99[_0xf868('0x3cb')]=function(_0x1f6785){var _0x552733=new Map();for(var _0x589ab0=0x0;_0xaed000[_0xf868('0x3cc')](_0x589ab0,_0x1f6785[_0xf868('0x3c9')]);_0x589ab0++){var _0x4799a9=_0x1f6785[_0xf868('0x3ca')][_0x589ab0];var _0x499ac6=_0x4799a9[_0xf868('0x3ca')][_0x589ab0]['name'];for(var _0x45d7d4=0x0;_0xaed000[_0xf868('0x3cd')](_0x45d7d4,_0x4799a9[_0xf868('0x3c9')]);_0x45d7d4++){if(_0x45d7d4==0x0){_0x552733[_0xf868('0xf3')](_0x4799a9[_0xf868('0x3ca')][_0x589ab0]['name'],_0x4799a9);}else{_0x499ac6+=_0xaed000[_0xf868('0x3ce')]('/',_0x4799a9[_0xf868('0x3ca')][_0xaed000[_0xf868('0x3cf')](_0x45d7d4,0x1)]['name']);_0x552733[_0xf868('0xf3')](_0x499ac6,_0x4799a9[_0xf868('0x3ca')][_0xaed000[_0xf868('0x3d0')](_0x45d7d4,0x1)]);_0x499ac6=_0x4799a9[_0xf868('0x3ca')][_0x589ab0][_0xf868('0x29e')];}}}return _0x552733;};return _0xbbab99;}();_0x9fdf06['Prefab']=_0xbbab99;}(_0x9fdf06=_0x4352e2['global']||(_0x4352e2[_0xf868('0x136')]={})));}(fcc||(fcc={})));var fcc;(function(_0xfd0342){var _0x37c10f={'poUHy':_0xf868('0x195')};var _0x2e7386;(function(_0x2e7386){var _0xee36e9={'SEUhJ':function(_0x5309c4,_0x2c7b4a){return _0x5309c4(_0x2c7b4a);},'ULlWl':_0x37c10f['poUHy']};var _0x2041e6=function(){var _0x4eab20={'yqbhI':function(_0x5cbac5,_0x2027f6,_0x239e4a){return _0x5cbac5(_0x2027f6,_0x239e4a);},'wAUlL':function(_0x18f60d,_0x51d082){return _0xee36e9[_0xf868('0x3d1')](_0x18f60d,_0x51d082);}};function _0x2041e6(_0x1c4e5e,_0xb28f8e){this[_0xf868('0x1b0')]=![];this[_0xf868('0x3d2')]=_0xb28f8e;this[_0xf868('0x3d3')]=_0x1c4e5e;}_0x2041e6[_0xf868('0x2c')][_0xf868('0x1b2')]=function(){var _0x243ed1;var _0xe21892=[];for(var _0x17d771=0x0;_0x17d771<arguments[_0xf868('0xe')];_0x17d771++){_0xe21892[_0x17d771]=arguments[_0x17d771];}(_0x243ed1=this[_0xf868('0x3d3')])[_0xf868('0x7')][_0xf868('0x151')](_0x243ed1,_0x4eab20['yqbhI'](__spreadArray,[this[_0xf868('0x3d2')]],_0x4eab20[_0xf868('0x3d4')](__read,_0xe21892)));};Object[_0xf868('0xde')](_0x2041e6[_0xf868('0x2c')],_0xee36e9[_0xf868('0x3d5')],{'get':function(){return this['_isPermanent'];},'set':function(_0x4bc1d7){this[_0xf868('0x1b0')]=_0x4bc1d7;},'enumerable':![],'configurable':!![]});return _0x2041e6;}();_0x2e7386[_0xf868('0x3d6')]=_0x2041e6;}(_0x2e7386=_0xfd0342['ABS']||(_0xfd0342[_0xf868('0x19c')]={})));}(fcc||(fcc={})));var fcc;(function(_0x19b436){var _0x289c41=function(){function _0x289c41(){}return _0x289c41;}();_0x19b436[_0xf868('0x3d7')]=_0x289c41;}(fcc||(fcc={})));var fcc;(function(_0x4bc024){var _0x19123f={'EdScU':_0xf868('0x3d8'),'IvfBB':_0xf868('0x327'),'CcvmT':_0xf868('0x3d9'),'EGqFT':_0xf868('0x3da')};var _0x19bc71;(function(_0x19bc71){var _0x72e81c={'cLgUH':_0x19123f[_0xf868('0x3db')],'kJlRF':_0x19123f[_0xf868('0x3dc')],'SmUjn':_0x19123f[_0xf868('0x3dd')],'TzcFY':'FREE','fuBBU':_0x19123f[_0xf868('0x3de')]};var _0x38f3dc;(function(_0x38f3dc){_0x38f3dc[_0x72e81c['cLgUH']]='STANDBY';_0x38f3dc[_0x72e81c[_0xf868('0x3df')]]=_0xf868('0x327');_0x38f3dc[_0x72e81c[_0xf868('0x3e0')]]=_0x72e81c[_0xf868('0x3e0')];}(_0x38f3dc=_0x19bc71[_0xf868('0x15f')]||(_0x19bc71[_0xf868('0x15f')]={})));var _0x7f816;(function(_0x7f816){_0x7f816[_0x72e81c[_0xf868('0x3e1')]]=_0x72e81c[_0xf868('0x3e1')];_0x7f816[_0xf868('0x3da')]=_0x72e81c['fuBBU'];}(_0x7f816=_0x19bc71['ProcessType']||(_0x19bc71['ProcessType']={})));}(_0x19bc71=_0x4bc024[_0xf868('0x75')]||(_0x4bc024[_0xf868('0x75')]={})));}(fcc||(fcc={})));var fcc;(function(_0x24ae4c){var _0x1be77e={'RevtB':_0xf868('0x3e2'),'luNTA':function(_0x1d1eb2,_0x444421){return _0x1d1eb2(_0x444421);},'nqGQU':_0xf868('0x3e3'),'chWoK':function(_0x4b0116,_0x1a8671,_0x20c6de){return _0x4b0116(_0x1a8671,_0x20c6de);}};var _0x28c8ba=function(){var _0xe05642={'wDpZk':function(_0x50fff4,_0x4ac6e5,_0x4cf35f){return _0x1be77e[_0xf868('0x3e4')](_0x50fff4,_0x4ac6e5,_0x4cf35f);}};function _0x28c8ba(_0x32bb86){this[_0xf868('0x3e5')]=_0x32bb86;this['processToMap']=new Map();}_0x28c8ba['prototype'][_0xf868('0x163')]=function(_0x7d8082){var _0x3d79a9,_0x416120;if(_0x7d8082){if(!this[_0xf868('0x3e6')][_0xf868('0xff')](_0x7d8082)){_0x24ae4c[_0xf868('0xa5')][_0xf868('0xd0')]['executeError'](_0x24ae4c[_0xf868('0x75')]['ErrorType'][_0xf868('0x3d')],_0x1be77e[_0xf868('0x3e7')]);}else{this[_0xf868('0x3e6')][_0xf868('0x101')](_0x7d8082)['executionContent'][_0xf868('0x3e8')]();}}else{var _0x91f8b9=this[_0xf868('0x3e6')][_0xf868('0x3e9')]();try{for(var _0x471bf0=_0x1be77e[_0xf868('0x3ea')](__values,_0x91f8b9),_0x5012ad=_0x471bf0[_0xf868('0xa')]();!_0x5012ad[_0xf868('0xb')];_0x5012ad=_0x471bf0[_0xf868('0xa')]()){var _0x53182b=_0x5012ad[_0xf868('0xc')];_0x53182b[_0xf868('0x3eb')][_0xf868('0x3e8')]();}}catch(_0xc2c9e6){_0x3d79a9={'error':_0xc2c9e6};}finally{try{if(_0x5012ad&&!_0x5012ad[_0xf868('0xb')]&&(_0x416120=_0x471bf0[_0xf868('0x3')]))_0x416120[_0xf868('0x7')](_0x471bf0);}finally{if(_0x3d79a9)throw _0x3d79a9[_0xf868('0xd')];}}}};_0x28c8ba['prototype'][_0xf868('0x162')]=function(_0x32d01e,_0x1343d3){this[_0xf868('0x3e6')]['set'](_0x32d01e,_0x1343d3);};_0x28c8ba[_0xf868('0x2c')]['getProcess']=function(_0x1a9034){return this[_0xf868('0x3e6')][_0xf868('0x101')](_0x1a9034);};_0x28c8ba['prototype'][_0xf868('0x3ec')]=function(){return this[_0xf868('0x3e6')];};_0x28c8ba[_0xf868('0x2c')][_0xf868('0x165')]=function(_0x488227){if(!this[_0xf868('0x3e6')][_0xf868('0xff')](_0x488227)){_0x24ae4c[_0xf868('0xa5')][_0xf868('0xd0')][_0xf868('0xa1')](_0x24ae4c['type']['ErrorType']['PROCESS_FW'],_0x488227+_0x1be77e['nqGQU']);return;}this[_0xf868('0x3ed')]=this[_0xf868('0x3e6')][_0xf868('0x101')](_0x488227);};_0x28c8ba[_0xf868('0x2c')][_0xf868('0x16d')]=function(){return __awaiter(this,void 0x0,void 0x0,function(){return _0xe05642[_0xf868('0x3ee')](__generator,this,function(_0x46de4d){switch(_0x46de4d[_0xf868('0x21')]){case 0x0:return[0x4,this[_0xf868('0x3ed')][_0xf868('0x3ef')]()];case 0x1:_0x46de4d[_0xf868('0x16e')]();return[0x2];}});});};return _0x28c8ba;}();_0x24ae4c[_0xf868('0x3f0')]=_0x28c8ba;}(fcc||(fcc={})));var fcc;(function(_0x20dc05){var _0x21ba6a={'npxLH':_0xf868('0x3f1')};var _0x26df03;(function(_0x26df03){var _0x3696ec={'orRUl':_0x21ba6a[_0xf868('0x3f2')]};var _0xe61434;(function(_0xe61434){_0xe61434[_0x3696ec[_0xf868('0x3f3')]]='TEST';}(_0xe61434=_0x26df03[_0xf868('0x3f4')]||(_0x26df03[_0xf868('0x3f4')]={})));}(_0x26df03=_0x20dc05[_0xf868('0x75')]||(_0x20dc05[_0xf868('0x75')]={})));}(fcc||(fcc={})));var fcc;(function(_0x238065){var _0x32fa20={'hZwMt':_0xf868('0x3f5'),'MGvbg':'FREE_SPIN_RESULT','sgzQV':'CAN_PLAY_GAME','rdLwf':_0xf868('0x3f6'),'TEBTo':_0xf868('0x3f7'),'JtUzi':'GROUP_ID','kdPVT':'TABLE_INFO','zubCl':_0xf868('0x3f8')};var _0x519b36;(function(_0x519b36){var _0x31d780;(function(_0x31d780){_0x31d780[_0xf868('0x3f5')]=_0x32fa20['hZwMt'];_0x31d780[_0x32fa20[_0xf868('0x3f9')]]=_0x32fa20[_0xf868('0x3f9')];_0x31d780[_0x32fa20[_0xf868('0x3fa')]]=_0xf868('0x3fb');_0x31d780[_0x32fa20['rdLwf']]=_0xf868('0x3f6');_0x31d780[_0x32fa20[_0xf868('0x3fc')]]=_0xf868('0x3f7');_0x31d780[_0x32fa20[_0xf868('0x3fd')]]=_0x32fa20[_0xf868('0x3fd')];_0x31d780[_0x32fa20[_0xf868('0x3fe')]]=_0x32fa20['kdPVT'];_0x31d780[_0xf868('0x3f8')]=_0x32fa20[_0xf868('0x3ff')];}(_0x31d780=_0x519b36[_0xf868('0x400')]||(_0x519b36['ServerEventType']={})));}(_0x519b36=_0x238065['type']||(_0x238065['type']={})));}(fcc||(fcc={})));var fcc;(function(_0x4f6d46){var _0x1f642f={'fdTOP':'grid'};var _0x562bb7=function(_0x2d1149){var _0x2214ea={'bhGiY':function(_0x45d076,_0x3e2657){return _0x45d076(_0x3e2657);},'eWIHP':_0x1f642f[_0xf868('0x401')]};__extends(_0x562bb7,_0x2d1149);function _0x562bb7(_0x1fa690,_0x77d6da,_0x24b97b,_0x595e98){return _0x2d1149[_0xf868('0x7')](this,_0x1fa690,_0x77d6da,_0x24b97b,_0x595e98)||this;}_0x562bb7[_0xf868('0x2c')]['setResToManager']=function(_0x2312fb,_0xe729b9){var _0xe6bc27='1|4|2|0|3'[_0xf868('0x5')]('|'),_0x426f2d=0x0;while(!![]){switch(_0xe6bc27[_0x426f2d++]){case'0':_0x4f6d46[_0xf868('0x247')]['instance']['imgRes'][_0xf868('0xf3')](_0x2312fb,_0x57f81f);continue;case'1':var _0x57f257,_0x5b7f29;continue;case'2':try{for(var _0x2772a2=_0x2214ea[_0xf868('0x402')](__values,_0xe729b9[0x0][_0xf868('0x403')]()),_0x471b3a=_0x2772a2[_0xf868('0xa')]();!_0x471b3a[_0xf868('0xb')];_0x471b3a=_0x2772a2['next']()){var _0x4a3d74=_0x471b3a['value'];var _0x2c7fd8=_0x2312fb[_0xf868('0x2be')]();if(_0x2c7fd8[_0xf868('0x404')](_0x2214ea[_0xf868('0x405')])!=-0x1){var _0x138c8b=_0x4a3d74[_0xf868('0x29e')][_0xf868('0x2cb')](/[^0-9]/gi,'');_0x57f81f[_0xf868('0xf3')](_0x138c8b,_0x4a3d74);}else{var _0x48085d=_0x4a3d74[_0xf868('0x29e')];_0x57f81f['set'](_0x48085d,_0x4a3d74);}}}catch(_0x51b058){_0x57f257={'error':_0x51b058};}finally{try{if(_0x471b3a&&!_0x471b3a[_0xf868('0xb')]&&(_0x5b7f29=_0x2772a2[_0xf868('0x3')]))_0x5b7f29['call'](_0x2772a2);}finally{if(_0x57f257)throw _0x57f257[_0xf868('0xd')];}}continue;case'3':this[_0xf868('0x294')]();continue;case'4':var _0x57f81f=new Map();continue;}break;}};return _0x562bb7;}(_0x4f6d46[_0xf868('0x19c')][_0xf868('0x29a')]);_0x4f6d46[_0xf868('0x2e1')]=_0x562bb7;}(fcc||(fcc={})));var fcc;(function(_0x5591e0){var _0x26168a={'alQUi':function(_0x142e56,_0x23f224){return _0x142e56(_0x23f224);},'uYSdO':function(_0x250793,_0x244c54,_0x541431,_0x4fadee,_0x6e86ac){return _0x250793(_0x244c54,_0x541431,_0x4fadee,_0x6e86ac);},'kWdlz':_0xf868('0x3ed'),'tPPLY':_0xf868('0x3eb')};var _0x20f8d9=function(){function _0x20f8d9(_0x1718c8){this[_0xf868('0x406')]=_0x1718c8;this['_process']=new Set();}_0x20f8d9['prototype']['onExecution']=function(){this[_0xf868('0x407')][_0xf868('0x265')](this[_0xf868('0x406')][_0xf868('0x408')]);return this;};_0x20f8d9['prototype'][_0xf868('0x409')]=function(){this['_process']['add'](this[_0xf868('0x406')]['onEnd']);return this;};_0x20f8d9[_0xf868('0x2c')][_0xf868('0x40a')]=function(){this[_0xf868('0x407')][_0xf868('0x265')](this[_0xf868('0x406')][_0xf868('0x40a')]);return this;};_0x20f8d9[_0xf868('0x2c')][_0xf868('0x3ef')]=function(){var _0x2a26ce={'vhgCL':function(_0x227550,_0x38b717){return _0x26168a['alQUi'](_0x227550,_0x38b717);}};return _0x26168a[_0xf868('0x40b')](__awaiter,this,void 0x0,void 0x0,function(){var _0x276fb3={'KMWdo':function(_0x46f98c,_0x29e753){return _0x2a26ce[_0xf868('0x40c')](_0x46f98c,_0x29e753);}};var _0x50bad9,_0x15bb86,_0x4174bf,_0x19ba4f;var _0x20afc9,_0x204997;return __generator(this,function(_0x46d771){switch(_0x46d771['label']){case 0x0:_0x46d771['trys'][_0xf868('0x2da')]([0x0,0x5,0x6,0x7]);_0x50bad9=_0x276fb3['KMWdo'](__values,this[_0xf868('0x407')]),_0x15bb86=_0x50bad9[_0xf868('0xa')]();_0x46d771[_0xf868('0x21')]=0x1;case 0x1:if(!!_0x15bb86['done'])return[0x3,0x4];_0x4174bf=_0x15bb86['value'];return[0x4,_0x4174bf[_0xf868('0x151')](this[_0xf868('0x406')])];case 0x2:_0x46d771['sent']();_0x46d771[_0xf868('0x21')]=0x3;case 0x3:_0x15bb86=_0x50bad9[_0xf868('0xa')]();return[0x3,0x1];case 0x4:return[0x3,0x7];case 0x5:_0x19ba4f=_0x46d771[_0xf868('0x16e')]();_0x20afc9={'error':_0x19ba4f};return[0x3,0x7];case 0x6:try{if(_0x15bb86&&!_0x15bb86[_0xf868('0xb')]&&(_0x204997=_0x50bad9['return']))_0x204997[_0xf868('0x7')](_0x50bad9);}finally{if(_0x20afc9)throw _0x20afc9[_0xf868('0xd')];}return[0x7];case 0x7:return[0x2];}});});};Object[_0xf868('0xde')](_0x20f8d9['prototype'],_0x26168a[_0xf868('0x40d')],{'get':function(){return this[_0xf868('0x407')];},'enumerable':![],'configurable':!![]});Object['defineProperty'](_0x20f8d9[_0xf868('0x2c')],_0x26168a[_0xf868('0x40e')],{'get':function(){return this['_executionContent'];},'enumerable':![],'configurable':!![]});return _0x20f8d9;}();_0x5591e0['GameProcess']=_0x20f8d9;}(fcc||(fcc={})));var fcc;(function(_0x2d6fc0){var _0x186c07={'bDQQW':function(_0x18c46e,_0x336e4b,_0x3c1d78,_0x8658a4,_0x361c6e){return _0x18c46e(_0x336e4b,_0x3c1d78,_0x8658a4,_0x361c6e);},'Rondz':'executionContent','sLirX':'process'};var _0x1941b2=function(){var _0x128f18={'UlyLZ':function(_0x4844e7,_0x20d3a5,_0x4e950e){return _0x4844e7(_0x20d3a5,_0x4e950e);},'JtLIo':function(_0x5d216e,_0x418b61,_0x2fe565,_0x5ea5c1,_0x1dfffa){return _0x186c07[_0xf868('0x40f')](_0x5d216e,_0x418b61,_0x2fe565,_0x5ea5c1,_0x1dfffa);}};function _0x1941b2(_0x370e04){this[_0xf868('0x410')]=_0x370e04;this[_0xf868('0x407')]=new Set();}_0x1941b2[_0xf868('0x2c')]['onCustomizeStart']=function(){this[_0xf868('0x407')][_0xf868('0x265')](this[_0xf868('0x410')]['onCustomizeStart']);return this;};_0x1941b2['prototype'][_0xf868('0x411')]=function(){this['_process'][_0xf868('0x265')](this[_0xf868('0x410')][_0xf868('0x411')]);return this;};_0x1941b2[_0xf868('0x2c')][_0xf868('0x412')]=function(){this[_0xf868('0x407')]['add'](this[_0xf868('0x410')][_0xf868('0x412')]);return this;};_0x1941b2['prototype'][_0xf868('0x413')]=function(){this['_process'][_0xf868('0x265')](this['_executionContainer']['onCustomizeEnd']);return this;};_0x1941b2['prototype'][_0xf868('0x414')]=function(){this[_0xf868('0x407')][_0xf868('0x265')](this['_executionContainer'][_0xf868('0x414')]);return this;};_0x1941b2['prototype'][_0xf868('0x40a')]=function(){this[_0xf868('0x407')]['add'](this['_executionContainer'][_0xf868('0x40a')]);return this;};_0x1941b2[_0xf868('0x2c')][_0xf868('0x3ef')]=function(){var _0x361514={'ofxIf':function(_0x2aff05,_0xef0452){return _0x2aff05(_0xef0452);}};return _0x128f18[_0xf868('0x415')](__awaiter,this,void 0x0,void 0x0,function(){var _0x5401bf,_0x30bd60,_0x12f04c,_0x34dd1a;var _0x1cd071,_0x433dc0;return _0x128f18[_0xf868('0x416')](__generator,this,function(_0x2ffbf1){switch(_0x2ffbf1[_0xf868('0x21')]){case 0x0:_0x2ffbf1[_0xf868('0x23')][_0xf868('0x2da')]([0x0,0x5,0x6,0x7]);_0x5401bf=_0x361514[_0xf868('0x417')](__values,this[_0xf868('0x407')]),_0x30bd60=_0x5401bf[_0xf868('0xa')]();_0x2ffbf1['label']=0x1;case 0x1:if(!!_0x30bd60['done'])return[0x3,0x4];_0x12f04c=_0x30bd60['value'];return[0x4,_0x12f04c[_0xf868('0x151')](this[_0xf868('0x410')])];case 0x2:_0x2ffbf1[_0xf868('0x16e')]();_0x2ffbf1['label']=0x3;case 0x3:_0x30bd60=_0x5401bf['next']();return[0x3,0x1];case 0x4:return[0x3,0x7];case 0x5:_0x34dd1a=_0x2ffbf1[_0xf868('0x16e')]();_0x1cd071={'error':_0x34dd1a};return[0x3,0x7];case 0x6:try{if(_0x30bd60&&!_0x30bd60[_0xf868('0xb')]&&(_0x433dc0=_0x5401bf['return']))_0x433dc0['call'](_0x5401bf);}finally{if(_0x1cd071)throw _0x1cd071['error'];}return[0x7];case 0x7:return[0x2];}});});};Object['defineProperty'](_0x1941b2[_0xf868('0x2c')],_0x186c07['Rondz'],{'get':function(){return this[_0xf868('0x410')];},'enumerable':![],'configurable':!![]});Object[_0xf868('0xde')](_0x1941b2[_0xf868('0x2c')],_0x186c07[_0xf868('0x418')],{'get':function(){return this[_0xf868('0x407')];},'enumerable':![],'configurable':!![]});return _0x1941b2;}();_0x2d6fc0[_0xf868('0x419')]=_0x1941b2;}(fcc||(fcc={})));var fcc;(function(_0x22ae65){var _0x83ece6={'SDvtV':_0xf868('0x41a'),'MqVGc':_0xf868('0x41b'),'TyiAn':_0xf868('0x41c'),'adNGQ':_0xf868('0x41d'),'IQZjs':_0xf868('0x41e'),'HQhSg':_0xf868('0x41f'),'vabuI':_0xf868('0x420'),'XnQww':'lookAtCount'};var _0x639853;(function(_0x639853){var _0xe1dc05=function(){function _0xe1dc05(_0x5e1e0c){this[_0xf868('0x421')]=_0x5e1e0c;}_0xe1dc05[_0xf868('0x2c')][_0xf868('0x422')]=function(_0x3a16c4){this[_0xf868('0x423')]=_0x3a16c4;return this;};_0xe1dc05[_0xf868('0x2c')][_0xf868('0x424')]=function(_0x3d95f4){this[_0xf868('0x425')]=_0x3d95f4;return this;};_0xe1dc05[_0xf868('0x2c')][_0xf868('0x426')]=function(_0x2d2594){this[_0xf868('0x427')]=_0x2d2594;return this;};_0xe1dc05['prototype']['setSlotGridHeight']=function(_0xf55aba){this[_0xf868('0x428')]=_0xf55aba;return this;};_0xe1dc05[_0xf868('0x2c')][_0xf868('0x429')]=function(_0x401132){this[_0xf868('0x42a')]=_0x401132;return this;};_0xe1dc05['prototype'][_0xf868('0x42b')]=function(_0x420e4c){this['_speedUpMultiple']=_0x420e4c;return this;};_0xe1dc05['prototype'][_0xf868('0x42c')]=function(_0x241722){this[_0xf868('0x42d')]=_0x241722;return this;};_0xe1dc05['prototype']['setColumnIntervalTime']=function(_0x219597){this[_0xf868('0x42e')]=_0x219597;return this;};_0xe1dc05[_0xf868('0x2c')][_0xf868('0x42f')]=function(_0x20d491){this['_slotColumnToTween']=_0x20d491;return this;};_0xe1dc05[_0xf868('0x2c')][_0xf868('0x430')]=function(_0x381de9){this['_gridNodeToMap']=_0x381de9;return this;};_0xe1dc05[_0xf868('0x2c')][_0xf868('0x431')]=function(_0x447bd6){this[_0xf868('0x432')]=_0x447bd6;return this;};_0xe1dc05[_0xf868('0x2c')][_0xf868('0x433')]=function(_0x24a485){this[_0xf868('0x434')]=_0x24a485;return this;};_0xe1dc05['prototype'][_0xf868('0x435')]=function(_0x21605c){this['_resultModule']=_0x21605c;return this;};_0xe1dc05['prototype'][_0xf868('0x436')]=function(){this[_0xf868('0x421')]['build'](this);};Object[_0xf868('0xde')](_0xe1dc05[_0xf868('0x2c')],_0x83ece6[_0xf868('0x437')],{'get':function(){return this[_0xf868('0x42e')];},'enumerable':![],'configurable':!![]});Object[_0xf868('0xde')](_0xe1dc05[_0xf868('0x2c')],'gridNodeToMap',{'get':function(){return this[_0xf868('0x438')];},'enumerable':![],'configurable':!![]});Object[_0xf868('0xde')](_0xe1dc05[_0xf868('0x2c')],_0x83ece6[_0xf868('0x439')],{'get':function(){return this['_slotColumnToTween'];},'enumerable':![],'configurable':!![]});Object[_0xf868('0xde')](_0xe1dc05[_0xf868('0x2c')],_0xf868('0x43a'),{'get':function(){return this[_0xf868('0x42a')];},'enumerable':![],'configurable':!![]});Object[_0xf868('0xde')](_0xe1dc05['prototype'],_0x83ece6[_0xf868('0x43b')],{'get':function(){return this[_0xf868('0x428')];},'enumerable':![],'configurable':!![]});Object[_0xf868('0xde')](_0xe1dc05[_0xf868('0x2c')],'slotRowGridCount',{'get':function(){return this['_slotRowGridCount'];},'enumerable':![],'configurable':!![]});Object['defineProperty'](_0xe1dc05[_0xf868('0x2c')],_0x83ece6[_0xf868('0x43c')],{'get':function(){return this[_0xf868('0x427')];},'enumerable':![],'configurable':!![]});Object[_0xf868('0xde')](_0xe1dc05[_0xf868('0x2c')],_0x83ece6[_0xf868('0x43d')],{'get':function(){return this[_0xf868('0x43e')];},'enumerable':![],'configurable':!![]});Object[_0xf868('0xde')](_0xe1dc05[_0xf868('0x2c')],_0x83ece6['HQhSg'],{'get':function(){return this[_0xf868('0x421')];},'enumerable':![],'configurable':!![]});Object[_0xf868('0xde')](_0xe1dc05[_0xf868('0x2c')],_0xf868('0x201'),{'get':function(){return this[_0xf868('0x425')];},'enumerable':![],'configurable':!![]});Object[_0xf868('0xde')](_0xe1dc05[_0xf868('0x2c')],_0x83ece6[_0xf868('0x43f')],{'get':function(){return this[_0xf868('0x440')];},'enumerable':![],'configurable':!![]});Object[_0xf868('0xde')](_0xe1dc05[_0xf868('0x2c')],_0x83ece6[_0xf868('0x441')],{'get':function(){return this[_0xf868('0x423')];},'enumerable':![],'configurable':!![]});return _0xe1dc05;}();_0x639853[_0xf868('0x442')]=_0xe1dc05;}(_0x639853=_0x22ae65[_0xf868('0x19c')]||(_0x22ae65[_0xf868('0x19c')]={})));}(fcc||(fcc={})));var fcc;(function(_0x499f63){var _0x15a1db={'xTeaN':function(_0x2e79c5,_0x2c0e8a){return _0x2e79c5!==_0x2c0e8a;},'mZWpN':_0xf868('0x443')};var _0x4bb248=function(_0x38f56a){__extends(_0x4bb248,_0x38f56a);function _0x4bb248(){return _0x15a1db['xTeaN'](_0x38f56a,null)&&_0x38f56a[_0xf868('0x151')](this,arguments)||this;}_0x4bb248[_0xf868('0x2c')][_0xf868('0x444')]=function(_0x26d205){this[_0xf868('0x445')]=_0x26d205;return this;};_0x4bb248[_0xf868('0x2c')][_0xf868('0x446')]=function(_0x395142){this['_gridSpriteToMap']=_0x395142;return this;};Object[_0xf868('0xde')](_0x4bb248[_0xf868('0x2c')],_0x15a1db[_0xf868('0x447')],{'get':function(){return this[_0xf868('0x448')];},'enumerable':![],'configurable':!![]});Object[_0xf868('0xde')](_0x4bb248[_0xf868('0x2c')],_0xf868('0x449'),{'get':function(){return this[_0xf868('0x445')];},'enumerable':![],'configurable':!![]});return _0x4bb248;}(_0x499f63[_0xf868('0x19c')]['ASlotSetting']);_0x499f63[_0xf868('0x44a')]=_0x4bb248;}(fcc||(fcc={})));var fcc;(function(_0x2d38f7){var _0x33d9a1={'RiEVM':function(_0x3c43c3,_0x396513,_0xdbb2cd){return _0x3c43c3(_0x396513,_0xdbb2cd);},'lfvXV':_0xf868('0x44b')};var _0x2ee474=function(_0xb024b0){_0x33d9a1[_0xf868('0x44c')](__extends,_0x2ee474,_0xb024b0);function _0x2ee474(){return _0xb024b0!==null&&_0xb024b0['apply'](this,arguments)||this;}_0x2ee474[_0xf868('0x2c')][_0xf868('0x44d')]=function(_0x2b937e){this[_0xf868('0x44e')]=_0x2b937e;return this;};Object[_0xf868('0xde')](_0x2ee474['prototype'],_0x33d9a1[_0xf868('0x44f')],{'get':function(){return this[_0xf868('0x44e')];},'enumerable':![],'configurable':!![]});return _0x2ee474;}(_0x2d38f7[_0xf868('0x44a')]);_0x2d38f7[_0xf868('0x450')]=_0x2ee474;}(fcc||(fcc={})));var fcc;(function(_0xd4482a){var _0x406321={'fdYdp':function(_0x27e072,_0x4b3399){return _0x27e072!==_0x4b3399;},'muNxb':function(_0x12d74c,_0x542cad,_0x2aeed9){return _0x12d74c(_0x542cad,_0x2aeed9);},'CkGxu':_0xf868('0x451')};var _0x3a40a2=function(_0x12e761){_0x406321['muNxb'](__extends,_0x3a40a2,_0x12e761);function _0x3a40a2(){return _0x406321[_0xf868('0x452')](_0x12e761,null)&&_0x12e761['apply'](this,arguments)||this;}_0x3a40a2[_0xf868('0x2c')][_0xf868('0x453')]=function(_0x577ce1){this['_slotRowTime']=_0x577ce1;return this;};_0x3a40a2[_0xf868('0x2c')][_0xf868('0x454')]=function(_0x3c1a06){this[_0xf868('0x455')]=_0x3c1a06;return this;};Object[_0xf868('0xde')](_0x3a40a2[_0xf868('0x2c')],_0x406321[_0xf868('0x456')],{'get':function(){return this[_0xf868('0x457')];},'enumerable':![],'configurable':!![]});Object['defineProperty'](_0x3a40a2[_0xf868('0x2c')],_0xf868('0x458'),{'get':function(){return this[_0xf868('0x455')];},'enumerable':![],'configurable':!![]});return _0x3a40a2;}(_0xd4482a[_0xf868('0x44a')]);_0xd4482a[_0xf868('0x459')]=_0x3a40a2;}(fcc||(fcc={})));var fcc;(function(_0x4f29dc){var _0x2afe61={'XeyFQ':function(_0x4aaa9d,_0x2dcd87){return _0x4aaa9d!==_0x2dcd87;},'ygCIJ':function(_0x3aeaab,_0x61f047,_0x675875){return _0x3aeaab(_0x61f047,_0x675875);},'NRILy':_0xf868('0x44b')};var _0x4867e9=function(_0xbfd430){var _0xf45857={'YeIwx':function(_0x1c2982,_0x2e12ff){return _0x2afe61[_0xf868('0x45a')](_0x1c2982,_0x2e12ff);}};_0x2afe61[_0xf868('0x45b')](__extends,_0x4867e9,_0xbfd430);function _0x4867e9(){return _0xf45857['YeIwx'](_0xbfd430,null)&&_0xbfd430[_0xf868('0x151')](this,arguments)||this;}_0x4867e9['prototype'][_0xf868('0x44d')]=function(_0x5961cc){this[_0xf868('0x44e')]=_0x5961cc;return this;};Object['defineProperty'](_0x4867e9['prototype'],_0x2afe61[_0xf868('0x45c')],{'get':function(){return this[_0xf868('0x44e')];},'enumerable':![],'configurable':!![]});return _0x4867e9;}(_0x4f29dc[_0xf868('0x459')]);_0x4f29dc[_0xf868('0x45d')]=_0x4867e9;}(fcc||(fcc={})));
//# sourceMappingURL=data:application/json;charset=utf8;base64,

}).call(this,require("2ionoC"),typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/fake_bffda00.js","/")
},{"2ionoC":5,"buffer":3}],2:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname){
var lookup = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';

;(function (exports) {
	'use strict';

  var Arr = (typeof Uint8Array !== 'undefined')
    ? Uint8Array
    : Array

	var PLUS   = '+'.charCodeAt(0)
	var SLASH  = '/'.charCodeAt(0)
	var NUMBER = '0'.charCodeAt(0)
	var LOWER  = 'a'.charCodeAt(0)
	var UPPER  = 'A'.charCodeAt(0)
	var PLUS_URL_SAFE = '-'.charCodeAt(0)
	var SLASH_URL_SAFE = '_'.charCodeAt(0)

	function decode (elt) {
		var code = elt.charCodeAt(0)
		if (code === PLUS ||
		    code === PLUS_URL_SAFE)
			return 62 // '+'
		if (code === SLASH ||
		    code === SLASH_URL_SAFE)
			return 63 // '/'
		if (code < NUMBER)
			return -1 //no match
		if (code < NUMBER + 10)
			return code - NUMBER + 26 + 26
		if (code < UPPER + 26)
			return code - UPPER
		if (code < LOWER + 26)
			return code - LOWER + 26
	}

	function b64ToByteArray (b64) {
		var i, j, l, tmp, placeHolders, arr

		if (b64.length % 4 > 0) {
			throw new Error('Invalid string. Length must be a multiple of 4')
		}

		// the number of equal signs (place holders)
		// if there are two placeholders, than the two characters before it
		// represent one byte
		// if there is only one, then the three characters before it represent 2 bytes
		// this is just a cheap hack to not do indexOf twice
		var len = b64.length
		placeHolders = '=' === b64.charAt(len - 2) ? 2 : '=' === b64.charAt(len - 1) ? 1 : 0

		// base64 is 4/3 + up to two characters of the original data
		arr = new Arr(b64.length * 3 / 4 - placeHolders)

		// if there are placeholders, only get up to the last complete 4 chars
		l = placeHolders > 0 ? b64.length - 4 : b64.length

		var L = 0

		function push (v) {
			arr[L++] = v
		}

		for (i = 0, j = 0; i < l; i += 4, j += 3) {
			tmp = (decode(b64.charAt(i)) << 18) | (decode(b64.charAt(i + 1)) << 12) | (decode(b64.charAt(i + 2)) << 6) | decode(b64.charAt(i + 3))
			push((tmp & 0xFF0000) >> 16)
			push((tmp & 0xFF00) >> 8)
			push(tmp & 0xFF)
		}

		if (placeHolders === 2) {
			tmp = (decode(b64.charAt(i)) << 2) | (decode(b64.charAt(i + 1)) >> 4)
			push(tmp & 0xFF)
		} else if (placeHolders === 1) {
			tmp = (decode(b64.charAt(i)) << 10) | (decode(b64.charAt(i + 1)) << 4) | (decode(b64.charAt(i + 2)) >> 2)
			push((tmp >> 8) & 0xFF)
			push(tmp & 0xFF)
		}

		return arr
	}

	function uint8ToBase64 (uint8) {
		var i,
			extraBytes = uint8.length % 3, // if we have 1 byte left, pad 2 bytes
			output = "",
			temp, length

		function encode (num) {
			return lookup.charAt(num)
		}

		function tripletToBase64 (num) {
			return encode(num >> 18 & 0x3F) + encode(num >> 12 & 0x3F) + encode(num >> 6 & 0x3F) + encode(num & 0x3F)
		}

		// go through the array every three bytes, we'll deal with trailing stuff later
		for (i = 0, length = uint8.length - extraBytes; i < length; i += 3) {
			temp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])
			output += tripletToBase64(temp)
		}

		// pad the end with zeros, but make sure to not forget the extra bytes
		switch (extraBytes) {
			case 1:
				temp = uint8[uint8.length - 1]
				output += encode(temp >> 2)
				output += encode((temp << 4) & 0x3F)
				output += '=='
				break
			case 2:
				temp = (uint8[uint8.length - 2] << 8) + (uint8[uint8.length - 1])
				output += encode(temp >> 10)
				output += encode((temp >> 4) & 0x3F)
				output += encode((temp << 2) & 0x3F)
				output += '='
				break
		}

		return output
	}

	exports.toByteArray = b64ToByteArray
	exports.fromByteArray = uint8ToBase64
}(typeof exports === 'undefined' ? (this.base64js = {}) : exports))

}).call(this,require("2ionoC"),typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/..\\node_modules\\gulp-browserify\\node_modules\\base64-js\\lib\\b64.js","/..\\node_modules\\gulp-browserify\\node_modules\\base64-js\\lib")
},{"2ionoC":5,"buffer":3}],3:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname){
/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
 * @license  MIT
 */

var base64 = require('base64-js')
var ieee754 = require('ieee754')

exports.Buffer = Buffer
exports.SlowBuffer = Buffer
exports.INSPECT_MAX_BYTES = 50
Buffer.poolSize = 8192

/**
 * If `Buffer._useTypedArrays`:
 *   === true    Use Uint8Array implementation (fastest)
 *   === false   Use Object implementation (compatible down to IE6)
 */
Buffer._useTypedArrays = (function () {
  // Detect if browser supports Typed Arrays. Supported browsers are IE 10+, Firefox 4+,
  // Chrome 7+, Safari 5.1+, Opera 11.6+, iOS 4.2+. If the browser does not support adding
  // properties to `Uint8Array` instances, then that's the same as no `Uint8Array` support
  // because we need to be able to add all the node Buffer API methods. This is an issue
  // in Firefox 4-29. Now fixed: https://bugzilla.mozilla.org/show_bug.cgi?id=695438
  try {
    var buf = new ArrayBuffer(0)
    var arr = new Uint8Array(buf)
    arr.foo = function () { return 42 }
    return 42 === arr.foo() &&
        typeof arr.subarray === 'function' // Chrome 9-10 lack `subarray`
  } catch (e) {
    return false
  }
})()

/**
 * Class: Buffer
 * =============
 *
 * The Buffer constructor returns instances of `Uint8Array` that are augmented
 * with function properties for all the node `Buffer` API functions. We use
 * `Uint8Array` so that square bracket notation works as expected -- it returns
 * a single octet.
 *
 * By augmenting the instances, we can avoid modifying the `Uint8Array`
 * prototype.
 */
function Buffer (subject, encoding, noZero) {
  if (!(this instanceof Buffer))
    return new Buffer(subject, encoding, noZero)

  var type = typeof subject

  // Workaround: node's base64 implementation allows for non-padded strings
  // while base64-js does not.
  if (encoding === 'base64' && type === 'string') {
    subject = stringtrim(subject)
    while (subject.length % 4 !== 0) {
      subject = subject + '='
    }
  }

  // Find the length
  var length
  if (type === 'number')
    length = coerce(subject)
  else if (type === 'string')
    length = Buffer.byteLength(subject, encoding)
  else if (type === 'object')
    length = coerce(subject.length) // assume that object is array-like
  else
    throw new Error('First argument needs to be a number, array or string.')

  var buf
  if (Buffer._useTypedArrays) {
    // Preferred: Return an augmented `Uint8Array` instance for best performance
    buf = Buffer._augment(new Uint8Array(length))
  } else {
    // Fallback: Return THIS instance of Buffer (created by `new`)
    buf = this
    buf.length = length
    buf._isBuffer = true
  }

  var i
  if (Buffer._useTypedArrays && typeof subject.byteLength === 'number') {
    // Speed optimization -- use set if we're copying from a typed array
    buf._set(subject)
  } else if (isArrayish(subject)) {
    // Treat array-ish objects as a byte array
    for (i = 0; i < length; i++) {
      if (Buffer.isBuffer(subject))
        buf[i] = subject.readUInt8(i)
      else
        buf[i] = subject[i]
    }
  } else if (type === 'string') {
    buf.write(subject, 0, encoding)
  } else if (type === 'number' && !Buffer._useTypedArrays && !noZero) {
    for (i = 0; i < length; i++) {
      buf[i] = 0
    }
  }

  return buf
}

// STATIC METHODS
// ==============

Buffer.isEncoding = function (encoding) {
  switch (String(encoding).toLowerCase()) {
    case 'hex':
    case 'utf8':
    case 'utf-8':
    case 'ascii':
    case 'binary':
    case 'base64':
    case 'raw':
    case 'ucs2':
    case 'ucs-2':
    case 'utf16le':
    case 'utf-16le':
      return true
    default:
      return false
  }
}

Buffer.isBuffer = function (b) {
  return !!(b !== null && b !== undefined && b._isBuffer)
}

Buffer.byteLength = function (str, encoding) {
  var ret
  str = str + ''
  switch (encoding || 'utf8') {
    case 'hex':
      ret = str.length / 2
      break
    case 'utf8':
    case 'utf-8':
      ret = utf8ToBytes(str).length
      break
    case 'ascii':
    case 'binary':
    case 'raw':
      ret = str.length
      break
    case 'base64':
      ret = base64ToBytes(str).length
      break
    case 'ucs2':
    case 'ucs-2':
    case 'utf16le':
    case 'utf-16le':
      ret = str.length * 2
      break
    default:
      throw new Error('Unknown encoding')
  }
  return ret
}

Buffer.concat = function (list, totalLength) {
  assert(isArray(list), 'Usage: Buffer.concat(list, [totalLength])\n' +
      'list should be an Array.')

  if (list.length === 0) {
    return new Buffer(0)
  } else if (list.length === 1) {
    return list[0]
  }

  var i
  if (typeof totalLength !== 'number') {
    totalLength = 0
    for (i = 0; i < list.length; i++) {
      totalLength += list[i].length
    }
  }

  var buf = new Buffer(totalLength)
  var pos = 0
  for (i = 0; i < list.length; i++) {
    var item = list[i]
    item.copy(buf, pos)
    pos += item.length
  }
  return buf
}

// BUFFER INSTANCE METHODS
// =======================

function _hexWrite (buf, string, offset, length) {
  offset = Number(offset) || 0
  var remaining = buf.length - offset
  if (!length) {
    length = remaining
  } else {
    length = Number(length)
    if (length > remaining) {
      length = remaining
    }
  }

  // must be an even number of digits
  var strLen = string.length
  assert(strLen % 2 === 0, 'Invalid hex string')

  if (length > strLen / 2) {
    length = strLen / 2
  }
  for (var i = 0; i < length; i++) {
    var byte = parseInt(string.substr(i * 2, 2), 16)
    assert(!isNaN(byte), 'Invalid hex string')
    buf[offset + i] = byte
  }
  Buffer._charsWritten = i * 2
  return i
}

function _utf8Write (buf, string, offset, length) {
  var charsWritten = Buffer._charsWritten =
    blitBuffer(utf8ToBytes(string), buf, offset, length)
  return charsWritten
}

function _asciiWrite (buf, string, offset, length) {
  var charsWritten = Buffer._charsWritten =
    blitBuffer(asciiToBytes(string), buf, offset, length)
  return charsWritten
}

function _binaryWrite (buf, string, offset, length) {
  return _asciiWrite(buf, string, offset, length)
}

function _base64Write (buf, string, offset, length) {
  var charsWritten = Buffer._charsWritten =
    blitBuffer(base64ToBytes(string), buf, offset, length)
  return charsWritten
}

function _utf16leWrite (buf, string, offset, length) {
  var charsWritten = Buffer._charsWritten =
    blitBuffer(utf16leToBytes(string), buf, offset, length)
  return charsWritten
}

Buffer.prototype.write = function (string, offset, length, encoding) {
  // Support both (string, offset, length, encoding)
  // and the legacy (string, encoding, offset, length)
  if (isFinite(offset)) {
    if (!isFinite(length)) {
      encoding = length
      length = undefined
    }
  } else {  // legacy
    var swap = encoding
    encoding = offset
    offset = length
    length = swap
  }

  offset = Number(offset) || 0
  var remaining = this.length - offset
  if (!length) {
    length = remaining
  } else {
    length = Number(length)
    if (length > remaining) {
      length = remaining
    }
  }
  encoding = String(encoding || 'utf8').toLowerCase()

  var ret
  switch (encoding) {
    case 'hex':
      ret = _hexWrite(this, string, offset, length)
      break
    case 'utf8':
    case 'utf-8':
      ret = _utf8Write(this, string, offset, length)
      break
    case 'ascii':
      ret = _asciiWrite(this, string, offset, length)
      break
    case 'binary':
      ret = _binaryWrite(this, string, offset, length)
      break
    case 'base64':
      ret = _base64Write(this, string, offset, length)
      break
    case 'ucs2':
    case 'ucs-2':
    case 'utf16le':
    case 'utf-16le':
      ret = _utf16leWrite(this, string, offset, length)
      break
    default:
      throw new Error('Unknown encoding')
  }
  return ret
}

Buffer.prototype.toString = function (encoding, start, end) {
  var self = this

  encoding = String(encoding || 'utf8').toLowerCase()
  start = Number(start) || 0
  end = (end !== undefined)
    ? Number(end)
    : end = self.length

  // Fastpath empty strings
  if (end === start)
    return ''

  var ret
  switch (encoding) {
    case 'hex':
      ret = _hexSlice(self, start, end)
      break
    case 'utf8':
    case 'utf-8':
      ret = _utf8Slice(self, start, end)
      break
    case 'ascii':
      ret = _asciiSlice(self, start, end)
      break
    case 'binary':
      ret = _binarySlice(self, start, end)
      break
    case 'base64':
      ret = _base64Slice(self, start, end)
      break
    case 'ucs2':
    case 'ucs-2':
    case 'utf16le':
    case 'utf-16le':
      ret = _utf16leSlice(self, start, end)
      break
    default:
      throw new Error('Unknown encoding')
  }
  return ret
}

Buffer.prototype.toJSON = function () {
  return {
    type: 'Buffer',
    data: Array.prototype.slice.call(this._arr || this, 0)
  }
}

// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)
Buffer.prototype.copy = function (target, target_start, start, end) {
  var source = this

  if (!start) start = 0
  if (!end && end !== 0) end = this.length
  if (!target_start) target_start = 0

  // Copy 0 bytes; we're done
  if (end === start) return
  if (target.length === 0 || source.length === 0) return

  // Fatal error conditions
  assert(end >= start, 'sourceEnd < sourceStart')
  assert(target_start >= 0 && target_start < target.length,
      'targetStart out of bounds')
  assert(start >= 0 && start < source.length, 'sourceStart out of bounds')
  assert(end >= 0 && end <= source.length, 'sourceEnd out of bounds')

  // Are we oob?
  if (end > this.length)
    end = this.length
  if (target.length - target_start < end - start)
    end = target.length - target_start + start

  var len = end - start

  if (len < 100 || !Buffer._useTypedArrays) {
    for (var i = 0; i < len; i++)
      target[i + target_start] = this[i + start]
  } else {
    target._set(this.subarray(start, start + len), target_start)
  }
}

function _base64Slice (buf, start, end) {
  if (start === 0 && end === buf.length) {
    return base64.fromByteArray(buf)
  } else {
    return base64.fromByteArray(buf.slice(start, end))
  }
}

function _utf8Slice (buf, start, end) {
  var res = ''
  var tmp = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; i++) {
    if (buf[i] <= 0x7F) {
      res += decodeUtf8Char(tmp) + String.fromCharCode(buf[i])
      tmp = ''
    } else {
      tmp += '%' + buf[i].toString(16)
    }
  }

  return res + decodeUtf8Char(tmp)
}

function _asciiSlice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; i++)
    ret += String.fromCharCode(buf[i])
  return ret
}

function _binarySlice (buf, start, end) {
  return _asciiSlice(buf, start, end)
}

function _hexSlice (buf, start, end) {
  var len = buf.length

  if (!start || start < 0) start = 0
  if (!end || end < 0 || end > len) end = len

  var out = ''
  for (var i = start; i < end; i++) {
    out += toHex(buf[i])
  }
  return out
}

function _utf16leSlice (buf, start, end) {
  var bytes = buf.slice(start, end)
  var res = ''
  for (var i = 0; i < bytes.length; i += 2) {
    res += String.fromCharCode(bytes[i] + bytes[i+1] * 256)
  }
  return res
}

Buffer.prototype.slice = function (start, end) {
  var len = this.length
  start = clamp(start, len, 0)
  end = clamp(end, len, len)

  if (Buffer._useTypedArrays) {
    return Buffer._augment(this.subarray(start, end))
  } else {
    var sliceLen = end - start
    var newBuf = new Buffer(sliceLen, undefined, true)
    for (var i = 0; i < sliceLen; i++) {
      newBuf[i] = this[i + start]
    }
    return newBuf
  }
}

// `get` will be removed in Node 0.13+
Buffer.prototype.get = function (offset) {
  console.log('.get() is deprecated. Access using array indexes instead.')
  return this.readUInt8(offset)
}

// `set` will be removed in Node 0.13+
Buffer.prototype.set = function (v, offset) {
  console.log('.set() is deprecated. Access using array indexes instead.')
  return this.writeUInt8(v, offset)
}

Buffer.prototype.readUInt8 = function (offset, noAssert) {
  if (!noAssert) {
    assert(offset !== undefined && offset !== null, 'missing offset')
    assert(offset < this.length, 'Trying to read beyond buffer length')
  }

  if (offset >= this.length)
    return

  return this[offset]
}

function _readUInt16 (buf, offset, littleEndian, noAssert) {
  if (!noAssert) {
    assert(typeof littleEndian === 'boolean', 'missing or invalid endian')
    assert(offset !== undefined && offset !== null, 'missing offset')
    assert(offset + 1 < buf.length, 'Trying to read beyond buffer length')
  }

  var len = buf.length
  if (offset >= len)
    return

  var val
  if (littleEndian) {
    val = buf[offset]
    if (offset + 1 < len)
      val |= buf[offset + 1] << 8
  } else {
    val = buf[offset] << 8
    if (offset + 1 < len)
      val |= buf[offset + 1]
  }
  return val
}

Buffer.prototype.readUInt16LE = function (offset, noAssert) {
  return _readUInt16(this, offset, true, noAssert)
}

Buffer.prototype.readUInt16BE = function (offset, noAssert) {
  return _readUInt16(this, offset, false, noAssert)
}

function _readUInt32 (buf, offset, littleEndian, noAssert) {
  if (!noAssert) {
    assert(typeof littleEndian === 'boolean', 'missing or invalid endian')
    assert(offset !== undefined && offset !== null, 'missing offset')
    assert(offset + 3 < buf.length, 'Trying to read beyond buffer length')
  }

  var len = buf.length
  if (offset >= len)
    return

  var val
  if (littleEndian) {
    if (offset + 2 < len)
      val = buf[offset + 2] << 16
    if (offset + 1 < len)
      val |= buf[offset + 1] << 8
    val |= buf[offset]
    if (offset + 3 < len)
      val = val + (buf[offset + 3] << 24 >>> 0)
  } else {
    if (offset + 1 < len)
      val = buf[offset + 1] << 16
    if (offset + 2 < len)
      val |= buf[offset + 2] << 8
    if (offset + 3 < len)
      val |= buf[offset + 3]
    val = val + (buf[offset] << 24 >>> 0)
  }
  return val
}

Buffer.prototype.readUInt32LE = function (offset, noAssert) {
  return _readUInt32(this, offset, true, noAssert)
}

Buffer.prototype.readUInt32BE = function (offset, noAssert) {
  return _readUInt32(this, offset, false, noAssert)
}

Buffer.prototype.readInt8 = function (offset, noAssert) {
  if (!noAssert) {
    assert(offset !== undefined && offset !== null,
        'missing offset')
    assert(offset < this.length, 'Trying to read beyond buffer length')
  }

  if (offset >= this.length)
    return

  var neg = this[offset] & 0x80
  if (neg)
    return (0xff - this[offset] + 1) * -1
  else
    return this[offset]
}

function _readInt16 (buf, offset, littleEndian, noAssert) {
  if (!noAssert) {
    assert(typeof littleEndian === 'boolean', 'missing or invalid endian')
    assert(offset !== undefined && offset !== null, 'missing offset')
    assert(offset + 1 < buf.length, 'Trying to read beyond buffer length')
  }

  var len = buf.length
  if (offset >= len)
    return

  var val = _readUInt16(buf, offset, littleEndian, true)
  var neg = val & 0x8000
  if (neg)
    return (0xffff - val + 1) * -1
  else
    return val
}

Buffer.prototype.readInt16LE = function (offset, noAssert) {
  return _readInt16(this, offset, true, noAssert)
}

Buffer.prototype.readInt16BE = function (offset, noAssert) {
  return _readInt16(this, offset, false, noAssert)
}

function _readInt32 (buf, offset, littleEndian, noAssert) {
  if (!noAssert) {
    assert(typeof littleEndian === 'boolean', 'missing or invalid endian')
    assert(offset !== undefined && offset !== null, 'missing offset')
    assert(offset + 3 < buf.length, 'Trying to read beyond buffer length')
  }

  var len = buf.length
  if (offset >= len)
    return

  var val = _readUInt32(buf, offset, littleEndian, true)
  var neg = val & 0x80000000
  if (neg)
    return (0xffffffff - val + 1) * -1
  else
    return val
}

Buffer.prototype.readInt32LE = function (offset, noAssert) {
  return _readInt32(this, offset, true, noAssert)
}

Buffer.prototype.readInt32BE = function (offset, noAssert) {
  return _readInt32(this, offset, false, noAssert)
}

function _readFloat (buf, offset, littleEndian, noAssert) {
  if (!noAssert) {
    assert(typeof littleEndian === 'boolean', 'missing or invalid endian')
    assert(offset + 3 < buf.length, 'Trying to read beyond buffer length')
  }

  return ieee754.read(buf, offset, littleEndian, 23, 4)
}

Buffer.prototype.readFloatLE = function (offset, noAssert) {
  return _readFloat(this, offset, true, noAssert)
}

Buffer.prototype.readFloatBE = function (offset, noAssert) {
  return _readFloat(this, offset, false, noAssert)
}

function _readDouble (buf, offset, littleEndian, noAssert) {
  if (!noAssert) {
    assert(typeof littleEndian === 'boolean', 'missing or invalid endian')
    assert(offset + 7 < buf.length, 'Trying to read beyond buffer length')
  }

  return ieee754.read(buf, offset, littleEndian, 52, 8)
}

Buffer.prototype.readDoubleLE = function (offset, noAssert) {
  return _readDouble(this, offset, true, noAssert)
}

Buffer.prototype.readDoubleBE = function (offset, noAssert) {
  return _readDouble(this, offset, false, noAssert)
}

Buffer.prototype.writeUInt8 = function (value, offset, noAssert) {
  if (!noAssert) {
    assert(value !== undefined && value !== null, 'missing value')
    assert(offset !== undefined && offset !== null, 'missing offset')
    assert(offset < this.length, 'trying to write beyond buffer length')
    verifuint(value, 0xff)
  }

  if (offset >= this.length) return

  this[offset] = value
}

function _writeUInt16 (buf, value, offset, littleEndian, noAssert) {
  if (!noAssert) {
    assert(value !== undefined && value !== null, 'missing value')
    assert(typeof littleEndian === 'boolean', 'missing or invalid endian')
    assert(offset !== undefined && offset !== null, 'missing offset')
    assert(offset + 1 < buf.length, 'trying to write beyond buffer length')
    verifuint(value, 0xffff)
  }

  var len = buf.length
  if (offset >= len)
    return

  for (var i = 0, j = Math.min(len - offset, 2); i < j; i++) {
    buf[offset + i] =
        (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>
            (littleEndian ? i : 1 - i) * 8
  }
}

Buffer.prototype.writeUInt16LE = function (value, offset, noAssert) {
  _writeUInt16(this, value, offset, true, noAssert)
}

Buffer.prototype.writeUInt16BE = function (value, offset, noAssert) {
  _writeUInt16(this, value, offset, false, noAssert)
}

function _writeUInt32 (buf, value, offset, littleEndian, noAssert) {
  if (!noAssert) {
    assert(value !== undefined && value !== null, 'missing value')
    assert(typeof littleEndian === 'boolean', 'missing or invalid endian')
    assert(offset !== undefined && offset !== null, 'missing offset')
    assert(offset + 3 < buf.length, 'trying to write beyond buffer length')
    verifuint(value, 0xffffffff)
  }

  var len = buf.length
  if (offset >= len)
    return

  for (var i = 0, j = Math.min(len - offset, 4); i < j; i++) {
    buf[offset + i] =
        (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff
  }
}

Buffer.prototype.writeUInt32LE = function (value, offset, noAssert) {
  _writeUInt32(this, value, offset, true, noAssert)
}

Buffer.prototype.writeUInt32BE = function (value, offset, noAssert) {
  _writeUInt32(this, value, offset, false, noAssert)
}

Buffer.prototype.writeInt8 = function (value, offset, noAssert) {
  if (!noAssert) {
    assert(value !== undefined && value !== null, 'missing value')
    assert(offset !== undefined && offset !== null, 'missing offset')
    assert(offset < this.length, 'Trying to write beyond buffer length')
    verifsint(value, 0x7f, -0x80)
  }

  if (offset >= this.length)
    return

  if (value >= 0)
    this.writeUInt8(value, offset, noAssert)
  else
    this.writeUInt8(0xff + value + 1, offset, noAssert)
}

function _writeInt16 (buf, value, offset, littleEndian, noAssert) {
  if (!noAssert) {
    assert(value !== undefined && value !== null, 'missing value')
    assert(typeof littleEndian === 'boolean', 'missing or invalid endian')
    assert(offset !== undefined && offset !== null, 'missing offset')
    assert(offset + 1 < buf.length, 'Trying to write beyond buffer length')
    verifsint(value, 0x7fff, -0x8000)
  }

  var len = buf.length
  if (offset >= len)
    return

  if (value >= 0)
    _writeUInt16(buf, value, offset, littleEndian, noAssert)
  else
    _writeUInt16(buf, 0xffff + value + 1, offset, littleEndian, noAssert)
}

Buffer.prototype.writeInt16LE = function (value, offset, noAssert) {
  _writeInt16(this, value, offset, true, noAssert)
}

Buffer.prototype.writeInt16BE = function (value, offset, noAssert) {
  _writeInt16(this, value, offset, false, noAssert)
}

function _writeInt32 (buf, value, offset, littleEndian, noAssert) {
  if (!noAssert) {
    assert(value !== undefined && value !== null, 'missing value')
    assert(typeof littleEndian === 'boolean', 'missing or invalid endian')
    assert(offset !== undefined && offset !== null, 'missing offset')
    assert(offset + 3 < buf.length, 'Trying to write beyond buffer length')
    verifsint(value, 0x7fffffff, -0x80000000)
  }

  var len = buf.length
  if (offset >= len)
    return

  if (value >= 0)
    _writeUInt32(buf, value, offset, littleEndian, noAssert)
  else
    _writeUInt32(buf, 0xffffffff + value + 1, offset, littleEndian, noAssert)
}

Buffer.prototype.writeInt32LE = function (value, offset, noAssert) {
  _writeInt32(this, value, offset, true, noAssert)
}

Buffer.prototype.writeInt32BE = function (value, offset, noAssert) {
  _writeInt32(this, value, offset, false, noAssert)
}

function _writeFloat (buf, value, offset, littleEndian, noAssert) {
  if (!noAssert) {
    assert(value !== undefined && value !== null, 'missing value')
    assert(typeof littleEndian === 'boolean', 'missing or invalid endian')
    assert(offset !== undefined && offset !== null, 'missing offset')
    assert(offset + 3 < buf.length, 'Trying to write beyond buffer length')
    verifIEEE754(value, 3.4028234663852886e+38, -3.4028234663852886e+38)
  }

  var len = buf.length
  if (offset >= len)
    return

  ieee754.write(buf, value, offset, littleEndian, 23, 4)
}

Buffer.prototype.writeFloatLE = function (value, offset, noAssert) {
  _writeFloat(this, value, offset, true, noAssert)
}

Buffer.prototype.writeFloatBE = function (value, offset, noAssert) {
  _writeFloat(this, value, offset, false, noAssert)
}

function _writeDouble (buf, value, offset, littleEndian, noAssert) {
  if (!noAssert) {
    assert(value !== undefined && value !== null, 'missing value')
    assert(typeof littleEndian === 'boolean', 'missing or invalid endian')
    assert(offset !== undefined && offset !== null, 'missing offset')
    assert(offset + 7 < buf.length,
        'Trying to write beyond buffer length')
    verifIEEE754(value, 1.7976931348623157E+308, -1.7976931348623157E+308)
  }

  var len = buf.length
  if (offset >= len)
    return

  ieee754.write(buf, value, offset, littleEndian, 52, 8)
}

Buffer.prototype.writeDoubleLE = function (value, offset, noAssert) {
  _writeDouble(this, value, offset, true, noAssert)
}

Buffer.prototype.writeDoubleBE = function (value, offset, noAssert) {
  _writeDouble(this, value, offset, false, noAssert)
}

// fill(value, start=0, end=buffer.length)
Buffer.prototype.fill = function (value, start, end) {
  if (!value) value = 0
  if (!start) start = 0
  if (!end) end = this.length

  if (typeof value === 'string') {
    value = value.charCodeAt(0)
  }

  assert(typeof value === 'number' && !isNaN(value), 'value is not a number')
  assert(end >= start, 'end < start')

  // Fill 0 bytes; we're done
  if (end === start) return
  if (this.length === 0) return

  assert(start >= 0 && start < this.length, 'start out of bounds')
  assert(end >= 0 && end <= this.length, 'end out of bounds')

  for (var i = start; i < end; i++) {
    this[i] = value
  }
}

Buffer.prototype.inspect = function () {
  var out = []
  var len = this.length
  for (var i = 0; i < len; i++) {
    out[i] = toHex(this[i])
    if (i === exports.INSPECT_MAX_BYTES) {
      out[i + 1] = '...'
      break
    }
  }
  return '<Buffer ' + out.join(' ') + '>'
}

/**
 * Creates a new `ArrayBuffer` with the *copied* memory of the buffer instance.
 * Added in Node 0.12. Only available in browsers that support ArrayBuffer.
 */
Buffer.prototype.toArrayBuffer = function () {
  if (typeof Uint8Array !== 'undefined') {
    if (Buffer._useTypedArrays) {
      return (new Buffer(this)).buffer
    } else {
      var buf = new Uint8Array(this.length)
      for (var i = 0, len = buf.length; i < len; i += 1)
        buf[i] = this[i]
      return buf.buffer
    }
  } else {
    throw new Error('Buffer.toArrayBuffer not supported in this browser')
  }
}

// HELPER FUNCTIONS
// ================

function stringtrim (str) {
  if (str.trim) return str.trim()
  return str.replace(/^\s+|\s+$/g, '')
}

var BP = Buffer.prototype

/**
 * Augment a Uint8Array *instance* (not the Uint8Array class!) with Buffer methods
 */
Buffer._augment = function (arr) {
  arr._isBuffer = true

  // save reference to original Uint8Array get/set methods before overwriting
  arr._get = arr.get
  arr._set = arr.set

  // deprecated, will be removed in node 0.13+
  arr.get = BP.get
  arr.set = BP.set

  arr.write = BP.write
  arr.toString = BP.toString
  arr.toLocaleString = BP.toString
  arr.toJSON = BP.toJSON
  arr.copy = BP.copy
  arr.slice = BP.slice
  arr.readUInt8 = BP.readUInt8
  arr.readUInt16LE = BP.readUInt16LE
  arr.readUInt16BE = BP.readUInt16BE
  arr.readUInt32LE = BP.readUInt32LE
  arr.readUInt32BE = BP.readUInt32BE
  arr.readInt8 = BP.readInt8
  arr.readInt16LE = BP.readInt16LE
  arr.readInt16BE = BP.readInt16BE
  arr.readInt32LE = BP.readInt32LE
  arr.readInt32BE = BP.readInt32BE
  arr.readFloatLE = BP.readFloatLE
  arr.readFloatBE = BP.readFloatBE
  arr.readDoubleLE = BP.readDoubleLE
  arr.readDoubleBE = BP.readDoubleBE
  arr.writeUInt8 = BP.writeUInt8
  arr.writeUInt16LE = BP.writeUInt16LE
  arr.writeUInt16BE = BP.writeUInt16BE
  arr.writeUInt32LE = BP.writeUInt32LE
  arr.writeUInt32BE = BP.writeUInt32BE
  arr.writeInt8 = BP.writeInt8
  arr.writeInt16LE = BP.writeInt16LE
  arr.writeInt16BE = BP.writeInt16BE
  arr.writeInt32LE = BP.writeInt32LE
  arr.writeInt32BE = BP.writeInt32BE
  arr.writeFloatLE = BP.writeFloatLE
  arr.writeFloatBE = BP.writeFloatBE
  arr.writeDoubleLE = BP.writeDoubleLE
  arr.writeDoubleBE = BP.writeDoubleBE
  arr.fill = BP.fill
  arr.inspect = BP.inspect
  arr.toArrayBuffer = BP.toArrayBuffer

  return arr
}

// slice(start, end)
function clamp (index, len, defaultValue) {
  if (typeof index !== 'number') return defaultValue
  index = ~~index;  // Coerce to integer.
  if (index >= len) return len
  if (index >= 0) return index
  index += len
  if (index >= 0) return index
  return 0
}

function coerce (length) {
  // Coerce length to a number (possibly NaN), round up
  // in case it's fractional (e.g. 123.456) then do a
  // double negate to coerce a NaN to 0. Easy, right?
  length = ~~Math.ceil(+length)
  return length < 0 ? 0 : length
}

function isArray (subject) {
  return (Array.isArray || function (subject) {
    return Object.prototype.toString.call(subject) === '[object Array]'
  })(subject)
}

function isArrayish (subject) {
  return isArray(subject) || Buffer.isBuffer(subject) ||
      subject && typeof subject === 'object' &&
      typeof subject.length === 'number'
}

function toHex (n) {
  if (n < 16) return '0' + n.toString(16)
  return n.toString(16)
}

function utf8ToBytes (str) {
  var byteArray = []
  for (var i = 0; i < str.length; i++) {
    var b = str.charCodeAt(i)
    if (b <= 0x7F)
      byteArray.push(str.charCodeAt(i))
    else {
      var start = i
      if (b >= 0xD800 && b <= 0xDFFF) i++
      var h = encodeURIComponent(str.slice(start, i+1)).substr(1).split('%')
      for (var j = 0; j < h.length; j++)
        byteArray.push(parseInt(h[j], 16))
    }
  }
  return byteArray
}

function asciiToBytes (str) {
  var byteArray = []
  for (var i = 0; i < str.length; i++) {
    // Node's code seems to be doing this and not & 0x7F..
    byteArray.push(str.charCodeAt(i) & 0xFF)
  }
  return byteArray
}

function utf16leToBytes (str) {
  var c, hi, lo
  var byteArray = []
  for (var i = 0; i < str.length; i++) {
    c = str.charCodeAt(i)
    hi = c >> 8
    lo = c % 256
    byteArray.push(lo)
    byteArray.push(hi)
  }

  return byteArray
}

function base64ToBytes (str) {
  return base64.toByteArray(str)
}

function blitBuffer (src, dst, offset, length) {
  var pos
  for (var i = 0; i < length; i++) {
    if ((i + offset >= dst.length) || (i >= src.length))
      break
    dst[i + offset] = src[i]
  }
  return i
}

function decodeUtf8Char (str) {
  try {
    return decodeURIComponent(str)
  } catch (err) {
    return String.fromCharCode(0xFFFD) // UTF 8 invalid char
  }
}

/*
 * We have to make sure that the value is a valid integer. This means that it
 * is non-negative. It has no fractional component and that it does not
 * exceed the maximum allowed value.
 */
function verifuint (value, max) {
  assert(typeof value === 'number', 'cannot write a non-number as a number')
  assert(value >= 0, 'specified a negative value for writing an unsigned value')
  assert(value <= max, 'value is larger than maximum value for type')
  assert(Math.floor(value) === value, 'value has a fractional component')
}

function verifsint (value, max, min) {
  assert(typeof value === 'number', 'cannot write a non-number as a number')
  assert(value <= max, 'value larger than maximum allowed value')
  assert(value >= min, 'value smaller than minimum allowed value')
  assert(Math.floor(value) === value, 'value has a fractional component')
}

function verifIEEE754 (value, max, min) {
  assert(typeof value === 'number', 'cannot write a non-number as a number')
  assert(value <= max, 'value larger than maximum allowed value')
  assert(value >= min, 'value smaller than minimum allowed value')
}

function assert (test, message) {
  if (!test) throw new Error(message || 'Failed assertion')
}

}).call(this,require("2ionoC"),typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/..\\node_modules\\gulp-browserify\\node_modules\\buffer\\index.js","/..\\node_modules\\gulp-browserify\\node_modules\\buffer")
},{"2ionoC":5,"base64-js":2,"buffer":3,"ieee754":4}],4:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname){
exports.read = function (buffer, offset, isLE, mLen, nBytes) {
  var e, m
  var eLen = (nBytes * 8) - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var nBits = -7
  var i = isLE ? (nBytes - 1) : 0
  var d = isLE ? -1 : 1
  var s = buffer[offset + i]

  i += d

  e = s & ((1 << (-nBits)) - 1)
  s >>= (-nBits)
  nBits += eLen
  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}

  m = e & ((1 << (-nBits)) - 1)
  e >>= (-nBits)
  nBits += mLen
  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}

  if (e === 0) {
    e = 1 - eBias
  } else if (e === eMax) {
    return m ? NaN : ((s ? -1 : 1) * Infinity)
  } else {
    m = m + Math.pow(2, mLen)
    e = e - eBias
  }
  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)
}

exports.write = function (buffer, value, offset, isLE, mLen, nBytes) {
  var e, m, c
  var eLen = (nBytes * 8) - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)
  var i = isLE ? 0 : (nBytes - 1)
  var d = isLE ? 1 : -1
  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0

  value = Math.abs(value)

  if (isNaN(value) || value === Infinity) {
    m = isNaN(value) ? 1 : 0
    e = eMax
  } else {
    e = Math.floor(Math.log(value) / Math.LN2)
    if (value * (c = Math.pow(2, -e)) < 1) {
      e--
      c *= 2
    }
    if (e + eBias >= 1) {
      value += rt / c
    } else {
      value += rt * Math.pow(2, 1 - eBias)
    }
    if (value * c >= 2) {
      e++
      c /= 2
    }

    if (e + eBias >= eMax) {
      m = 0
      e = eMax
    } else if (e + eBias >= 1) {
      m = ((value * c) - 1) * Math.pow(2, mLen)
      e = e + eBias
    } else {
      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)
      e = 0
    }
  }

  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}

  e = (e << mLen) | m
  eLen += mLen
  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}

  buffer[offset + i - d] |= s * 128
}

}).call(this,require("2ionoC"),typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/..\\node_modules\\gulp-browserify\\node_modules\\ieee754\\index.js","/..\\node_modules\\gulp-browserify\\node_modules\\ieee754")
},{"2ionoC":5,"buffer":3}],5:[function(require,module,exports){
(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname){
// shim for using process in browser

var process = module.exports = {};

process.nextTick = (function () {
    var canSetImmediate = typeof window !== 'undefined'
    && window.setImmediate;
    var canPost = typeof window !== 'undefined'
    && window.postMessage && window.addEventListener
    ;

    if (canSetImmediate) {
        return function (f) { return window.setImmediate(f) };
    }

    if (canPost) {
        var queue = [];
        window.addEventListener('message', function (ev) {
            var source = ev.source;
            if ((source === window || source === null) && ev.data === 'process-tick') {
                ev.stopPropagation();
                if (queue.length > 0) {
                    var fn = queue.shift();
                    fn();
                }
            }
        }, true);

        return function nextTick(fn) {
            queue.push(fn);
            window.postMessage('process-tick', '*');
        };
    }

    return function nextTick(fn) {
        setTimeout(fn, 0);
    };
})();

process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;

process.binding = function (name) {
    throw new Error('process.binding is not supported');
}

// TODO(shtylman)
process.cwd = function () { return '/' };
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};

}).call(this,require("2ionoC"),typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/..\\node_modules\\gulp-browserify\\node_modules\\process\\browser.js","/..\\node_modules\\gulp-browserify\\node_modules\\process")
},{"2ionoC":5,"buffer":3}]},{},[1])
//# sourceMappingURL=data:application/json;base64,
