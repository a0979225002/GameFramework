{"version":3,"sources":["assets\\script\\Framework\\LoadResources\\LoadType\\TextLoad.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,gDAA2C;AAC3C,oDAA+C;AAE/C;IAAsC,4BAAS;IAE3C,kBAAY,QAAgB,EAAE,IAAS,EAAE,GAAW,EAAE,MAAc;eAChE,kBAAM,QAAQ,EAAE,IAAI,EAAE,GAAG,EAAE,MAAM,CAAC;IAEtC,CAAC;IAED;;;;;OAKG;IACH,kCAAe,GAAf,UAAgB,GAAW,EAAE,KAAmB;;QAE5C,MAAM;QACN,IAAI,SAAS,GAAkB,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;QAChE,IAAI,OAAO,GAAG,IAAI,GAAG,EAAkB,CAAC;;YAExC,KAAkB,IAAA,cAAA,SAAA,SAAS,CAAA,oCAAA,2DAAE;gBAAxB,IAAI,KAAK,sBAAA;gBAEV,aAAa;gBACb,IAAI,KAAK,GAAkB,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;gBAE5C,sBAAsB;gBACtB,IAAI,KAAG,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;gBACnB,IAAI,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;gBAErB,IAAI,KAAG,IAAI,EAAE,EAAE;oBACX,SAAS;iBACZ;gBAED,qBAAqB;gBACrB,IAAI,eAAe,GAAG,KAAK,CAAC,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC;gBAEjD,OAAO,CAAC,GAAG,CAAC,KAAG,EAAE,eAAe,CAAC,CAAC;aACrC;;;;;;;;;QAED,wBAAc,CAAC,QAAQ,CAAC,WAAW,CAAC,GAAG,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC;QAEtD,UAAU;QACV,gCAAgC;QAChC,IAAI,CAAC,iBAAiB,EAAE,CAAC;IAC7B,CAAC;IAED,qCAAkB,GAAlB,UAAmB,GAAW,EAAE,KAAa,EAAE,MAAc;QAEzD,IAAI,IAAI,CAAC,MAAM,KAAK,WAAW,EAAE;YAC7B,wBAAc,CAAC,QAAQ,CAAC,gBAAgB,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;SACtE;aAAM;YACH,wBAAc,CAAC,QAAQ,CAAC,kBAAkB,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;SACxE;QAED,wBAAc,CAAC,QAAQ,CAAC,qBAAqB,CAAC,GAAG,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC;IAEtE,CAAC;IACL,eAAC;AAAD,CAxDA,AAwDC,CAxDqC,mBAAS,GAwD9C","file":"","sourceRoot":"/","sourcesContent":["import ALoadType from \"../ILoad/ALoadType\";\r\nimport LoadResManager from \"../LoadResManager\";\r\n\r\nexport default class TextLoad extends ALoadType {\r\n\r\n    constructor(dataName: string, type: any, url: string, folder: string) {\r\n        super(dataName, type, url, folder);\r\n\r\n    }\r\n\r\n    /**\r\n     *  目前只能傳入 .CSV 檔案,目前無從判斷該檔案副檔名\r\n     *  因此需自行檢查回傳資料是否正確\r\n     * @param key\r\n     * @param asset\r\n     */\r\n    setResToManager(key: string, asset: cc.TextAsset) {\r\n\r\n        //清除回車\r\n        let textArray: Array<string> = asset[0][\"text\"].split(/[\\s\\n]/);\r\n        let textMap = new Map<string, string>();\r\n\r\n        for (let texts of textArray) {\r\n\r\n            //切割 CSV特有的 ,\r\n            let array: Array<string> = texts.split(',');\r\n\r\n            //你可以在第三格放入註解,我只抓前兩格資料\r\n            let key = array[0];\r\n            let value = array[1];\r\n\r\n            if (key == \"\") {\r\n                continue;\r\n            }\r\n\r\n            //清除所有包含的 \"\" '' 等特殊符號\r\n            let processingvalue = value.replace(/['\"]/g, '');\r\n\r\n            textMap.set(key, processingvalue);\r\n        }\r\n\r\n        LoadResManager.instance.readFileRes.set(key, textMap);\r\n\r\n        //目的解決異步操作\r\n        //當資源都載入到LoadManager時才回傳以載入完成的狀態\r\n        this.updateProgressEnd();\r\n    }\r\n\r\n    updateManagerState(key: string, state: number, update: number) {\r\n\r\n        if (this.folder === \"resources\") {\r\n            LoadResManager.instance.initialLoadState.set(this.dataName, state);\r\n        } else {\r\n            LoadResManager.instance.secondaryLoadState.set(this.dataName, state);\r\n        }\r\n\r\n        LoadResManager.instance.loadMainEventCallback(key, update, state);\r\n\r\n    }\r\n}"]}