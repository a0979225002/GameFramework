{"version":3,"sources":["assets\\script\\Framework\\Error\\ErrorType\\FrameWorkError.ts"],"names":[],"mappings":";;;;;;AAAA,oEAA+D;AAC/D,6DAAmD;AACnD,+CAA0C;AAG1C;IAII;QAEI,IAAI,CAAC,YAAY,GAAG,IAAI,sBAAY,CAAA;IAExC,CAAC;IAED,uCAAc,GAAd,UAAe,OAA2B,EAAE,GAAQ;QAEhD,IAAI,2BAAiB,CAAC,QAAQ,CAAC,gBAAgB,EAAE;YAE7C,QAAQ,OAAO,EAAE;gBACb,KAAK,4BAAS,CAAC,WAAW;oBACtB,MAAM,IAAI,KAAK,CAAI,4BAAS,CAAC,WAAW,SAAI,GAAK,CAAC,CAAC;gBACvD,KAAK,4BAAS,CAAC,WAAW;oBACtB,MAAM,IAAI,KAAK,CAAI,4BAAS,CAAC,WAAW,SAAI,GAAK,CAAC,CAAC;gBACvD,KAAK,4BAAS,CAAC,MAAM;oBACjB,MAAM,IAAI,KAAK,CAAI,4BAAS,CAAC,MAAM,SAAI,GAAK,CAAC,CAAC;gBAClD,KAAK,4BAAS,CAAC,gBAAgB;oBAC3B,MAAM,IAAI,KAAK,CAAI,4BAAS,CAAC,gBAAgB,SAAI,GAAK,CAAC,CAAC;gBAC5D,KAAK,4BAAS,CAAC,WAAW;oBACtB,MAAM,IAAI,KAAK,CAAI,4BAAS,CAAC,WAAW,SAAI,GAAK,CAAC,CAAC;gBACvD,KAAK,4BAAS,CAAC,iBAAiB;oBAC5B,MAAM,IAAI,KAAK,CAAI,4BAAS,CAAC,iBAAiB,SAAI,GAAK,CAAC,CAAC;gBAC7D,KAAK,4BAAS,CAAC,QAAQ;oBACnB,MAAM,IAAI,KAAK,CAAI,4BAAS,CAAC,QAAQ,SAAI,GAAK,CAAC,CAAC;gBACpD,KAAK,4BAAS,CAAC,OAAO;oBAClB,MAAM,IAAI,KAAK,CAAI,4BAAS,CAAC,OAAO,SAAI,GAAK,CAAC,CAAC;gBACnD,KAAK,4BAAS,CAAC,kBAAkB;oBAC7B,MAAM,IAAI,KAAK,CAAI,4BAAS,CAAC,kBAAkB,SAAI,GAAK,CAAC,CAAC;gBAC9D,KAAK,4BAAS,CAAC,OAAO;oBAClB,MAAM,IAAI,KAAK,CAAI,4BAAS,CAAC,OAAO,SAAI,GAAK,CAAC,CAAC;gBACnD,KAAK,4BAAS,CAAC,WAAW;oBACtB,MAAM,IAAI,KAAK,CAAI,4BAAS,CAAC,WAAW,SAAI,GAAK,CAAC,CAAC;gBACvD,KAAK,4BAAS,CAAC,UAAU;oBACrB,MAAM,IAAI,KAAK,CAAI,4BAAS,CAAC,UAAU,SAAI,GAAK,CAAC,CAAC;gBACtD,KAAK,4BAAS,CAAC,aAAa;oBACxB,MAAM,IAAI,KAAK,CAAI,4BAAS,CAAC,aAAa,SAAI,GAAK,CAAC,CAAC;gBACzD,KAAK,4BAAS,CAAC,WAAW;oBACtB,MAAM,IAAI,KAAK,CAAI,4BAAS,CAAC,WAAW,SAAI,GAAK,CAAC,CAAC;gBACvD;oBACI,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;aACjD;SAEJ;aAAM;YAEH,OAAO,CAAC,GAAG,CAAC,yBAAyB,CAAC,CAAC;SAE1C;IACL,CAAC;IACL,qBAAC;AAAD,CArDA,AAqDC,IAAA","file":"","sourceRoot":"/","sourcesContent":["import SlotConfigManager from \"../../Config/SlotConfigManager\";\r\nimport {ErrorType} from \"../Enum/ErrorManagerEnum\";\r\nimport UnknownError from \"./UnknownError\";\r\n\r\n\r\nexport default class FrameWorkError {\r\n\r\n    private unknownError: UnknownError;\r\n\r\n    constructor() {\r\n\r\n        this.unknownError = new UnknownError\r\n\r\n    }\r\n\r\n    checkErrorType(message: string | ErrorType, obj: any) {\r\n\r\n        if (SlotConfigManager.instance.isFrameworkDebug) {\r\n\r\n            switch (message) {\r\n                case ErrorType.IsRunningFW:\r\n                    throw new Error(`${ErrorType.IsRunningFW} ${obj}`);\r\n                case ErrorType.UndefinedFW:\r\n                    throw new Error(`${ErrorType.UndefinedFW} ${obj}`);\r\n                case ErrorType.TypeFW:\r\n                    throw new Error(`${ErrorType.TypeFW} ${obj}`);\r\n                case ErrorType.AnimationErrorFW:\r\n                    throw new Error(`${ErrorType.AnimationErrorFW} ${obj}`);\r\n                case ErrorType.LoadErrorFW:\r\n                    throw new Error(`${ErrorType.LoadErrorFW} ${obj}`);\r\n                case ErrorType.WebRequestErrorFW:\r\n                    throw new Error(`${ErrorType.WebRequestErrorFW} ${obj}`);\r\n                case ErrorType.PrefabFW:\r\n                    throw new Error(`${ErrorType.PrefabFW} ${obj}`);\r\n                case ErrorType.MusicFW:\r\n                    throw new Error(`${ErrorType.MusicFW} ${obj}`);\r\n                case ErrorType.WebResponseErrorFW:\r\n                    throw new Error(`${ErrorType.WebResponseErrorFW} ${obj}`);\r\n                case ErrorType.SceneFW:\r\n                    throw new Error(`${ErrorType.SceneFW} ${obj}`);\r\n                case ErrorType.ProcedureFW:\r\n                    throw new Error(`${ErrorType.ProcedureFW} ${obj}`);\r\n                case ErrorType.ListenerFW:\r\n                    throw new Error(`${ErrorType.ListenerFW} ${obj}`);\r\n                case ErrorType.GameProcessFW:\r\n                    throw new Error(`${ErrorType.GameProcessFW} ${obj}`);\r\n                case ErrorType.SlotStyleFW:\r\n                    throw new Error(`${ErrorType.SlotStyleFW} ${obj}`);\r\n                default :\r\n                    this.unknownError.checkErrorType(message);\r\n            }\r\n\r\n        } else {\r\n\r\n            console.log(\"有例外錯誤,但你未開啟框架Debug,無法查看\");\r\n\r\n        }\r\n    }\r\n}"]}