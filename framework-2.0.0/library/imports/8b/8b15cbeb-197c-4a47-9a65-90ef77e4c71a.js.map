{"version":3,"sources":["assets\\script\\MainGameScript\\GameProcess\\MainGameNormalProcess.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,oEAA0E;AAC1E,oHAA+G;AAC/G,wHAAmH;AACnH,2EAAqE;AACrE,0EAAoE;AAEpE,8EAA2E;AAE3E,qFAAiF;AACjF,8CAA4C;AAC5C,+DAAyD;AACzD,uEAAiE;AACjE,6DAAuD;AAEvD;IAKI;QACI,IAAI,CAAC,YAAY;YACb,uCAAkB;iBACb,QAAQ,EAAgB;iBACxB,SAAS,CAAC,2BAAY,CAAC,MAAM,CAAC,CAAC;IAC5C,CAAC;IAEO,wCAAQ,GAAhB;QACI,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;YACjB,IAAI,CAAC,SAAS,GAAG,0BAAgB,CAAC,QAAQ,CAAC,IAAkB,CAAC;SACjE;IACL,CAAC;IACM,gDAAgB,GAAvB;QAAA,iBASC;QARG,IAAI,CAAC,QAAQ,EAAE,CAAC;QAChB,OAAO,IAAI,OAAO,CAAC,UAAO,OAAO;;gBAC7B,IAAI,CAAC,SAAS,CAAC,eAAe,EAAE,CAAC;gBACjC,uBAAa,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;gBAChC,wBAAc,CAAC,QAAQ,CAAC,YAAY,EAAE,CAAC;gBACvC,yBAAe,CAAC,QAAQ,CAAC,SAAS,GAAG,qBAAS,CAAC,OAAO,CAAC;gBACvD,OAAO,EAAE,CAAC;;;aACb,CAAC,CAAC;IACP,CAAC;IAEM,4CAAY,GAAnB;QAAA,iBAMC;QALG,OAAO,IAAI,OAAO,CAAC,UAAO,OAAO;;;;wBAC7B,iBAAQ,CAAC,WAAW,CAAC,KAAK,EAAE,yBAAe,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC;wBACnE,qBAAM,IAAI,CAAC,SAAS,CAAC,UAAU,EAAE,EAAA;;wBAAjC,SAAiC,CAAC;wBAClC,OAAO,EAAE,CAAC;;;;aACb,CAAC,CAAC;IACP,CAAC;IAEM,yCAAS,GAAhB;QAAA,iBAKC;QAJG,OAAO,IAAI,OAAO,CAAC,UAAO,OAAO;;;4BAC7B,qBAAM,IAAI,CAAC,SAAS,CAAC,gBAAgB,EAAE,EAAA;;wBAAvC,SAAuC,CAAC;wBACxC,OAAO,EAAE,CAAC;;;;aACb,CAAC,CAAC;IACP,CAAC;IAEM,4CAAY,GAAnB;QAAA,iBASC;QARG,EAAE,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;QACvB,OAAO,IAAI,OAAO,CAAC,UAAO,OAAO;;;;wBAC7B,IAAI,IAAI,CAAC,YAAY,CAAC,aAAa,IAAI,CAAC,EAAE;4BACtC,wBAAc,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;yBAClE;wBACD,qBAAM,IAAI,CAAC,aAAa,EAAE,EAAA;;wBAA1B,SAA0B,CAAC;wBAC3B,OAAO,EAAE,CAAC;;;;aACb,CAAC,CAAC;IACP,CAAC;IAGD,8CAAc,GAAd;QACI,yBAAe,CAAC,QAAQ,CAAC,SAAS,GAAG,qBAAS,CAAC,OAAO,CAAC;QACvD,OAAO,OAAO,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;IACtC,CAAC;IAGD,8CAAc,GAAd;QACI,mCAAmC;QACnC,IAAI,IAAI,CAAC,YAAY,CAAC,aAAa,GAAG,CAAC,EAAE;YACrC,yBAAe,CAAC,QAAQ,CAAC,SAAS,GAAG,qBAAS,CAAC,OAAO,CAAC;YACvD,yBAAe,CAAC,QAAQ,CAAC,aAAa,CAAC,oBAAQ,CAAC,IAAI,CAAC,CAAC;YACtD,OAAO;SACV;IACL,CAAC;IAEO,6CAAa,GAArB;QAAA,iBAsBC;QArBG,OAAO,IAAI,OAAO,CAAC,UAAA,OAAO;YACtB,IAAI,QAAQ,GAAG,KAAI,CAAC,YAAY,CAAC,aAAa,CAAC;YAC/C,IAAI,QAAQ,IAAI,CAAC,EAAE;gBACf,OAAO,EAAE,CAAC;gBACV,OAAO;aACV;YACD,IAAI,QAAQ,IAAI,CAAC,IAAI,KAAI,CAAC,YAAY,CAAC,YAAY,IAAI,CAAC,EAAE;gBACtD,kBAAkB;gBAClB,uCAA6B,CAAC,QAAQ,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;gBAC3D,6BAA6B;gBAC7B,UAAU,CAAC;oBACP,qCAA2B,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAI,CAAC,YAAY,CAAC,cAAc,CAAC,CAAA;oBAC7E,OAAO,EAAE,CAAC;gBACd,CAAC,EAAE,GAAG,CAAC,CAAC;aAEX;iBAAM,IAAI,KAAI,CAAC,YAAY,CAAC,YAAY,GAAG,CAAC,EAAE;gBAC3C,QAAQ;gBACR,IAAI,QAAQ,GAAG,KAAI,CAAC,YAAY,CAAC,aAAa,CAAC;gBAC/C,4BAAkB,CAAC,QAAQ,CAAC,iBAAiB,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;aACpE;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAEM,6CAAa,GAApB;QACI,OAAO,OAAO,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;IACtC,CAAC;IACL,4BAAC;AAAD,CAjGA,AAiGC,IAAA","file":"","sourceRoot":"/","sourcesContent":["import {GameState, GameType} from '../../Framework/Process/Enum/GameState'\r\nimport UserMoneyChangeNotification from \"../../Framework/Process/GameNotification/UserMoneyChangeNotification\";\r\nimport UserWinPointStateNotification from \"../../Framework/Process/GameNotification/UserWinPointStateNotification\";\r\nimport SlotGameManager from '../../Framework/Process/SlotGameManager'\r\nimport SlotStyleManager from '../../Framework/Slot/SlotStyleManager'\r\nimport NoLineSlot from '../../Framework/Slot/SlotType/NoLineSlot'\r\nimport {ResponseType} from \"../../Framework/WebResponse/Enum/ResponseType\";\r\nimport NoLineResult from \"../../Framework/WebResponse/SeverDataModel/NormalResult/NoLineResult\";\r\nimport {WebResponseManager} from '../../Framework/WebResponse/WebResponseManager'\r\nimport {socketJS} from '../../Socket/Socket'\r\nimport SlotController from '../Controller/SlotController'\r\nimport WinLevelController from '../Controller/WinLevelController'\r\nimport MainGameLabel from '../LabelEvent/MainGameLabel'\r\n\r\nexport default class MainGameNormalProcess implements ISlotProcedureExecutionContainer {\r\n\r\n    private slotStyle: NoLineSlot;\r\n    private normalResult: NoLineResult;\r\n\r\n    constructor() {\r\n        this.normalResult =\r\n            WebResponseManager\r\n                .instance<NoLineResult>()\r\n                .getResult(ResponseType.NORMAL);\r\n    }\r\n\r\n    private onCreate() {\r\n        if (!this.slotStyle) {\r\n            this.slotStyle = SlotStyleManager.instance.slot as NoLineSlot;\r\n        }\r\n    }\r\n    public onCustomizeStart(): Promise<void> {\r\n        this.onCreate();\r\n        return new Promise(async (resolve) => {\r\n            this.slotStyle.initializeState();\r\n            MainGameLabel.instance.remove();\r\n            SlotController.instance.closeWinGrid();\r\n            SlotGameManager.instance.gameState = GameState.PLAYING;\r\n            resolve();\r\n        });\r\n    }\r\n\r\n    public onSineInGrid(): Promise<void> {\r\n        return new Promise(async (resolve) => {\r\n            socketJS.SFSToServer(\"Bet\", SlotGameManager.instance.userBetPoint);\r\n            await this.slotStyle.sineInSlot();\r\n            resolve();\r\n        });\r\n    }\r\n\r\n    public onRunGrid(): Promise<void> {\r\n        return new Promise(async (resolve) => {\r\n            await this.slotStyle.runSlotAnimation();\r\n            resolve();\r\n        });\r\n    }\r\n\r\n    public onShowAnswer(): Promise<void> {\r\n        cc.log(\"onShowAnswer\");\r\n        return new Promise(async (resolve) => {\r\n            if (this.normalResult.TotalWinPoint != 0) {\r\n                SlotController.instance.showWinGrid(this.normalResult.GridWin);\r\n            }\r\n            await this.checkWinPoint();\r\n            resolve();\r\n        });\r\n    }\r\n\r\n\r\n    onCustomizeEnd(): Promise<void> {\r\n        SlotGameManager.instance.gameState = GameState.STANDBY;\r\n        return Promise.resolve(undefined);\r\n    }\r\n\r\n\r\n    onChangeStatus() {\r\n        //如果一般模式中response的免費次數不等於0,進入free狀態\r\n        if (this.normalResult.FreeSpinCount > 0) {\r\n            SlotGameManager.instance.gameState = GameState.FREEING;\r\n            SlotGameManager.instance.changeProcess(GameType.FREE);\r\n            return;\r\n        }\r\n    }\r\n\r\n    private checkWinPoint(): Promise<void> {\r\n        return new Promise(resolve => {\r\n            let winPoint = this.normalResult.TotalWinPoint;\r\n            if (winPoint == 0) {\r\n                resolve();\r\n                return;\r\n            }\r\n            if (winPoint != 0 && this.normalResult.BaseLevelWin == 0) {\r\n                //顯示(level:0)一般獎動畫\r\n                UserWinPointStateNotification.instance.notify(winPoint, 0);\r\n                //配合一般獎動畫時間,關閉一般獎時,更新 user 金額\r\n                setTimeout(() => {\r\n                    UserMoneyChangeNotification.instance.notify(this.normalResult.UserPointAfter)\r\n                    resolve();\r\n                }, 900);\r\n\r\n            } else if (this.normalResult.BaseLevelWin > 0) {\r\n                //顯示大獎動畫\r\n                let nowPoint = this.normalResult.TotalWinPoint;\r\n                WinLevelController.instance.showWinAboveState(nowPoint, resolve);\r\n            }\r\n        });\r\n    }\r\n\r\n    public onSineOutGrid(): Promise<void> {\r\n        return Promise.resolve(undefined);\r\n    }\r\n}"]}