{"version":3,"sources":["assets\\script\\MainGameScript\\Controller\\MainGameController.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,oEAAgE;AAChE,2EAAqE;AACrE,oEAAwE;AACxE,mEAA6D;AAC7D,6HAAwH;AACxH,iHAA4G;AAEtG,IAAA,KAAsB,EAAE,CAAC,UAAU,EAAlC,OAAO,aAAA,EAAE,QAAQ,cAAiB,CAAC;AAI1C;IAAgD,sCAAY;IAA5D;QAAA,qEA+CC;QA5CW,aAAO,GAAY,IAAI,CAAC;QAExB,aAAO,GAAY,IAAI,CAAC;QAExB,eAAS,GAAY,IAAI,CAAA;QAEzB,eAAS,GAAY,IAAI,CAAA;;IAsCrC,CAAC;2BA/CoB,kBAAkB;IAYzB,mCAAM,GAAhB;QACI,oBAAkB,CAAC,QAAQ,GAAG,IAAI,CAAC;QACnC,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,KAAK,CAAC;QAC5B,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,KAAK,CAAC;QAC5B,0CAAgC;aAC3B,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,8BAA8B,EAAE,EAAE,IAAI,CAAC,CAAC;IACzE,CAAC;IAEM,2DAA8B,GAArC;QAAA,iBASC;QARG,OAAO,IAAI,sCAA4B,CAAC,UAAC,IAAI;YACzC,IAAI,yBAAe,CAAC,QAAQ,CAAC,SAAS,IAAI,qBAAS,CAAC,OAAO;gBAAE,OAAO;YACpE,QAAQ,IAAI,EAAE;gBACV,KAAK,+BAAkB,CAAC,QAAQ;oBAC5B,KAAI,CAAC,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC;oBAC3B,MAAM;aACb;QACL,CAAC,EAAE,IAAI,CAAC,CAAC;IACb,CAAC;IAEM,wCAAW,GAAlB;QAEI,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,KAAK,CAAC;QAC5B,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,KAAK,CAAC;IAEhC,CAAC;IAEM,uCAAU,GAAjB;QAEI,IAAI,sBAAY,CAAC,QAAQ,CAAC,cAAc,IAAI,+BAAkB,CAAC,SAAS,EAAE;YACtE,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC;SAC9B;aAAM;YACH,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC;YAC3B,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC;SAC9B;IACL,CAAC;;IA3CD;QADC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;sDACD,EAAE,oBAAF,EAAE,CAAC,IAAI;uDAAQ;IAEhC;QADC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;sDACD,EAAE,oBAAF,EAAE,CAAC,IAAI;uDAAQ;IAEhC;QADC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;sDACC,EAAE,oBAAF,EAAE,CAAC,IAAI;yDAAO;IAEjC;QADC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;sDACC,EAAE,oBAAF,EAAE,CAAC,IAAI;yDAAO;IAThB,kBAAkB;QADtC,OAAO;OACa,kBAAkB,CA+CtC;IAAD,yBAAC;CA/CD,AA+CC,CA/C+C,EAAE,CAAC,SAAS,GA+C3D;kBA/CoB,kBAAkB","file":"","sourceRoot":"/","sourcesContent":["import {GameState} from '../../Framework/Process/Enum/GameState'\r\nimport SlotGameManager from '../../Framework/Process/SlotGameManager'\r\nimport {SceneDirectionType} from '../../Framework/Scene/Enum/SceneStyle'\r\nimport SceneManager from '../../Framework/Scene/SceneManager'\r\nimport SceneDirectionChangeNotification from \"../../Framework/Scene/SceneNotification/SceneDirectionChangeNotification\";\r\nimport SceneDirectionChangeObserver from \"../../Framework/Scene/SceneObserver/SceneDirectionChangeObserver\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n\r\n@ccclass\r\nexport default class MainGameController extends cc.Component {\r\n\r\n    @property(cc.Node)\r\n    private freeBGH: cc.Node = null;\r\n    @property(cc.Node)\r\n    private freeBGV: cc.Node = null;\r\n    @property(cc.Node)\r\n    private normalBGH: cc.Node = null\r\n    @property(cc.Node)\r\n    private normalBGV: cc.Node = null\r\n    public static instance: MainGameController;\r\n\r\n    protected onLoad() {\r\n        MainGameController.instance = this;\r\n        this.freeBGH.active = false;\r\n        this.freeBGV.active = false;\r\n        SceneDirectionChangeNotification\r\n            .instance.subscribe(this.sceneDirectionObserverListener(), true);\r\n    }\r\n\r\n    public sceneDirectionObserverListener(): SceneDirectionChangeObserver {\r\n        return new SceneDirectionChangeObserver((type) => {\r\n            if (SlotGameManager.instance.gameState != GameState.FREEING) return;\r\n            switch (type) {\r\n                case SceneDirectionType.PORTRAIT:\r\n                    this.freeBGV.active = true;\r\n                    break;\r\n            }\r\n        }, this);\r\n    }\r\n\r\n    public closeFreeBG() {\r\n\r\n        this.freeBGH.active = false;\r\n        this.freeBGV.active = false;\r\n\r\n    }\r\n\r\n    public showFreeBG() {\r\n\r\n        if (SceneManager.instance.sceneDirection == SceneDirectionType.LANDSCAPE) {\r\n            this.freeBGH.active = true;\r\n        } else {\r\n            this.freeBGH.active = true;\r\n            this.freeBGV.active = true;\r\n        }\r\n    }\r\n}"]}