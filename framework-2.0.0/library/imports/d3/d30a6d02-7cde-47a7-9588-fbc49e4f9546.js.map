{"version":3,"sources":["assets\\script\\Framework\\Process\\Procress\\GameProcess.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;GAKG;AACH;IAgBI,qBAAY,SAA8B;QACtC,IAAI,CAAC,mBAAmB,GAAG,SAA6C,CAAC;QACzE,IAAI,CAAC,OAAO,GAAG,IAAI,GAAG,EAAuB,CAAC;IAClD,CAAC;IAED,8BAAQ,GAAR;QACI,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,CAAC;QACpD,OAAO,IAAI,CAAC;IAChB,CAAC;IAED,iCAAW,GAAX;QAEI,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,mBAAmB,CAAC,WAAW,CAAC,CAAC;QAEvD,OAAO,IAAI,CAAC;IAChB,CAAC;IAED,2BAAK,GAAL;QACI,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,CAAC;QACjD,OAAO,IAAI,CAAC;IAChB,CAAC;IAED,oCAAc,GAAd;QACI,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,mBAAmB,CAAC,cAAc,CAAC,CAAC;QAC1D,OAAO,IAAI,CAAC;IAChB,CAAC;IAEY,2BAAK,GAAlB;uCAAsB,OAAO;;;;;;;wBACN,KAAA,SAAA,IAAI,CAAC,OAAO,CAAA;;;;wBAAtB,MAAM;wBACX,qBAAM,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,mBAAmB,CAAC,EAAA;;wBAA5C,SAA4C,CAAC;;;;;;;;;;;;;;;;;;;;KAEpD;IACL,kBAAC;AAAD,CAhDA,AAgDC,IAAA","file":"","sourceRoot":"/","sourcesContent":["/**\r\n * @Author XIAO-LI-PIN\r\n * @Description 任何遊戲皆可用流程\r\n * @Date 2021-05-14 下午 03:07\r\n * @Version 1.0\r\n */\r\nexport default class GameProcess implements IGameProcess {\r\n\r\n    /**\r\n     * 保存使用者流程\r\n     * @type {Set<Function>}\r\n     * @private\r\n     */\r\n    private readonly process: Set<() => Promise<void>|void>;\r\n\r\n    /**\r\n     * 流程執行\r\n     * @type {IGameProcedureExecutionContainer}\r\n     * @private\r\n     */\r\n    private readonly _executionContainer: IGameProcedureExecutionContainer;\r\n\r\n    constructor(container: IExecutionContainer) {\r\n        this._executionContainer = container as IGameProcedureExecutionContainer;\r\n        this.process = new Set<() => Promise<void>>();\r\n    }\r\n\r\n    onCreate(): this {\r\n        this.process.add(this._executionContainer.onCreate);\r\n        return this;\r\n    }\r\n\r\n    onExecution(): this {\r\n\r\n        this.process.add(this._executionContainer.onExecution);\r\n\r\n        return this;\r\n    }\r\n\r\n    onEnd(): this {\r\n        this.process.add(this._executionContainer.onEnd);\r\n        return this;\r\n    }\r\n\r\n    onChangeStatus(): this {\r\n        this.process.add(this._executionContainer.onChangeStatus);\r\n        return this;\r\n    }\r\n\r\n    public async start(): Promise<void> {\r\n        for (let method of this.process) {\r\n            await method.apply(this._executionContainer);\r\n        }\r\n    }\r\n}"]}