{"version":3,"sources":["assets\\script\\MainGameScript\\Controller\\WinLevelController.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import AudioManager, {Effect, Music, EffectStop} from '../../Framework/Audio/AudioManager'\r\nimport {GameState} from '../../Framework/Process/Enum/GameState'\r\nimport UserMoneyChangeNotification from \"../../Framework/Process/GameNotification/UserMoneyChangeNotification\";\r\nimport UserWinPointStateNotification from \"../../Framework/Process/GameNotification/UserWinPointStateNotification\";\r\nimport SlotGameManager from '../../Framework/Process/SlotGameManager'\r\nimport {ResponseType} from \"../../Framework/WebResponse/Enum/ResponseType\";\r\nimport NoLineFreeResult from \"../../Framework/WebResponse/SeverDataModel/FreeResult/NoLineFreeResult\";\r\nimport NoLineResult from \"../../Framework/WebResponse/SeverDataModel/NormalResult/NoLineResult\";\r\nimport NoLineTableInfo from \"../../Framework/WebResponse/SeverDataModel/TableInfo/NoLineTableInfo\";\r\nimport {WebResponseManager} from '../../Framework/WebResponse/WebResponseManager'\r\nimport {Loading} from \"./LoadingDialogController\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class WinLevelController extends cc.Component {\r\n\r\n    @property(cc.Label)\r\n    private winPointLabel: cc.Label = null;\r\n\r\n    @property(sp.Skeleton)\r\n    private winSpineBorder: sp.Skeleton = null;\r\n\r\n    @property(sp.Skeleton)\r\n    private winSpine: sp.Skeleton = null;\r\n\r\n    @property(cc.Node)\r\n    private winLevel: cc.Node[] = [];\r\n\r\n    private spineData: { MEGA_WIN_OPEN: string; BIG_WIN_OPEN: string; SUPER_WIN_OPEN: string; WIN_BORDER_OPEN: string; FREE_TITLE_OPEN: string; SUPER_WIN_LOOP: string; WIN_BORDER_LOOP: string; BIG_WIN_LOOP: string; MEGA_WIN_LOOP: string; FREE_TITLE_LOOP: string }\r\n    private winLevelRange: Array<number>;\r\n    private totalPoint: Array<number>;\r\n    private isNumberRun: boolean;\r\n    private startNum: number;\r\n    private pointSplitIndex: number;\r\n    private point: number;\r\n    private userNowBet: number;\r\n    private isBigWinOpen: boolean;\r\n    private isSuperWinOpen: boolean;\r\n    private isMegaWinOpen: boolean;\r\n    private levelWinPoint: number\r\n    private normalResult: NoLineResult;\r\n    private freeResult: NoLineFreeResult;\r\n    private tableInfo: NoLineTableInfo;\r\n    private resolve: (value: (PromiseLike<void> | void)) => void;\r\n    public static instance: WinLevelController;\r\n\r\n    protected onLoad() {\r\n        WinLevelController.instance = this;\r\n        this.normalResult =                                                            //拿取該遊戲一般狀態model\r\n            WebResponseManager\r\n                .instance<NoLineResult>()\r\n                .getResult(ResponseType.NORMAL);\r\n        this.freeResult =                                                              //拿取該遊戲免費狀態model\r\n            WebResponseManager\r\n                .instance<NoLineFreeResult>()\r\n                .getResult(ResponseType.FREE);\r\n        this.tableInfo =                                                                //拿取該遊戲基本資料model\r\n            WebResponseManager\r\n                .instance<NoLineTableInfo>()\r\n                .getResult(ResponseType.TABLE_INFO);\r\n        this.node.active = false;                                                       //初始押注prefab組件為隱藏\r\n        this.winPointLabel.string = \"\";                                                 //初始押注分數 label 為空\r\n        this.winLevelRange = this.tableInfo.LevelWinPoint;                              //遊戲前三個等級的押注倍率\r\n        this.winLevelRange.push(60, 70);                                                //額外新增押注倍率\r\n        this.totalPoint = new Array<number>();\r\n        this.spineData = {                                                              //贏分,spine動畫\r\n            FREE_TITLE_OPEN: \"0Animate_FreespinsComeout\",\r\n            FREE_TITLE_LOOP: \"0Animate_FreespinsRoop\",\r\n            BIG_WIN_OPEN: \"1Animate_Comeout\",\r\n            BIG_WIN_LOOP: \"2Animate_BigWin\",\r\n            SUPER_WIN_OPEN: \"3Animate_SuperComeout\",\r\n            SUPER_WIN_LOOP: \"4Animate_SuperWin\",\r\n            MEGA_WIN_OPEN: \"5Animate_MegaComeout\",\r\n            MEGA_WIN_LOOP: \"6Animate_MegaWin\",\r\n            WIN_BORDER_OPEN: \"1Animate_ComeoutBG\",\r\n            WIN_BORDER_LOOP: \"2~6Animate_BG\",\r\n        }\r\n    }\r\n\r\n    initializeSpine() {\r\n        this.resolve = null;\r\n        //當前獲獎分數\r\n        this.userNowBet = this.tableInfo.LineTotalBet[SlotGameManager.instance.userBetPoint.LineBet];\r\n        this.startNum = 0;                      //當前開始跑分的初始分數\r\n        this.pointSplitIndex = 0;               //當前尋訪第幾個Level\r\n        this.isNumberRun = false;               //當前是否能開始跑分\r\n        this.winPointLabel.string = \"\";         //當前顯示跑到幾分\r\n        this.node.active = true;                //打開整個node\r\n        this.totalPoint.length = 0;             //初始拆分的數字\r\n        this.levelWinPoint = 0                  //當前跑到第幾個拆分的數字儲存用\r\n        this.showBigWin();                      //開啟Big Win\r\n    }\r\n\r\n    public totalPointSplit(point) {\r\n\r\n        let totalPoint = point;\r\n\r\n        let numberSplit = [];\r\n\r\n        let count = 0;\r\n\r\n        let beforePoint = 0;\r\n        let afterPoint = 0;\r\n\r\n        while (true) {\r\n            if (count == 0) {\r\n                numberSplit.push(this.userNowBet * this.winLevelRange[count]);\r\n            }\r\n            if (count == this.winLevelRange.length - 1) {\r\n                totalPoint - afterPoint > afterPoint ?\r\n                    numberSplit.push(afterPoint - beforePoint, totalPoint - afterPoint) : numberSplit.push(totalPoint - beforePoint);\r\n\r\n                break;\r\n            }\r\n            if (count > 0) {\r\n                numberSplit.push(afterPoint - beforePoint);\r\n            }\r\n\r\n            if (totalPoint - afterPoint < 0) {\r\n                break;\r\n            }\r\n\r\n            if (count < this.winLevelRange.length) {\r\n                count++;\r\n                beforePoint = this.userNowBet * this.winLevelRange[count - 1];\r\n                afterPoint = this.userNowBet * this.winLevelRange[count];\r\n            }\r\n        }\r\n        this.totalPoint = numberSplit;\r\n        cc.log(this.totalPoint)\r\n    }\r\n\r\n    @Effect(\"runPoint\")\r\n    private runTotalWinPoint() {\r\n        this.isNumberRun = true;\r\n    }\r\n\r\n    @Loading(\"prefab\")\r\n    public showWinAboveState(point: number, resolve: (value: (PromiseLike<void> | void)) => void) {\r\n        this.initializeSpine();\r\n        this.totalPointSplit(point);\r\n        this.point = point;\r\n        this.scheduleOnce(() => {\r\n            this.runTotalWinPoint();\r\n            this.node.once(cc.Node.EventType.TOUCH_END, this.runPointTouchEnd, this);\r\n            cc.systemEvent.once(cc.SystemEvent.EventType.KEY_DOWN, this.keyboardEvent, this);\r\n        }, 0.5);\r\n        this.resolve = resolve;\r\n    }\r\n\r\n    private keyboardEvent(event) {\r\n        switch (event.keyCode) {\r\n            case cc.macro.KEY.space:\r\n                this.runPointTouchEnd();\r\n                break;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 當點擊畫面時,直接顯示最終答案\r\n     * @private\r\n     */\r\n    private runPointTouchEnd() {\r\n        this.pointSplitIndex = this.totalPoint.length - 1;\r\n        this.startNum = this.point;\r\n    }\r\n\r\n    /**\r\n     * 當前每個獲獎等級需跑的時間\r\n     * @param {number} pointSplitIndex\r\n     * @return {number}\r\n     * @private\r\n     */\r\n    private checkTimer(pointSplitIndex: number): number {\r\n        let time;\r\n        switch (pointSplitIndex) {\r\n            case 0 :\r\n                time = 4;\r\n                break;\r\n            case 1 :\r\n                time = 3;\r\n                break;\r\n            case 2 :\r\n                time = 3;\r\n                break;\r\n            case 3 :\r\n                time = 2;\r\n                break;\r\n            case 4 :\r\n                time = 2;\r\n                break;\r\n            case 5 :\r\n                time = 2;\r\n                break;\r\n            default:\r\n                cc.log(\"class WinLevelController.timerSetting() 有錯誤:\", pointSplitIndex);\r\n        }\r\n        return time;\r\n    }\r\n\r\n    @Music(\"bigWin3\")\r\n    private showBigWin() {\r\n        this.isBigWinOpen = true;\r\n        this.winSpine.setAnimation(0, this.spineData.BIG_WIN_OPEN, false);\r\n        this.winSpine.addAnimation(0, this.spineData.BIG_WIN_LOOP, true);\r\n        this.winSpineBorder.setAnimation(0, this.spineData.WIN_BORDER_OPEN, false);\r\n        this.winSpineBorder.addAnimation(0, this.spineData.WIN_BORDER_LOOP, true);\r\n        this.winLevel[1].active = false;\r\n        this.winLevel[2].active = false;\r\n    }\r\n\r\n    private showSuperWin() {\r\n        this.isBigWinOpen = false;\r\n        this.isSuperWinOpen = true;\r\n        this.winSpine.setAnimation(0, this.spineData.SUPER_WIN_OPEN, false);\r\n        this.winSpine.addAnimation(0, this.spineData.SUPER_WIN_LOOP, true);\r\n        this.winLevel[1].active = true;\r\n    }\r\n\r\n    private showMegaWin() {\r\n        this.isBigWinOpen = false;\r\n        this.isSuperWinOpen = false;\r\n        this.isMegaWinOpen = true;\r\n        this.winSpine.setAnimation(0, this.spineData.MEGA_WIN_OPEN, false);\r\n        this.winSpine.addAnimation(0, this.spineData.MEGA_WIN_LOOP, true);\r\n        this.winLevel[2].active = true;\r\n    }\r\n\r\n    /**\r\n     * 金額跑完時,發送更新user金錢欄位,與贏分欄位\r\n     * @param point\r\n     */\r\n    userMoneyEventEmit(point) {\r\n        if (SlotGameManager.instance.gameState === GameState.PLAYING) {\r\n            let level = this.freeResult.BaseLevelWin\r\n            UserWinPointStateNotification.instance.notify(point, level);\r\n        } else if (SlotGameManager.instance.gameState == GameState.FREEING) {\r\n            let point = this.freeResult.FreeSpinWin;\r\n            let level = this.freeResult.BaseLevelWin\r\n            UserWinPointStateNotification.instance.notify(point, level);\r\n        }\r\n        if (SlotGameManager.instance.gameState != GameState.FREEING) {\r\n            UserMoneyChangeNotification.instance.notify(this.normalResult.UserPointAfter);\r\n        }\r\n    }\r\n    /**\r\n     * 分數跑完時\r\n     * @param {number} totalPoint\r\n     */\r\n    @Music(\"bigWinEnd\")\r\n    @EffectStop(\"runPoint\")\r\n    updateWinPointEnd(totalPoint: number) {\r\n        this.winPointLabel.string = new Intl.NumberFormat().format(totalPoint);\r\n        this.userMoneyEventEmit(totalPoint);\r\n        this.isNumberRun = false;\r\n        //時間到後初始所有參數\r\n        this.scheduleOnce(() => {\r\n            this.winPointLabel.string = \"\";\r\n            this.isBigWinOpen = false;\r\n            this.isMegaWinOpen = false;\r\n            this.isSuperWinOpen = false;\r\n            this.node.active = false;\r\n            if (SlotGameManager.instance.gameState == GameState.FREEING) {\r\n                AudioManager.instance.musicPlay(\"FBS\");\r\n            } else {\r\n                AudioManager.instance.musicPlay(\"NBS\")\r\n            }\r\n            this.resolve();\r\n        }, 5);\r\n    }\r\n\r\n    protected update(dt: number) {\r\n        if (this.isNumberRun) {\r\n            let totalPoint = this.point;\r\n            let time = this.checkTimer(this.pointSplitIndex);\r\n            if (this.pointSplitIndex == 2 && !this.isSuperWinOpen) {\r\n                this.showSuperWin();\r\n            }\r\n            if (this.pointSplitIndex >= 3 && !this.isMegaWinOpen) {\r\n                this.showMegaWin();\r\n            }\r\n            //當分數到達時呼叫\r\n            if (this.startNum >= totalPoint) {\r\n                this.updateWinPointEnd(totalPoint);\r\n                return;\r\n            }\r\n            let numberFormat = new Intl.NumberFormat().format(Math.floor(this.startNum * 10) / 10);\r\n            if (numberFormat.indexOf(\".\") == -1) {\r\n                numberFormat = numberFormat + \".0\"\r\n            }\r\n            this.winPointLabel.string = numberFormat;\r\n            this.startNum += this.totalPoint[this.pointSplitIndex] / time * dt;\r\n            //當前跑分要到達的level數字\r\n            if (this.pointSplitIndex == 0 && this.levelWinPoint != 0) {\r\n                this.levelWinPoint = this.userNowBet * this.totalPoint[this.pointSplitIndex];\r\n            }\r\n            if (this.startNum >= this.levelWinPoint) {\r\n                if (this.pointSplitIndex == this.totalPoint.length - 1) {\r\n                    return;\r\n                }\r\n                this.pointSplitIndex++;\r\n                this.levelWinPoint += this.totalPoint[this.pointSplitIndex];\r\n            }\r\n        }\r\n    }\r\n}"]}