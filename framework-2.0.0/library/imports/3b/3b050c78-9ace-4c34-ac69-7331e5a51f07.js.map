{"version":3,"sources":["assets\\script\\Framework\\LoadResources\\LoadType\\PrefabLoad.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,sEAA4D;AAC5D,yDAAoD;AACpD,gDAA2C;AAC3C,oDAA+C;AAE/C;IAAwC,8BAAS;IAE7C,oBAAY,QAAgB,EAAE,IAAS,EAAE,GAAW,EAAE,MAAc;eAChE,kBAAM,QAAQ,EAAE,IAAI,EAAE,GAAG,EAAE,MAAM,CAAC;IAEtC,CAAC;IAED,oCAAe,GAAf,UAAgB,GAAW,EAAE,KAAuB;;;YAEhD,KAAmB,IAAA,UAAA,SAAA,KAAK,CAAA,4BAAA,+CAAE;gBAArB,IAAI,MAAM,kBAAA;gBAEX,IAAI,wBAAc,CAAC,QAAQ,CAAC,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE;oBAEpD,sBAAY,CAAC,QAAQ,CAAC,YAAY,CAAC,4BAAS,CAAC,WAAW,EAAK,MAAM,CAAC,IAAI,uGAA8B,CAAC,CAAA;oBACvG,OAAO;iBACV;qBAAM;oBACH,wBAAc,CAAC,QAAQ,CAAC,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;iBAC9D;aACJ;;;;;;;;;QAED,UAAU;QACV,gCAAgC;QAChC,IAAI,CAAC,iBAAiB,EAAE,CAAC;IAE7B,CAAC;IACL,iBAAC;AAAD,CAzBA,AAyBC,CAzBuC,mBAAS,GAyBhD","file":"","sourceRoot":"/","sourcesContent":["import {ErrorType} from \"../../Error/Enum/ErrorManagerEnum\";\r\nimport ErrorManager from \"../../Error/ErrorManager\";\r\nimport ALoadType from \"../ILoad/ALoadType\";\r\nimport LoadResManager from \"../LoadResManager\";\r\n\r\nexport default class PrefabLoad extends ALoadType {\r\n\r\n    constructor(dataName: string, type: any, url: string, folder: string) {\r\n        super(dataName, type, url, folder);\r\n\r\n    }\r\n\r\n    setResToManager(key: string, asset: Array<cc.Prefab>) {\r\n\r\n        for (let prefab of asset) {\r\n\r\n            if (LoadResManager.instance.prefabRes.has(prefab.name)) {\r\n\r\n                ErrorManager.instance.executeError(ErrorType.LoadErrorFW, `${prefab.name} prefab名稱重複,請檢查是否有相同名稱prefab`)\r\n                return;\r\n            } else {\r\n                LoadResManager.instance.prefabRes.set(prefab.name, prefab);\r\n            }\r\n        }\r\n\r\n        //目的解決異步操作\r\n        //當資源都載入到LoadManager時才回傳以載入完成的狀態\r\n        this.updateProgressEnd();\r\n\r\n    }\r\n}"]}