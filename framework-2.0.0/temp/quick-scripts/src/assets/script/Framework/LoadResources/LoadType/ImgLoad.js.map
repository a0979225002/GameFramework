{"version":3,"sources":["assets\\script\\Framework\\LoadResources\\LoadType\\ImgLoad.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,gDAA2C;AAC3C,oDAA+C;AAE/C;IAAqC,2BAAS;IAE1C,iBAAY,QAAgB,EAAE,IAAS,EAAE,GAAW,EAAE,MAAc;eAChE,kBAAM,QAAQ,EAAE,IAAI,EAAE,GAAG,EAAE,MAAM,CAAC;IAEtC,CAAC;IAED,WAAW;IACX,iCAAe,GAAf,UAAgB,QAAgB,EAAE,KAAqB;;QAEnD,IAAI,SAAS,GAAgC,IAAI,GAAG,EAA0B,CAAC;;YAC/E,KAAmB,IAAA,KAAA,SAAA,KAAK,CAAC,CAAC,CAAC,CAAC,eAAe,EAAE,CAAA,gBAAA,4BAAE;gBAA1C,IAAI,MAAM,WAAA;gBAEX,6BAA6B;gBAC7B,yCAAyC;gBACzC,IAAI,SAAS,GAAG,QAAQ,CAAC,WAAW,EAAE,CAAC;gBACvC,IAAI,SAAS,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE;oBACzB,IAAI,QAAQ,GAAG,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,EAAE,CAAC,CAAC;oBACrD,SAAS,CAAC,GAAG,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;iBACnC;qBAAM;oBACH,IAAI,UAAU,GAAG,MAAM,CAAC,IAAI,CAAC;oBAC7B,SAAS,CAAC,GAAG,CAAC,UAAU,EAAE,MAAM,CAAC,CAAC;iBACrC;aACJ;;;;;;;;;QAED,wBAAc,CAAC,QAAQ,CAAC,MAAM,CAAC,GAAG,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC;QAExD,UAAU;QACV,gCAAgC;QAChC,IAAI,CAAC,iBAAiB,EAAE,CAAC;IAE7B,CAAC;IAEL,cAAC;AAAD,CAjCA,AAiCC,CAjCoC,mBAAS,GAiC7C","file":"","sourceRoot":"/","sourcesContent":["import ALoadType from \"../ILoad/ALoadType\";\r\nimport LoadResManager from \"../LoadResManager\";\r\n\r\nexport default class ImgLoad extends ALoadType {\r\n\r\n    constructor(dataName: string, type: any, url: string, folder: string) {\r\n        super(dataName, type, url, folder);\r\n\r\n    }\r\n\r\n    //@Override\r\n    setResToManager(dataName: string, asset: cc.SpriteAtlas) {\r\n\r\n        let spriteMap: Map<string, cc.SpriteFrame> = new Map<string, cc.SpriteFrame>();\r\n        for (let sprite of asset[0].getSpriteFrames()) {\r\n\r\n            //將鍵值轉小寫,如果有使用grid key 作為搜尋資源\r\n            //將無條件將 key 轉成 純數字 例如 : symbol0~10 = 0~10\r\n            let lowerCase = dataName.toLowerCase();\r\n            if (lowerCase.match(\"grid\")) {\r\n                let gridName = sprite.name.replace(/[a-z A-Z]/g, '');\r\n                spriteMap.set(gridName, sprite);\r\n            } else {\r\n                let spriteName = sprite.name;\r\n                spriteMap.set(spriteName, sprite);\r\n            }\r\n        }\r\n\r\n        LoadResManager.instance.imgRes.set(dataName, spriteMap);\r\n\r\n        //目的解決異步操作\r\n        //當資源都載入到LoadManager時才回傳以載入完成的狀態\r\n        this.updateProgressEnd();\r\n\r\n    }\r\n\r\n}"]}