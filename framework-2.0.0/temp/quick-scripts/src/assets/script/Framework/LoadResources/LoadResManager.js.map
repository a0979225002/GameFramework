{"version":3,"sources":["assets\\script\\Framework\\LoadResources\\LoadResManager.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import {IConfigManager} from \"../Config/IConfig/IConfigManager\";\r\nimport {ErrorType} from \"../Error/Enum/ErrorManagerEnum\";\r\nimport ErrorManager from \"../Error/ErrorManager\";\r\nimport Util from \"../GlobalMethod/Util\";\r\nimport WebRequestManager from '../WebRequest/WebRequestManager'\r\nimport {LoadType} from \"./Enum/LoadEnum\";\r\nimport ILoadResManager from \"./ILoad/ILoadResManager\";\r\nimport LoadTypeHandler from \"./LoadTypeHandler\";\r\n\r\nexport default class LoadResManager implements ILoadResManager {\r\n\r\n    private configManager: IConfigManager;\r\n    private static _instance: ILoadResManager;\r\n\r\n    /**\r\n     * 初始加載物件進度\r\n     */\r\n    private _initialLoadState: Map<string, number>;\r\n    /**\r\n     * 次加載,可以在還未加載完成時,也能進入MainGame Scene\r\n     */\r\n    private _secondaryLoadState: Map<string, number>;\r\n    /**\r\n     * img物件保存\r\n     */\r\n    private _imgRes: Map<string, Map<string, cc.SpriteFrame>>;\r\n    /**\r\n     * spine 物件保存\r\n     */\r\n    private _spineRes: Map<string, sp.SkeletonData>;\r\n    /**\r\n     * 讀取後的文件檔案,保存位置\r\n     */\r\n    private _readFileRes: Map<string, Map<string, string>>;\r\n    /**\r\n     * 讀取後的Prefab,保存位置\r\n     */\r\n    private _prefabRes: Map<string, cc.Prefab>;\r\n    /**\r\n     * 音樂保存位置\r\n     */\r\n    private _musicRes: Map<string, cc.AudioClip>;\r\n    /**\r\n     * 外部腳本保存URL地址,單存判斷是否重複加載\r\n     * @type {Set<string>}\r\n     */\r\n    private _scriptRes: Set<string>;\r\n\r\n    /**\r\n     * 場景保存位置\r\n     */\r\n    private _sceneRes: Map<string, cc.SceneAsset>\r\n\r\n    private readonly loadTypeHandler: LoadTypeHandler;\r\n    private callFun: Map<string, (progress: number) => void>;\r\n    private count: number;\r\n    private allProgress: number;\r\n    private beforeProgress: number;\r\n    private allProgressEndCount: number;\r\n\r\n    private constructor(configManager: IConfigManager) {\r\n        this.configManager = configManager;\r\n        this.loadTypeHandler = new LoadTypeHandler();                       //配發要用哪個class執行載入動作\r\n        this._initialLoadState = new Map<string, number>();                 //主加載狀態\r\n        this._secondaryLoadState = new Map<string, number>();               //次加載狀態\r\n        this._imgRes = new Map<string, Map<string, cc.SpriteFrame>>();      //圖片\r\n        this._spineRes = new Map<string, sp.SkeletonData>();                //骨架\r\n        this._readFileRes = new Map<string, Map<string, string>>();         //text文件\r\n        this._prefabRes = new Map<string, cc.Prefab>();                     //預載體\r\n        this.callFun = new Map<string, (progress: number) => void>();       //callback方法\r\n        this._musicRes = new Map<string, cc.AudioClip>();                   //音樂\r\n        this._scriptRes = new Set<string>();                                //外部腳本保存URL地址,單存判斷是否重複加載\r\n        this._sceneRes = new Map<string, cc.SceneAsset>();                  //保存scene場場景資源\r\n        this.count = 0;                                                     //初始要載入數量\r\n        this.allProgress = 0;                                               //初始加載進度\r\n        this.beforeProgress = 0;                                            //初始上次加載的進度\r\n        this.allProgressEndCount = 0;                                       //因精準度問題,額外判斷是否所有資源都加載完畢\r\n    }\r\n\r\n\r\n    /**\r\n     *  懶漢加載\r\n     *  初始化,只讓一個專案產生一次該class\r\n     */\r\n    public static setInstance(configManager: IConfigManager) {\r\n        if (!this._instance) {\r\n            this._instance = new LoadResManager(configManager);\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     *  獲取已經初始化的靜態實例class\r\n     */\r\n    public static get instance(): ILoadResManager {\r\n        if (!this._instance) {\r\n            ErrorManager.instance.executeError(ErrorType.LoadErrorFW, \"該類尚未實例化\");\r\n            return;\r\n        }\r\n        return this._instance;\r\n    }\r\n\r\n    /**\r\n     * 主資源加載物件,監聽是否有callback,隨之返回該狀態\r\n     * @param name\r\n     * @param progress 又加載了多少\r\n     * @param state 該物件加載到幾趴\r\n     */\r\n    loadMainEventCallback(name: string, progress: number, state: number) {\r\n\r\n        this.onlyResEventCallback(name, state);\r\n        //當前總加載進度\r\n        this.allProgress += progress / this.count;\r\n        if (this.allProgress >= 1) this.allProgress = 0.99;//精度問題,不回傳1\r\n\r\n        //因為浮點數精度,由這裏額外判斷所有資源已加載完畢時,加載進度等於1\r\n        if (state == 1) {\r\n            this.allProgressEndCount += 1;\r\n            if (this.allProgressEndCount == this.count) {\r\n                this.allProgress = 1;\r\n            }\r\n        }\r\n\r\n        //當前所有加載的總進度\r\n        if (this.callFun.has(null)) {\r\n\r\n            //預防多個重複進度回傳\r\n            //判斷與上一個進度是一樣的話,將不執行回傳,等待有新進度近來\r\n            if (Util.myFloor(this.beforeProgress, 2) == Util.myFloor(this.allProgress, 2)) {\r\n                return\r\n            } else {\r\n                this.beforeProgress = this.allProgress;\r\n                //回傳當前進度,將精度將低為小數點後兩位\r\n                this.callFun.get(null)(Util.myFloor(this.allProgress, 2));\r\n                if (this.allProgress >= 1) {\r\n                    //當全部加載完後,清除當前加載多少件東西的計數\r\n                    this.count = 0;\r\n                    //事件結束,清除該是保存的function\r\n                    this.callFun.delete(null);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 次資源加載物件,監聽是否有callback,隨之返回該狀態\r\n     * 注意,該狀態無總資源監聽回傳事件\r\n     * @param {string} name\r\n     * @param {number} state\r\n     */\r\n    public loadSecondaryEventCallback(name: string, state: number) {\r\n        this.onlyResEventCallback(name, state);\r\n    }\r\n\r\n    /**\r\n     * 單一資源返回判斷,用戶是否有添加callback參數\r\n     * @param {string} name\r\n     * @param {number} state\r\n     * @private\r\n     */\r\n    private onlyResEventCallback(name: string, state: number) {\r\n\r\n        //如果有綁訂的回傳方法時,將回傳該資源當前的加載進度\r\n        if (this.callFun.has(name)) {\r\n\r\n            this.callFun.get(name)(state);\r\n\r\n            if (state == 1) {\r\n                //事件結束,清除該是保存的function\r\n                this.callFun.delete(name);\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 加載該資料夾底下所有資源 注意: 需存放於 resources中\r\n     * @param {string} name : 自訂義拿取資源時的名稱\r\n     * @param {LoadType} type : 要獲取的資源類型\r\n     * @param {string} url : 要獲取的資源位置\r\n     * @param {boolean} isLanguageUsed : 是否要使用語系位置\r\n     * @return {this}\r\n     */\r\n    loadAsset(name: string, type: LoadType, url: string, isLanguageUsed?: boolean): this {\r\n        this.count += 1;\r\n        if (isLanguageUsed) {\r\n            url = `${url}/${WebRequestManager.instance.UserLanguage}`;\r\n        }\r\n        this.loadTypeHandler.executeLoad(name, type, url);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 加載 該 assetBundle 底下資源\r\n     * 使用此方法者,加載狀態存放次加載中 secondaryLoadState\r\n     * 注意:須於UI勾選配置為Bundle資料夾\r\n     * @param {string} name : 自訂義拿取資源時的名稱\r\n     * @param {LoadType} type : 要獲取的資源類型\r\n     * @param {string} url : 要獲取的資源位置\r\n     * @param {boolean} isLanguageUsed : 是否要使用語系位置\r\n     */\r\n    loadBundle(name: string, type: LoadType, url: string, isLanguageUsed?: boolean): this {\r\n\r\n        if (isLanguageUsed) {\r\n\r\n            url = `${url}/${WebRequestManager.instance.UserLanguage}`\r\n\r\n        }\r\n\r\n        this.loadTypeHandler.executeLoadBundle(name, type, url).then();\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 保存使用者要callback的方法,當有回傳進度時將透過 loadEventCallback方法回傳進度\r\n     * @param callFun\r\n     * @param resName\r\n     */\r\n    callback(callFun: (progress: number) => void, resName?: string) {\r\n        if (resName) {\r\n            if (this.callFun.has(resName)) {\r\n                ErrorManager.instance.executeError(ErrorType.LoadErrorFW, \"如果拿取該資源進度,請勿重複callback\");\r\n                return;\r\n            }\r\n            this.callFun.set(resName, callFun);\r\n            return this;\r\n        } else {\r\n            if (this.callFun.has(null)) {\r\n                ErrorManager.instance.executeError(ErrorType.LoadErrorFW, \"如果拿取總進度,請勿在之前資源尚未加載完前,重複callback\");\r\n                return;\r\n            }\r\n            this.callFun.set(null, callFun);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 查看該資源是否已加載完畢\r\n     * @param name\r\n     * @param isMainResources\r\n     */\r\n    getLoadState(name: string, isMainResources: boolean): boolean {\r\n\r\n        if (isMainResources) {\r\n\r\n            return this._initialLoadState.get(name) == 1;\r\n\r\n        } else {\r\n\r\n            return this._initialLoadState.get(name) == 1;\r\n\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 加載外部腳本\r\n     * @param name\r\n     * @param type\r\n     * @param url\r\n     */\r\n    loadExternalScript(name: string, type: LoadType, url: string) {\r\n\r\n        this.loadTypeHandler.executeLoadExternalScript(name, type, url);\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 重置\r\n     */\r\n    reset() {\r\n\r\n        LoadResManager._instance = null;\r\n\r\n    }\r\n\r\n    //--------------------------------------setter------------------------------------\r\n\r\n    set initialLoadState(value: Map<string, number>) {\r\n        this._initialLoadState = value\r\n    }\r\n\r\n    set secondaryLoadState(value: Map<string, number>) {\r\n        this._secondaryLoadState = value\r\n    }\r\n\r\n    set imgRes(value: Map<string, Map<string, cc.SpriteFrame>>) {\r\n        this._imgRes = value\r\n    }\r\n\r\n    set spineRes(value: Map<string, sp.SkeletonData>) {\r\n        this._spineRes = value\r\n    }\r\n\r\n    set readFileRes(value: Map<string, Map<string, string>>) {\r\n        this._readFileRes = value\r\n    }\r\n\r\n    set prefabRes(value: Map<string, cc.Prefab>) {\r\n        this._prefabRes = value\r\n    }\r\n\r\n    set musicRes(value: Map<string, cc.AudioClip>) {\r\n        this._musicRes = value\r\n    }\r\n\r\n    set scriptRes(value: Set<string>) {\r\n        this._scriptRes = value\r\n    }\r\n\r\n    set sceneRes(value: Map<string, cc.SceneAsset>) {\r\n        this._sceneRes = value\r\n    }\r\n\r\n    //--------------------------------------getter------------------------------------\r\n\r\n    get initialLoadState(): Map<string, number> {\r\n        return this._initialLoadState\r\n    }\r\n\r\n    get secondaryLoadState(): Map<string, number> {\r\n        return this._secondaryLoadState\r\n    }\r\n\r\n    get imgRes(): Map<string, Map<string, cc.SpriteFrame>> {\r\n        return this._imgRes\r\n    }\r\n\r\n    get spineRes(): Map<string, sp.SkeletonData> {\r\n        return this._spineRes\r\n    }\r\n\r\n    get readFileRes(): Map<string, Map<string, string>> {\r\n        return this._readFileRes\r\n    }\r\n\r\n    get prefabRes(): Map<string, cc.Prefab> {\r\n        return this._prefabRes\r\n    }\r\n\r\n    get musicRes(): Map<string, cc.AudioClip> {\r\n        return this._musicRes\r\n    }\r\n\r\n    get scriptRes(): Set<string> {\r\n        return this._scriptRes\r\n    }\r\n\r\n    get sceneRes(): Map<string, cc.SceneAsset> {\r\n        return this._sceneRes\r\n    }\r\n}"]}