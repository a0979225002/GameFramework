{"version":3,"sources":["assets\\script\\Framework\\Template\\ButtonEvent\\MenuButton\\AMenuButtonEvent.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import AudioManager from '../../../Audio/AudioManager'\r\nimport {AutoType} from '../../../Config/Enum/ConfigEnum'\r\nimport AutoStateChangeNotification from \"../../../Process/GameNotification/AutoStateChangeNotification\";\r\nimport UserTotalBetChangeNotification from \"../../../Process/GameNotification/UserTotalBetChangeNotification\";\r\nimport AutoStateChangeObserver from \"../../../Process/GameObserver/AutoStateChangeObserver\";\r\nimport UserTotalBetChangeObserver from \"../../../Process/GameObserver/UserTotalBetChangeObserver\";\r\nimport SlotGameManager from '../../../Process/SlotGameManager'\r\nimport {ResponseType} from \"../../../WebResponse/Enum/ResponseType\";\r\nimport {WebResponseManager} from '../../../WebResponse/WebResponseManager'\r\nimport OverrideComponent from \"../../OverrideComponent\";\r\n\r\nconst {ccclass} = cc._decorator;\r\n\r\n/**\r\n * @Author XIAO-LI-PIN\r\n * @Description (抽象類)MENU主頁面,所有按鈕事件\r\n * @Date 2021-05-26 上午 15:59\r\n * @Version 1.1\r\n */\r\n@ccclass\r\nexport default abstract class AMenuButtonEvent extends OverrideComponent {\r\n    /**\r\n     * 訂閱自動事件\r\n     * @type {UserTotalBetChangeObserver}\r\n     * @private\r\n     */\r\n    private userTotalBetChangeObserver: UserTotalBetChangeObserver;\r\n    /**\r\n     * 訂閱用戶更改押注時事件\r\n     * @type {AutoStateChangeObserver}\r\n     * @private\r\n     */\r\n    private autoStateChangeObserver: AutoStateChangeObserver;\r\n    /**\r\n     * 自訂義初始狀態\r\n     * @protected\r\n     */\r\n    protected abstract onCreate();\r\n    /**\r\n     * 背景音樂按鈕事件\r\n     * @param {boolean} isOnMute : 是否靜音\r\n     * @protected\r\n     */\r\n    protected abstract musicEvent(isOnMute: boolean);\r\n    /**\r\n     * 效果音樂按鈕事件\r\n     * @param {boolean} isOnMute : 是否靜音\r\n     * @protected\r\n     */\r\n    protected abstract effectEvent(isOnMute: boolean);\r\n    /**\r\n     * 自動按鈕事件\r\n     * @param {AutoType} beforeAutoCount : 點擊前的按鈕type\r\n     * @param {AutoType} afterAutoCount : 更新的按鈕type\r\n     * @protected\r\n     */\r\n    protected abstract autoEvent(beforeAutoCount: AutoType, afterAutoCount: AutoType);\r\n    /**\r\n     * 前往設定頁按鈕事件\r\n     * @protected\r\n     */\r\n    protected abstract settingPageTouchEvent();\r\n    /**\r\n     * 前往紀錄頁按鈕事件\r\n     * @protected\r\n     */\r\n    protected abstract recordPageTouchEvent();\r\n    /**\r\n     * 前往說明頁按鈕事件\r\n     * @protected\r\n     */\r\n    protected abstract descriptionPageEvent();\r\n    /**\r\n     * 更換押注事件\r\n     * @param beforeIndex\r\n     * @param afterIndex\r\n     * @protected\r\n     */\r\n    protected abstract totalBetChangeEvent(beforeIndex, afterIndex)\r\n    /**\r\n     * 返回遊戲頁面按鈕事件\r\n     * @protected\r\n     */\r\n    protected abstract goBackTouchEvent();\r\n    /**\r\n     * 返回首頁按鈕監聽事件\r\n     * @protected\r\n     */\r\n    protected abstract goHomeTouchEvent();\r\n\r\n    protected tableInfo:ITableInfoModel;\r\n\r\n    protected onLoad() {\r\n        this.tableInfo =\r\n            WebResponseManager\r\n                .instance<ITableInfoModel>()\r\n                .getResult(ResponseType.TABLE_INFO);\r\n\r\n        this.onCreate();                                                                  //自訂義初始狀態\r\n\r\n        AutoStateChangeNotification                                                       //訂閱自動事件\r\n            .instance.subscribe(this.getAutoStateChangeObserver(), true);\r\n        UserTotalBetChangeNotification                                                    //訂閱用戶更改押注時事件\r\n            .instance.subscribe(this.getUserTotalBetChangeObserver(), true);\r\n    }\r\n\r\n    /**\r\n     * 自動更新當前是否靜音背景音樂\r\n     * 注意:update靜音狀態會依照config初始設定做更新\r\n     * @protected\r\n     */\r\n    protected musicEventListener() {\r\n        let isOnMute = AudioManager.instance.updateMusicOnMute();\r\n        this.musicEvent(isOnMute);\r\n    }\r\n\r\n    /**\r\n     * 自動更新當前是否靜音效果音樂\r\n     * 注意:update靜音狀態會依照config初始設定做更新\r\n     * @protected\r\n     */\r\n    protected effectEventListener() {\r\n        let isOnMute = AudioManager.instance.updateEffectOnMute();\r\n        this.effectEvent(isOnMute);\r\n    }\r\n\r\n    /**\r\n     * 用戶點擊按鈕增加押注點數事件\r\n     * 注意:當用戶增加的押注點數超過最大值,將會自動跳回最小值\r\n     * @protected\r\n     */\r\n    protected betUpEventListener() {\r\n        let beforeBetIndex = SlotGameManager.instance.userBetPoint.LineBet;\r\n        let afterBetIndex = beforeBetIndex+1;\r\n        if (afterBetIndex > this.tableInfo.LineBet.length - 1) {\r\n            afterBetIndex = 0;\r\n        }\r\n        UserTotalBetChangeNotification.instance.notify(beforeBetIndex, afterBetIndex);\r\n    }\r\n\r\n    /**\r\n     * 用戶點擊按鈕增加押注點數事件\r\n     * 注意:當用戶增加的押注點數超過最小值,將會自動跳回最大值\r\n     * @protected\r\n     */\r\n    protected betDownEventListener() {\r\n        let beforeBetIndex = SlotGameManager.instance.userBetPoint.LineBet;\r\n        let afterBetIndex = beforeBetIndex-1;\r\n        if (afterBetIndex < 0) {\r\n            afterBetIndex = this.tableInfo.LineBet.length - 1;\r\n        }\r\n        UserTotalBetChangeNotification.instance.notify(beforeBetIndex, afterBetIndex);\r\n    }\r\n\r\n    /**\r\n     * 當前總押注事件推播接收者\r\n     * 注意:如果要解除推播,將無法在監聽推波事件派發\r\n     * @returns {UserTotalBetChangeObserver}\r\n     * @protected\r\n     */\r\n    protected getUserTotalBetChangeObserver(): UserTotalBetChangeObserver {\r\n        if (!this.userTotalBetChangeObserver) {\r\n            this.userTotalBetChangeObserver = new UserTotalBetChangeObserver((beforeIndex, afterIndex) => {\r\n                this.totalBetChangeEvent(beforeIndex, afterIndex);\r\n            }, this);\r\n        }\r\n        return this.userTotalBetChangeObserver;\r\n    }\r\n\r\n    /**\r\n     * 當前自動狀態事件推播接收者\r\n     * 注意:如果要解除推播,將無法在監聽推波事件派發\r\n     * @returns {UserTotalBetChangeObserver}\r\n     * @protected\r\n     */\r\n    protected getAutoStateChangeObserver(): AutoStateChangeObserver {\r\n        if (!this.autoStateChangeObserver) {\r\n            this.autoStateChangeObserver = new AutoStateChangeObserver((isAutomaticState, beforeAutoCount, afterAutoCount) => {\r\n                this.autoEvent(beforeAutoCount, afterAutoCount);\r\n            }, this);\r\n        }\r\n        return this.autoStateChangeObserver;\r\n    }\r\n\r\n    /**\r\n     * 自動按鈕點擊事件\r\n     * @param event\r\n     * @param {AutoType} callbackType : 哪顆類型的按鈕點擊\r\n     * @protected\r\n     */\r\n    protected autoButtonEventListener(event, callbackType: AutoType) {\r\n        let beforeAutoType = SlotGameManager.instance.autoType;\r\n        AutoStateChangeNotification\r\n            .instance.notify(true, beforeAutoType, callbackType);\r\n    }\r\n}"]}