{"version":3,"sources":["assets\\script\\Framework\\Template\\LookAtFrame\\ALookAtTemplate.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,yGAAoG;AACpG,6FAAwF;AACxF,0DAAqD;AAE9C,IAAA,OAAO,GAAI,EAAE,CAAC,UAAU,QAAjB,CAAkB;AAEhC;;;;;GAKG;AAEH;IAAsD,mCAAiB;IAAvE;;IA+CA,CAAC;IAtBa,gCAAM,GAAhB;QACI,IAAI,CAAC,QAAQ,EAAE,CAAC;QAChB,sCAA4B,CAAC,QAAQ;aAChC,SAAS,CAAC,IAAI,CAAC,2BAA2B,EAAE,EAAE,IAAI,CAAC,CAAC;IAC7D,CAAC;IAED;;;OAGG;IACK,qDAA2B,GAAnC;QAAA,iBAWC;QAVG,IAAI,CAAC,yBAAyB,GAAG,IAAI,kCAAwB,CAAC,UAAC,KAAK,EAAE,MAAM;YACxE,IAAI,MAAM,EAAE;gBACR,IAAI,KAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,MAAM;oBAAE,OAAO;gBACpD,KAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;aAChC;iBAAM;gBACH,IAAI,CAAC,KAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,MAAM;oBAAE,OAAO;gBACrD,KAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC;aAClC;QACL,CAAC,EAAE,IAAI,CAAC,CAAC;QACT,OAAO,IAAI,CAAC,yBAAyB,CAAC;IAC1C,CAAC;IA9CyB,eAAe;QAD5C,OAAO;OACsB,eAAe,CA+C5C;IAAD,sBAAC;CA/CD,AA+CC,CA/CqD,2BAAiB,GA+CtE;kBA/C6B,eAAe","file":"","sourceRoot":"/","sourcesContent":["import ScrollFocusStateNotification from \"../../Slot/SlotNotifivation/ScrollFocusStateNotification\";\r\nimport ScrollFocusStateObserver from \"../../Slot/SlotObserver/ScrollFocusStateObserver\";\r\nimport OverrideComponent from \"../OverrideComponent\";\r\n\r\nconst {ccclass} = cc._decorator;\r\n\r\n/**\r\n * @Author XIAO-LI-PIN\r\n * @Description (抽象類)瞇排模板\r\n * @Date 2021-05-26 下午 17:24\r\n * @Version 1.1\r\n */\r\n@ccclass\r\nexport default abstract class ALookAtTemplate extends OverrideComponent {\r\n\r\n    protected abstract allLookAtEffect: Array<cc.Animation>;\r\n    private _scrollFocusStateObserver: ScrollFocusStateObserver;\r\n\r\n    /**\r\n     * 自應義初始化\r\n     * @protected\r\n     */\r\n    protected abstract onCreate();\r\n\r\n    /**\r\n     * 顯示瞇排特效\r\n     * @param {number} index:第幾列\r\n     * @protected\r\n     */\r\n    protected abstract showLookAtEffect(index: number);\r\n\r\n    /**\r\n     * 關閉瞇排特效\r\n     * @param {number} index : 第幾列\r\n     * @protected\r\n     */\r\n    protected abstract removeLookAtEffect(index: number);\r\n\r\n    protected onLoad() {\r\n        this.onCreate();\r\n        ScrollFocusStateNotification.instance\r\n            .subscribe(this.getScrollFocusStateObserver(), true);\r\n    }\r\n\r\n    /**\r\n     * 瞇排事件訂閱者\r\n     * @private\r\n     */\r\n    private getScrollFocusStateObserver(): ScrollFocusStateObserver {\r\n        this._scrollFocusStateObserver = new ScrollFocusStateObserver((index, isShow) => {\r\n            if (isShow) {\r\n                if (this.allLookAtEffect[index].node.active) return;\r\n                this.showLookAtEffect(index);\r\n            } else {\r\n                if (!this.allLookAtEffect[index].node.active) return;\r\n                this.removeLookAtEffect(index);\r\n            }\r\n        }, this);\r\n        return this._scrollFocusStateObserver;\r\n    }\r\n}"]}