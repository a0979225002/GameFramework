{"version":3,"sources":["assets\\script\\Framework\\WebResponse\\WebResponseManager.ts"],"names":[],"mappings":";;;;;;;AACA,mEAAyD;AACzD,sDAAiD;AAKjD;IAMI,4BAAoB,aAAiC;QACjD,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;QACnC,IAAI,CAAC,aAAa,GAAG,IAAI,GAAG,EAAqC,CAAC;IACtE,CAAC;IAED;;;OAGG;IACW,8BAAW,GAAzB,UAA0B,aAAiC;QACvD,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;YACjB,IAAI,CAAC,SAAS,GAAG,IAAI,kBAAkB,CAAC,aAAa,CAAC,CAAC;SAC1D;IACL,CAAC;IAED;;OAEG;IACW,2BAAQ,GAAtB;QACI,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;YACjB,sBAAY,CAAC,QAAQ,CAAC,YAAY,CAAC,4BAAS,CAAC,kBAAkB,EAAE,SAAS,CAAC,CAAC;YAC5E,OAAO;SACV;QACD,OAAO,IAAI,CAAC,SAAS,CAAC;IAC1B,CAAC;IAEM,8CAAiB,GAAxB,UAAyB,IAAkB,EAAE,KAA0B;QACnE,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;IACxC,CAAC;IAEM,sCAAS,GAAhB,UAAiB,IAAkB;QAC/B,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE;YAC/B,sBAAY,CAAC,QAAQ,CAAC,YAAY,CAAC,4BAAS,CAAC,kBAAkB,EAAK,IAAI,6DAAkB,CAAC,CAAC;YAC5F,OAAO;SACV;QACD,OAAO,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,SAAS,EAAE,CAAC;IACpD,CAAC;IACL,yBAAC;AAAD,CA3CA,AA2CC,IAAA;AA3CY,gDAAkB","file":"","sourceRoot":"/","sourcesContent":["import {ISlotConfigManager} from \"../Config/IConfig/ISlotConfigManager\";\r\nimport {ErrorType} from \"../Error/Enum/ErrorManagerEnum\";\r\nimport ErrorManager from \"../Error/ErrorManager\";\r\nimport {ResponseType} from \"./Enum/ResponseType\";\r\nimport IResponseHandler from \"./ISeverDataModel/IResponseHandler\";\r\nimport {IWebResponseManager} from \"./ISeverDataModel/IWebResponseManager\";\r\n\r\nexport class WebResponseManager<T> implements IWebResponseManager<T> {\r\n\r\n    private static _instance: IWebResponseManager<any>;\r\n    private configManager: ISlotConfigManager;\r\n    private _handlerToMap: Map<ResponseType, IResponseHandler<T>>;\r\n\r\n    private constructor(configManager: ISlotConfigManager) {\r\n        this.configManager = configManager;\r\n        this._handlerToMap = new Map<ResponseType, IResponseHandler<T>>();\r\n    }\r\n\r\n    /**\r\n     *  懶漢加載\r\n     *  初始化,只讓一個專案產生一次該class\r\n     */\r\n    public static setInstance(configManager: ISlotConfigManager) {\r\n        if (!this._instance) {\r\n            this._instance = new WebResponseManager(configManager);\r\n        }\r\n    }\r\n\r\n    /**\r\n     *  獲取已經初始化的靜態實例class\r\n     */\r\n    public static instance<T>(): IWebResponseManager<T> {\r\n        if (!this._instance) {\r\n            ErrorManager.instance.executeError(ErrorType.WebResponseErrorFW, \"該類尚未實例化\");\r\n            return;\r\n        }\r\n        return this._instance;\r\n    }\r\n\r\n    public setResponseModule(type: ResponseType, model: IResponseHandler<T>) {\r\n        this._handlerToMap.set(type, model);\r\n    }\r\n\r\n    public getResult(type: ResponseType): T {\r\n        if (!this._handlerToMap.has(type)) {\r\n            ErrorManager.instance.executeError(ErrorType.WebResponseErrorFW, `${type} 該類型 module你尚未創建`);\r\n            return;\r\n        }\r\n        return this._handlerToMap.get(type).getResult();\r\n    }\r\n}"]}