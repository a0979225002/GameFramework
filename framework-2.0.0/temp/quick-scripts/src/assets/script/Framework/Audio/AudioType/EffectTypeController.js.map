{"version":3,"sources":["assets\\script\\Framework\\Audio\\AudioType\\EffectTypeController.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAAA,sEAA2D;AAC3D,yDAAmD;AACnD,qEAA+D;AAC/D,yDAAsD;AAEtD;;;;;GAKG;AACH;IAII;QACI,IAAI,CAAC,QAAQ,GAAG,IAAI,GAAG,EAAkB,CAAC;IAC9C,CAAC;IAED;;;;OAIG;IACI,mCAAI,GAAX,UAAY,IAAY,EAAE,IAAsB;QAE5C,IAAI,MAAM,GAAW,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAA4B,IAAI;QACxE,IAAI,cAAc,GAAmB,IAAI,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC,CAAI,QAAQ;QAC5E,IAAI,IAAI,GAAY,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAA+B,MAAM;QAC1E,IAAI,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAmC,OAAO;QAC3E,IAAI,KAAc,CAAC;QACnB,EAAE,CAAC,WAAW,CAAC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,CAAG,aAAa;QAEjF,IAAI,CAAC,wBAAc,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE;YAC7C,sBAAY,CAAC,QAAQ,CAAC,YAAY,CAAC,4BAAS,CAAC,OAAO,EAAK,IAAI,4HAA+B,CAAC,CAAC;YAC9F,OAAO;SACV;QAED,IAAI,cAAc,KAAK,+BAAc,CAAC,WAAW,IAAI,KAAK;YAAE,OAAO,CAAE,gBAAgB;QAErF,IAAI,cAAc,KAAK,+BAAc,CAAC,eAAe,IAAI,KAAK,EAAE,EAAI,6BAA6B;YAC7F,EAAE,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;SAC3B;QAED,IAAI,SAAS,GAAG,wBAAc,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAC3D,IAAI,KAAK,GAAG,EAAE,CAAC,WAAW,CAAC,UAAU,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;QACvD,EAAE,CAAC,WAAW,CAAC,SAAS,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;QACxC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;IACnC,CAAC;IAED;;;OAGG;IACI,mCAAI,GAAX,UAAY,IAAY;QAEpB,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE;YAC1B,OAAO;SACV;QACD,EAAE,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QAC7C,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;IAC/B,CAAC;IAED;;OAEG;IACI,sCAAO,GAAd;;;YAEI,KAAgB,IAAA,KAAA,SAAA,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAA,gBAAA,4BAAE;gBAAjC,IAAI,GAAG,WAAA;gBAER,EAAE,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;aAE/C;;;;;;;;;QAED,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC;IAC1B,CAAC;IACL,2BAAC;AAAD,CAjEA,AAiEC,IAAA","file":"","sourceRoot":"/","sourcesContent":["import {ErrorType} from '../../Error/Enum/ErrorManagerEnum'\r\nimport ErrorManager from '../../Error/ErrorManager'\r\nimport LoadResManager from '../../LoadResources/LoadResManager'\r\nimport {AudioStateType} from \"../Enum/AudioStateType\";\r\n\r\n/**\r\n * @Author XIAO-LI-PIN\r\n * @Description 效果音效撥放|暫停控制器\r\n * @Date 2021-04-14 下午 20:24\r\n * @Version 1.1\r\n */\r\nexport default class EffectTypeController implements IAudioType {\r\n\r\n    private effectID: Map<string, number>;\r\n\r\n    constructor() {\r\n        this.effectID = new Map<string, number>();\r\n    }\r\n\r\n    /**\r\n     * 撥放效果音效,並配合享元資料,作相對應的撥放模式處理\r\n     * @param {string} name\r\n     * @param {Map<string, any>} data : 撥放模式資料\r\n     */\r\n    public play(name: string, data: Map<string, any>) {\r\n\r\n        let volume: number = data.get(\"volume\");                            //音量\r\n        let canSuperimpose: AudioStateType = data.get(\"canSuperimpose\");    //可否疊加撥放\r\n        let loop: boolean = data.get(\"loop\");                               //循環狀態\r\n        let id = this.effectID.get(name);                                   //該音樂ID\r\n        let state: boolean;\r\n        cc.audioEngine.getState(id) == -1 ? state = false : state = true;   //判斷該音樂是否在正撥放\r\n\r\n        if (!LoadResManager.instance.musicRes.has(name)) {\r\n            ErrorManager.instance.executeError(ErrorType.MusicFW, `${name} 無此資源,請檢察資源類 musicRes內的資源是否錯誤`);\r\n            return;\r\n        }\r\n\r\n        if (canSuperimpose === AudioStateType.NOT_PLAYING && state) return;  //如果當前正在撥放,將直接離開\r\n\r\n        if (canSuperimpose === AudioStateType.CLEAR_TO_REPLAY && state) {   //如果當前正在撥放,將直接停止正在撥放的音樂,並重新撥放\r\n            cc.audioEngine.stop(id);\r\n        }\r\n\r\n        let audioClip = LoadResManager.instance.musicRes.get(name);\r\n        let effID = cc.audioEngine.playEffect(audioClip, loop);\r\n        cc.audioEngine.setVolume(effID, volume);\r\n        this.effectID.set(name, effID);\r\n    }\r\n\r\n    /**\r\n     * 停止該音樂,並清除該Map effectID\r\n     * @param {string} name\r\n     */\r\n    public stop(name: string) {\r\n\r\n        if (!this.effectID.has(name)) {\r\n            return;\r\n        }\r\n        cc.audioEngine.stop(this.effectID.get(name));\r\n        this.effectID.delete(name);\r\n    }\r\n\r\n    /**\r\n     * 停止所有音效,並清除整個Map effectID\r\n     */\r\n    public stopAll() {\r\n\r\n        for (let key of this.effectID.keys()) {\r\n\r\n            cc.audioEngine.stop(this.effectID.get(key));\r\n\r\n        }\r\n\r\n        this.effectID.clear();\r\n    }\r\n}"]}