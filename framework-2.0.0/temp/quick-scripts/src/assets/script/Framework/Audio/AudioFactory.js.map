{"version":3,"sources":["assets\\script\\Framework\\Audio\\AudioFactory.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import SlotConfigManager from '../Config/SlotConfigManager'\r\nimport AudioManager from './AudioManager'\r\nimport Effect from './AudioType/EffectTypeController'\r\nimport Music from './AudioType/MusicTypeController'\r\nimport {AudioStateType} from \"./Enum/AudioStateType\";\r\nimport IAudioFactory from \"./IAudio/IAudioFactory\";\r\n\r\n/**\r\n * @Author XIAO-LI-PIN\r\n * @Description 音樂工廠類,派發音樂事件\r\n * @Date 2021-05-13 上午 10:24\r\n * @Version 1.1\r\n */\r\nexport default class AudioFactory implements IAudioFactory {\r\n\r\n    private readonly musicVolume: number;\r\n    private readonly effectVolume: number;\r\n    private readonly canSuperimpose: boolean;\r\n    private musicOnMute: boolean;\r\n    private effectOnMute: boolean;\r\n    private readonly loop: boolean;\r\n    private readonly musicData: Map<string, Map<string, string | boolean | number>>;\r\n    private readonly effectData: Map<string, Map<string, string | AudioStateType | boolean | number>>;\r\n    private musicNormalData : Map<string, string | boolean | number>;\r\n    private effectNormalData: Map<string, string | AudioStateType | boolean | number>;\r\n    private music: Music\r\n    private effect: Effect\r\n\r\n    constructor() {\r\n\r\n        this.musicVolume = SlotConfigManager.instance.musicVolume;                                           //初始音量\r\n        this.effectVolume = SlotConfigManager.instance.effectVolume;                                         //初始音量\r\n        this.canSuperimpose = false;                                                                         //初始無Loop的音樂是否可以疊加\r\n        this.musicOnMute = SlotConfigManager.instance.isMusicOnMute;                                         //初始音樂是否打開\r\n        this.effectOnMute = SlotConfigManager.instance.isEffectOnMute;                                       //初始效果音是否打開\r\n        this.loop = false;                                                                                   //初始音樂循環\r\n        this.musicData = new Map<string, Map<string, string | boolean | number>>();                          //初始享元模式的音樂\r\n        this.effectData = new Map<string, Map<string, string | AudioStateType | boolean | number>>();        //初始享元模式的效果音效\r\n        this.music = new Music()                                                                             //新增播放Music音樂類\r\n        this.effect = new Effect()                                                                           //新增播放Effect音效類\r\n        this.initializeData();                                                                               //初始化享元預設撥放模式\r\n    }\r\n\r\n    /**\r\n     * 初始化享元預設撥放模式\r\n     */\r\n    initializeData(){\r\n\r\n        this.musicNormalData = new Map<string, string | boolean | number>();\r\n        this.effectNormalData = new Map<string, string | AudioStateType | boolean | number>();\r\n\r\n        this.musicNormalData.set(\"volume\",this.musicVolume);\r\n        this.musicNormalData.set(\"loop\",this.loop);\r\n\r\n        this.effectNormalData.set(\"canSuperimpose\",AudioStateType.CLEAR_TO_REPLAY);\r\n        this.effectNormalData.set(\"volume\",this.effectVolume);\r\n        this.effectNormalData.set(\"loop\",this.loop);\r\n\r\n    }\r\n\r\n    /**\r\n     * 保存該背景音樂撥放模式設定\r\n     * @param {string} name :音樂檔名稱\r\n     * @param {number} volume : 音量\r\n     * @param {boolean} loop : 是否循環\r\n     */\r\n    public settingMusic(\r\n        name: string,\r\n        volume: number = this.musicVolume,\r\n        loop: boolean = this.loop) {\r\n        let data: Map<string, string | boolean | number> = new Map<string, string | boolean | number>();\r\n        data.set(\"volume\", volume);\r\n        data.set(\"loop\", loop);\r\n        this.musicData.set(name, data);\r\n\r\n    }\r\n\r\n    /**\r\n     * 保存該效果音效撥放模式設定\r\n     * @param {string} name :音樂檔名稱\r\n     * @param {AudioStateType} canSuperimpose : 是否疊加撥放\r\n     * @param {number} volume : 音量\r\n     * @param {boolean} loop : 是否循環\r\n     */\r\n    public settingEffect(name: string,\r\n                         canSuperimpose: AudioStateType = AudioStateType.NOT_PLAYING,\r\n                         volume: number = this.musicVolume,\r\n                         loop: boolean = this.loop) {\r\n\r\n        let data: Map<string, string | AudioStateType | boolean | number> = new Map<string, string | AudioStateType | boolean | number>();\r\n        data.set(\"canSuperimpose\", canSuperimpose);\r\n        data.set(\"volume\", volume);\r\n        data.set(\"loop\", loop);\r\n        this.effectData.set(name, data);\r\n\r\n    }\r\n\r\n    /**\r\n     * 撥放背景音樂\r\n     * 如果拿取不到享元撥放資料,將拿取預設資料\r\n     * @param {string} name\r\n     */\r\n    musicPlay(name: string) {\r\n        if (!name.trim()) return;                           //檔名空值判斷\r\n        if (AudioManager.instance.musicOnMute) return;      //如果當前為靜音模式\r\n        if (!this.musicData.has(name)) {                    //判斷是否該音樂有撥放資料\r\n            this.musicData.set(name, this.musicNormalData); //保存預設資料\r\n            this.music.play(name, this.musicNormalData);\r\n        } else {\r\n            this.music.play(name, this.musicData.get(name));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 撥放效果音效\r\n     * 如果拿取不到享元撥放資料,將拿取預設資料\r\n     * @param {string} name\r\n     */\r\n    effectPlay(name: string) {\r\n        if (!name.trim()) return;                              //檔名空值判斷\r\n        if (AudioManager.instance.effectOnMute) return;        //如果當前為靜音模式\r\n        if (!this.effectData.has(name)) {                      //判斷是否該音樂有撥放資料\r\n            this.effectData.set(name, this.effectNormalData);  //保存預設資料\r\n            this.effect.play(name, this.effectNormalData);\r\n        } else {\r\n            this.effect.play(name, this.effectData.get(name));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 停止背景音樂\r\n     */\r\n    musicStop() {\r\n        this.music.stop();\r\n    }\r\n\r\n    /**\r\n     * 暫停背景音樂\r\n     */\r\n    musicPause() {\r\n\r\n        this.music.pause();\r\n\r\n    }\r\n\r\n    /**\r\n     * 停止效果音校\r\n     * @param {string} name\r\n     */\r\n    effectStop(name: string) {\r\n\r\n        this.effect.stop(name);\r\n\r\n    }\r\n\r\n    /**\r\n     * 停止所有效果音效\r\n     */\r\n    effectStopAll() {\r\n\r\n        this.effect.stopAll();\r\n\r\n    }\r\n\r\n    /**\r\n     * 獲取該音樂撥放模式,如果返回NUll將照原預設\r\n     * @param {string} name\r\n     * @returns {Map<string, string | boolean | number>}\r\n     */\r\n    getMusicState(name: string) {\r\n\r\n        return this.musicData.get(name);\r\n\r\n    }\r\n\r\n    /**\r\n     * 獲取該音效撥放模式,如果返回NUll將照原預設\r\n     * @param {string} name\r\n     * @returns {Map<string, string | boolean | number>}\r\n     */\r\n    getEffectState(name: string) {\r\n\r\n        return this.effectData.get(name);\r\n\r\n    }\r\n}"]}